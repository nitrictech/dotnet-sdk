syntax = "proto3";
package nitric.proto.schedules.v1;

// protoc plugin options for code generation
option go_package = "github.com/nitrictech/nitric/core/pkg/proto/schedules/v1;schedulespb";
option java_package = "io.nitric.proto.schedules.v1";
option java_multiple_files = true;
option java_outer_classname = "SchedulesService";
option php_namespace = "Nitric\\Proto\\Schedules\\V1";
option csharp_namespace = "Nitric.Proto.Schedules.v1";

// Service for scheduling callbacks on a cadence
service Schedules {
  rpc Schedule(stream ClientMessage) returns (stream ServerMessage);
}

// ClientMessages are sent from the service to the nitric server
message ClientMessage {
  // globally unique ID of the request/response pair
  string id = 1;

  oneof content {
    // Register new a schedule
    RegistrationRequest registration_request = 2;

    // Response to a schedule interval (i.e. response from callback function)
    IntervalResponse interval_response = 3;
  }
}

message IntervalRequest {
  string schedule_name = 1;
}

// ServerMessages are sent from the nitric server to the service
message ServerMessage {
  // globally unique ID of the request/response pair
  string id = 1;

  oneof content {
    // Response to a schedule subscription request
    RegistrationResponse registration_response = 2;

    // A schedule interval trigger request (i.e. call the callback)
    IntervalRequest interval_request = 3;
  }
}

message RegistrationRequest {
  string schedule_name = 1;
  oneof cadence {
    ScheduleEvery every = 10;
    ScheduleCron cron = 11;
  }
}

message ScheduleEvery {
  string rate = 1;
}

message ScheduleCron {
  string expression = 1;
}

message RegistrationResponse {}

message IntervalResponse {}
