// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/deploy/v1/deploy.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nitric.Proto.Deploy.v1 {

  /// <summary>Holder for reflection information generated from proto/deploy/v1/deploy.proto</summary>
  public static partial class DeployReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/deploy/v1/deploy.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DeployReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chxwcm90by9kZXBsb3kvdjEvZGVwbG95LnByb3RvEhBuaXRyaWMuZGVwbG95",
            "LnYxGhxnb29nbGUvcHJvdG9idWYvc3RydWN0LnByb3RvGiBwcm90by9yZXNv",
            "dXJjZS92MS9yZXNvdXJjZS5wcm90bxoYcHJvdG8vZmFhcy92MS9mYWFzLnBy",
            "b3RvImQKD0RlcGxveVVwUmVxdWVzdBIkCgRzcGVjGAEgASgLMhYubml0cmlj",
            "LmRlcGxveS52MS5TcGVjEisKCmF0dHJpYnV0ZXMYAiABKAsyFy5nb29nbGUu",
            "cHJvdG9idWYuU3RydWN0IowBCg1EZXBsb3lVcEV2ZW50EjcKB21lc3NhZ2UY",
            "ASABKAsyJC5uaXRyaWMuZGVwbG95LnYxLkRlcGxveUV2ZW50TWVzc2FnZUgA",
            "EjcKBnJlc3VsdBgCIAEoCzIlLm5pdHJpYy5kZXBsb3kudjEuRGVwbG95VXBF",
            "dmVudFJlc3VsdEgAQgkKB2NvbnRlbnQiJQoSRGVwbG95RXZlbnRNZXNzYWdl",
            "Eg8KB21lc3NhZ2UYASABKAkiLgoIVXBSZXN1bHQSFwoNc3RyaW5nX3Jlc3Vs",
            "dBgBIAEoCUgAQgkKB2NvbnRlbnQiUgoTRGVwbG95VXBFdmVudFJlc3VsdBIP",
            "CgdzdWNjZXNzGAEgASgIEioKBnJlc3VsdBgCIAEoCzIaLm5pdHJpYy5kZXBs",
            "b3kudjEuVXBSZXN1bHQiQAoRRGVwbG95RG93blJlcXVlc3QSKwoKYXR0cmli",
            "dXRlcxgBIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QikAEKD0RlcGxv",
            "eURvd25FdmVudBI3CgdtZXNzYWdlGAEgASgLMiQubml0cmljLmRlcGxveS52",
            "MS5EZXBsb3lFdmVudE1lc3NhZ2VIABI5CgZyZXN1bHQYAiABKAsyJy5uaXRy",
            "aWMuZGVwbG95LnYxLkRlcGxveURvd25FdmVudFJlc3VsdEgAQgkKB2NvbnRl",
            "bnQiFwoVRGVwbG95RG93bkV2ZW50UmVzdWx0IhoKC0ltYWdlU291cmNlEgsK",
            "A3VyaRgBIAEoCSL0AQoNRXhlY3V0aW9uVW5pdBIuCgVpbWFnZRgBIAEoCzId",
            "Lm5pdHJpYy5kZXBsb3kudjEuSW1hZ2VTb3VyY2VIABIPCgd3b3JrZXJzGAog",
            "ASgFEhMKB3RpbWVvdXQYCyABKAVCAhgBEhIKBm1lbW9yeRgMIAEoBUICGAES",
            "DAoEdHlwZRgNIAEoCRI1CgNlbnYYDiADKAsyKC5uaXRyaWMuZGVwbG95LnYx",
            "LkV4ZWN1dGlvblVuaXQuRW52RW50cnkaKgoIRW52RW50cnkSCwoDa2V5GAEg",
            "ASgJEg0KBXZhbHVlGAIgASgJOgI4AUIICgZzb3VyY2UiSwoGQnVja2V0EkEK",
            "DW5vdGlmaWNhdGlvbnMYASADKAsyKi5uaXRyaWMuZGVwbG95LnYxLkJ1Y2tl",
            "dE5vdGlmaWNhdGlvblRhcmdldCJ4ChhCdWNrZXROb3RpZmljYXRpb25UYXJn",
            "ZXQSOAoGY29uZmlnGAEgASgLMigubml0cmljLmZhYXMudjEuQnVja2V0Tm90",
            "aWZpY2F0aW9uQ29uZmlnEhgKDmV4ZWN1dGlvbl91bml0GAIgASgJSABCCAoG",
            "dGFyZ2V0IkQKBVRvcGljEjsKDXN1YnNjcmlwdGlvbnMYASADKAsyJC5uaXRy",
            "aWMuZGVwbG95LnYxLlN1YnNjcmlwdGlvblRhcmdldCIHCgVRdWV1ZSIMCgpD",
            "b2xsZWN0aW9uIggKBlNlY3JldCI4ChJTdWJzY3JpcHRpb25UYXJnZXQSGAoO",
            "ZXhlY3V0aW9uX3VuaXQYASABKAlIAEIICgZ0YXJnZXQiSQoRVG9waWNTdWJz",
            "Y3JpcHRpb24SNAoGdGFyZ2V0GAEgASgLMiQubml0cmljLmRlcGxveS52MS5T",
            "dWJzY3JpcHRpb25UYXJnZXQiJAoDQXBpEhEKB29wZW5hcGkYASABKAlIAEIK",
            "Cghkb2N1bWVudCI0Cg5TY2hlZHVsZVRhcmdldBIYCg5leGVjdXRpb25fdW5p",
            "dBgBIAEoCUgAQggKBnRhcmdldCJKCghTY2hlZHVsZRIMCgRjcm9uGAEgASgJ",
            "EjAKBnRhcmdldBgCIAEoCzIgLm5pdHJpYy5kZXBsb3kudjEuU2NoZWR1bGVU",
            "YXJnZXQi7wMKCFJlc291cmNlEgwKBG5hbWUYASABKAkSLgoEdHlwZRgCIAEo",
            "DjIgLm5pdHJpYy5yZXNvdXJjZS52MS5SZXNvdXJjZVR5cGUSOQoOZXhlY3V0",
            "aW9uX3VuaXQYCiABKAsyHy5uaXRyaWMuZGVwbG95LnYxLkV4ZWN1dGlvblVu",
            "aXRIABIqCgZidWNrZXQYCyABKAsyGC5uaXRyaWMuZGVwbG95LnYxLkJ1Y2tl",
            "dEgAEigKBXRvcGljGAwgASgLMhcubml0cmljLmRlcGxveS52MS5Ub3BpY0gA",
            "EigKBXF1ZXVlGA0gASgLMhcubml0cmljLmRlcGxveS52MS5RdWV1ZUgAEiQK",
            "A2FwaRgOIAEoCzIVLm5pdHJpYy5kZXBsb3kudjEuQXBpSAASKgoGcG9saWN5",
            "GA8gASgLMhgubml0cmljLmRlcGxveS52MS5Qb2xpY3lIABIuCghzY2hlZHVs",
            "ZRgQIAEoCzIaLm5pdHJpYy5kZXBsb3kudjEuU2NoZWR1bGVIABIyCgpjb2xs",
            "ZWN0aW9uGBEgASgLMhwubml0cmljLmRlcGxveS52MS5Db2xsZWN0aW9uSAAS",
            "KgoGc2VjcmV0GBIgASgLMhgubml0cmljLmRlcGxveS52MS5TZWNyZXRIAEII",
            "CgZjb25maWcilAEKBlBvbGljeRIuCgpwcmluY2lwYWxzGAEgAygLMhoubml0",
            "cmljLmRlcGxveS52MS5SZXNvdXJjZRIrCgdhY3Rpb25zGAIgAygOMhoubml0",
            "cmljLnJlc291cmNlLnYxLkFjdGlvbhItCglyZXNvdXJjZXMYAyADKAsyGi5u",
            "aXRyaWMuZGVwbG95LnYxLlJlc291cmNlIjUKBFNwZWMSLQoJcmVzb3VyY2Vz",
            "GAEgAygLMhoubml0cmljLmRlcGxveS52MS5SZXNvdXJjZTKtAQoNRGVwbG95",
            "U2VydmljZRJKCgJVcBIhLm5pdHJpYy5kZXBsb3kudjEuRGVwbG95VXBSZXF1",
            "ZXN0Gh8ubml0cmljLmRlcGxveS52MS5EZXBsb3lVcEV2ZW50MAESUAoERG93",
            "bhIjLm5pdHJpYy5kZXBsb3kudjEuRGVwbG95RG93blJlcXVlc3QaIS5uaXRy",
            "aWMuZGVwbG95LnYxLkRlcGxveURvd25FdmVudDABQpQBChlpby5uaXRyaWMu",
            "cHJvdG8uZGVwbG95LnYxQgdEZXBsb3lzUAFaOmdpdGh1Yi5jb20vbml0cmlj",
            "dGVjaC9uaXRyaWMvY29yZS9wa2cvYXBpL25pdHJpYy9kZXBsb3kvdjGqAhZO",
            "aXRyaWMuUHJvdG8uRGVwbG95LnYxygIWTml0cmljXFByb3RvXERlcGxveVxW",
            "MWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Nitric.Proto.Resource.v1.ResourceReflection.Descriptor, global::Nitric.Proto.Faas.v1.FaasReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.DeployUpRequest), global::Nitric.Proto.Deploy.v1.DeployUpRequest.Parser, new[]{ "Spec", "Attributes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.DeployUpEvent), global::Nitric.Proto.Deploy.v1.DeployUpEvent.Parser, new[]{ "Message", "Result" }, new[]{ "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.DeployEventMessage), global::Nitric.Proto.Deploy.v1.DeployEventMessage.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.UpResult), global::Nitric.Proto.Deploy.v1.UpResult.Parser, new[]{ "StringResult" }, new[]{ "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.DeployUpEventResult), global::Nitric.Proto.Deploy.v1.DeployUpEventResult.Parser, new[]{ "Success", "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.DeployDownRequest), global::Nitric.Proto.Deploy.v1.DeployDownRequest.Parser, new[]{ "Attributes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.DeployDownEvent), global::Nitric.Proto.Deploy.v1.DeployDownEvent.Parser, new[]{ "Message", "Result" }, new[]{ "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.DeployDownEventResult), global::Nitric.Proto.Deploy.v1.DeployDownEventResult.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.ImageSource), global::Nitric.Proto.Deploy.v1.ImageSource.Parser, new[]{ "Uri" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.ExecutionUnit), global::Nitric.Proto.Deploy.v1.ExecutionUnit.Parser, new[]{ "Image", "Workers", "Timeout", "Memory", "Type", "Env" }, new[]{ "Source" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.Bucket), global::Nitric.Proto.Deploy.v1.Bucket.Parser, new[]{ "Notifications" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.BucketNotificationTarget), global::Nitric.Proto.Deploy.v1.BucketNotificationTarget.Parser, new[]{ "Config", "ExecutionUnit" }, new[]{ "Target" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.Topic), global::Nitric.Proto.Deploy.v1.Topic.Parser, new[]{ "Subscriptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.Queue), global::Nitric.Proto.Deploy.v1.Queue.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.Collection), global::Nitric.Proto.Deploy.v1.Collection.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.Secret), global::Nitric.Proto.Deploy.v1.Secret.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.SubscriptionTarget), global::Nitric.Proto.Deploy.v1.SubscriptionTarget.Parser, new[]{ "ExecutionUnit" }, new[]{ "Target" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.TopicSubscription), global::Nitric.Proto.Deploy.v1.TopicSubscription.Parser, new[]{ "Target" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.Api), global::Nitric.Proto.Deploy.v1.Api.Parser, new[]{ "Openapi" }, new[]{ "Document" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.ScheduleTarget), global::Nitric.Proto.Deploy.v1.ScheduleTarget.Parser, new[]{ "ExecutionUnit" }, new[]{ "Target" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.Schedule), global::Nitric.Proto.Deploy.v1.Schedule.Parser, new[]{ "Cron", "Target" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.Resource), global::Nitric.Proto.Deploy.v1.Resource.Parser, new[]{ "Name", "Type", "ExecutionUnit", "Bucket", "Topic", "Queue", "Api", "Policy", "Schedule", "Collection", "Secret" }, new[]{ "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.Policy), global::Nitric.Proto.Deploy.v1.Policy.Parser, new[]{ "Principals", "Actions", "Resources" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deploy.v1.Spec), global::Nitric.Proto.Deploy.v1.Spec.Parser, new[]{ "Resources" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DeployUpRequest : pb::IMessage<DeployUpRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeployUpRequest> _parser = new pb::MessageParser<DeployUpRequest>(() => new DeployUpRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployUpRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployUpRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployUpRequest(DeployUpRequest other) : this() {
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployUpRequest Clone() {
      return new DeployUpRequest(this);
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 1;
    private global::Nitric.Proto.Deploy.v1.Spec spec_;
    /// <summary>
    /// The spec to deploy
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.Spec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct attributes_;
    /// <summary>
    /// A map of attributes related to the deploy request
    /// this allows for adding project identifiers etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployUpRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployUpRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (spec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Spec);
      }
      if (attributes_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Attributes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (spec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Spec);
      }
      if (attributes_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Attributes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployUpRequest other) {
      if (other == null) {
        return;
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Nitric.Proto.Deploy.v1.Spec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          Attributes = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (spec_ == null) {
              Spec = new global::Nitric.Proto.Deploy.v1.Spec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 18: {
            if (attributes_ == null) {
              Attributes = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Attributes);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (spec_ == null) {
              Spec = new global::Nitric.Proto.Deploy.v1.Spec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 18: {
            if (attributes_ == null) {
              Attributes = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Attributes);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeployUpEvent : pb::IMessage<DeployUpEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeployUpEvent> _parser = new pb::MessageParser<DeployUpEvent>(() => new DeployUpEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployUpEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployUpEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployUpEvent(DeployUpEvent other) : this() {
      switch (other.ContentCase) {
        case ContentOneofCase.Message:
          Message = other.Message.Clone();
          break;
        case ContentOneofCase.Result:
          Result = other.Result.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployUpEvent Clone() {
      return new DeployUpEvent(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.DeployEventMessage Message {
      get { return contentCase_ == ContentOneofCase.Message ? (global::Nitric.Proto.Deploy.v1.DeployEventMessage) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.Message;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.DeployUpEventResult Result {
      get { return contentCase_ == ContentOneofCase.Result ? (global::Nitric.Proto.Deploy.v1.DeployUpEventResult) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.Result;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      Message = 1,
      Result = 2,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployUpEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployUpEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Message, other.Message)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      if (ContentCase != other.ContentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contentCase_ == ContentOneofCase.Message) hash ^= Message.GetHashCode();
      if (contentCase_ == ContentOneofCase.Result) hash ^= Result.GetHashCode();
      hash ^= (int) contentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (contentCase_ == ContentOneofCase.Message) {
        output.WriteRawTag(10);
        output.WriteMessage(Message);
      }
      if (contentCase_ == ContentOneofCase.Result) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (contentCase_ == ContentOneofCase.Message) {
        output.WriteRawTag(10);
        output.WriteMessage(Message);
      }
      if (contentCase_ == ContentOneofCase.Result) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contentCase_ == ContentOneofCase.Message) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (contentCase_ == ContentOneofCase.Result) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployUpEvent other) {
      if (other == null) {
        return;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.Message:
          if (Message == null) {
            Message = new global::Nitric.Proto.Deploy.v1.DeployEventMessage();
          }
          Message.MergeFrom(other.Message);
          break;
        case ContentOneofCase.Result:
          if (Result == null) {
            Result = new global::Nitric.Proto.Deploy.v1.DeployUpEventResult();
          }
          Result.MergeFrom(other.Result);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Nitric.Proto.Deploy.v1.DeployEventMessage subBuilder = new global::Nitric.Proto.Deploy.v1.DeployEventMessage();
            if (contentCase_ == ContentOneofCase.Message) {
              subBuilder.MergeFrom(Message);
            }
            input.ReadMessage(subBuilder);
            Message = subBuilder;
            break;
          }
          case 18: {
            global::Nitric.Proto.Deploy.v1.DeployUpEventResult subBuilder = new global::Nitric.Proto.Deploy.v1.DeployUpEventResult();
            if (contentCase_ == ContentOneofCase.Result) {
              subBuilder.MergeFrom(Result);
            }
            input.ReadMessage(subBuilder);
            Result = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Nitric.Proto.Deploy.v1.DeployEventMessage subBuilder = new global::Nitric.Proto.Deploy.v1.DeployEventMessage();
            if (contentCase_ == ContentOneofCase.Message) {
              subBuilder.MergeFrom(Message);
            }
            input.ReadMessage(subBuilder);
            Message = subBuilder;
            break;
          }
          case 18: {
            global::Nitric.Proto.Deploy.v1.DeployUpEventResult subBuilder = new global::Nitric.Proto.Deploy.v1.DeployUpEventResult();
            if (contentCase_ == ContentOneofCase.Result) {
              subBuilder.MergeFrom(Result);
            }
            input.ReadMessage(subBuilder);
            Result = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Messages to provide status updates on the deployment
  /// </summary>
  public sealed partial class DeployEventMessage : pb::IMessage<DeployEventMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeployEventMessage> _parser = new pb::MessageParser<DeployEventMessage>(() => new DeployEventMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployEventMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployEventMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployEventMessage(DeployEventMessage other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployEventMessage Clone() {
      return new DeployEventMessage(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployEventMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployEventMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployEventMessage other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UpResult : pb::IMessage<UpResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpResult> _parser = new pb::MessageParser<UpResult>(() => new UpResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpResult(UpResult other) : this() {
      switch (other.ContentCase) {
        case ContentOneofCase.StringResult:
          StringResult = other.StringResult;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpResult Clone() {
      return new UpResult(this);
    }

    /// <summary>Field number for the "string_result" field.</summary>
    public const int StringResultFieldNumber = 1;
    /// <summary>
    /// Simple formatted string output as result
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StringResult {
      get { return contentCase_ == ContentOneofCase.StringResult ? (string) content_ : ""; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        contentCase_ = ContentOneofCase.StringResult;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      StringResult = 1,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StringResult != other.StringResult) return false;
      if (ContentCase != other.ContentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contentCase_ == ContentOneofCase.StringResult) hash ^= StringResult.GetHashCode();
      hash ^= (int) contentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (contentCase_ == ContentOneofCase.StringResult) {
        output.WriteRawTag(10);
        output.WriteString(StringResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (contentCase_ == ContentOneofCase.StringResult) {
        output.WriteRawTag(10);
        output.WriteString(StringResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contentCase_ == ContentOneofCase.StringResult) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StringResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpResult other) {
      if (other == null) {
        return;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.StringResult:
          StringResult = other.StringResult;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StringResult = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StringResult = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Terminal message indicating deployment success
  /// </summary>
  public sealed partial class DeployUpEventResult : pb::IMessage<DeployUpEventResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeployUpEventResult> _parser = new pb::MessageParser<DeployUpEventResult>(() => new DeployUpEventResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployUpEventResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployUpEventResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployUpEventResult(DeployUpEventResult other) : this() {
      success_ = other.success_;
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployUpEventResult Clone() {
      return new DeployUpEventResult(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    /// <summary>
    /// Indicate the success status
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Nitric.Proto.Deploy.v1.UpResult result_;
    /// <summary>
    /// Output state as a struct, this can be provided as an output file
    /// or pretty printed for CLI output
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.UpResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployUpEventResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployUpEventResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployUpEventResult other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::Nitric.Proto.Deploy.v1.UpResult();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            if (result_ == null) {
              Result = new global::Nitric.Proto.Deploy.v1.UpResult();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            if (result_ == null) {
              Result = new global::Nitric.Proto.Deploy.v1.UpResult();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeployDownRequest : pb::IMessage<DeployDownRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeployDownRequest> _parser = new pb::MessageParser<DeployDownRequest>(() => new DeployDownRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployDownRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployDownRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployDownRequest(DeployDownRequest other) : this() {
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployDownRequest Clone() {
      return new DeployDownRequest(this);
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Struct attributes_;
    /// <summary>
    /// A map of attributes related to the deploy request
    /// this allows for adding project identifiers etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployDownRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployDownRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Attributes, other.Attributes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (attributes_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Attributes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (attributes_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Attributes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployDownRequest other) {
      if (other == null) {
        return;
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          Attributes = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (attributes_ == null) {
              Attributes = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Attributes);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (attributes_ == null) {
              Attributes = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Attributes);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeployDownEvent : pb::IMessage<DeployDownEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeployDownEvent> _parser = new pb::MessageParser<DeployDownEvent>(() => new DeployDownEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployDownEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployDownEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployDownEvent(DeployDownEvent other) : this() {
      switch (other.ContentCase) {
        case ContentOneofCase.Message:
          Message = other.Message.Clone();
          break;
        case ContentOneofCase.Result:
          Result = other.Result.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployDownEvent Clone() {
      return new DeployDownEvent(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.DeployEventMessage Message {
      get { return contentCase_ == ContentOneofCase.Message ? (global::Nitric.Proto.Deploy.v1.DeployEventMessage) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.Message;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.DeployDownEventResult Result {
      get { return contentCase_ == ContentOneofCase.Result ? (global::Nitric.Proto.Deploy.v1.DeployDownEventResult) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.Result;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      Message = 1,
      Result = 2,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployDownEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployDownEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Message, other.Message)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      if (ContentCase != other.ContentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contentCase_ == ContentOneofCase.Message) hash ^= Message.GetHashCode();
      if (contentCase_ == ContentOneofCase.Result) hash ^= Result.GetHashCode();
      hash ^= (int) contentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (contentCase_ == ContentOneofCase.Message) {
        output.WriteRawTag(10);
        output.WriteMessage(Message);
      }
      if (contentCase_ == ContentOneofCase.Result) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (contentCase_ == ContentOneofCase.Message) {
        output.WriteRawTag(10);
        output.WriteMessage(Message);
      }
      if (contentCase_ == ContentOneofCase.Result) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contentCase_ == ContentOneofCase.Message) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (contentCase_ == ContentOneofCase.Result) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployDownEvent other) {
      if (other == null) {
        return;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.Message:
          if (Message == null) {
            Message = new global::Nitric.Proto.Deploy.v1.DeployEventMessage();
          }
          Message.MergeFrom(other.Message);
          break;
        case ContentOneofCase.Result:
          if (Result == null) {
            Result = new global::Nitric.Proto.Deploy.v1.DeployDownEventResult();
          }
          Result.MergeFrom(other.Result);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Nitric.Proto.Deploy.v1.DeployEventMessage subBuilder = new global::Nitric.Proto.Deploy.v1.DeployEventMessage();
            if (contentCase_ == ContentOneofCase.Message) {
              subBuilder.MergeFrom(Message);
            }
            input.ReadMessage(subBuilder);
            Message = subBuilder;
            break;
          }
          case 18: {
            global::Nitric.Proto.Deploy.v1.DeployDownEventResult subBuilder = new global::Nitric.Proto.Deploy.v1.DeployDownEventResult();
            if (contentCase_ == ContentOneofCase.Result) {
              subBuilder.MergeFrom(Result);
            }
            input.ReadMessage(subBuilder);
            Result = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Nitric.Proto.Deploy.v1.DeployEventMessage subBuilder = new global::Nitric.Proto.Deploy.v1.DeployEventMessage();
            if (contentCase_ == ContentOneofCase.Message) {
              subBuilder.MergeFrom(Message);
            }
            input.ReadMessage(subBuilder);
            Message = subBuilder;
            break;
          }
          case 18: {
            global::Nitric.Proto.Deploy.v1.DeployDownEventResult subBuilder = new global::Nitric.Proto.Deploy.v1.DeployDownEventResult();
            if (contentCase_ == ContentOneofCase.Result) {
              subBuilder.MergeFrom(Result);
            }
            input.ReadMessage(subBuilder);
            Result = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Terminal message indicating deployment success
  /// </summary>
  public sealed partial class DeployDownEventResult : pb::IMessage<DeployDownEventResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeployDownEventResult> _parser = new pb::MessageParser<DeployDownEventResult>(() => new DeployDownEventResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployDownEventResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployDownEventResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployDownEventResult(DeployDownEventResult other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployDownEventResult Clone() {
      return new DeployDownEventResult(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployDownEventResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployDownEventResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployDownEventResult other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An image source to be used for execution unit deployment
  /// </summary>
  public sealed partial class ImageSource : pb::IMessage<ImageSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImageSource> _parser = new pb::MessageParser<ImageSource>(() => new ImageSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageSource(ImageSource other) : this() {
      uri_ = other.uri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageSource Clone() {
      return new ImageSource(this);
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 1;
    private string uri_ = "";
    /// <summary>
    /// URI of the docker image
    /// TODO: May also need to provide auth information (although this should just be configured on the running client already)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uri != other.Uri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageSource other) {
      if (other == null) {
        return;
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uri = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uri = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A unit of execution (i.e. function/container)
  /// </summary>
  public sealed partial class ExecutionUnit : pb::IMessage<ExecutionUnit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExecutionUnit> _parser = new pb::MessageParser<ExecutionUnit>(() => new ExecutionUnit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExecutionUnit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionUnit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionUnit(ExecutionUnit other) : this() {
      workers_ = other.workers_;
      timeout_ = other.timeout_;
      memory_ = other.memory_;
      type_ = other.type_;
      env_ = other.env_.Clone();
      switch (other.SourceCase) {
        case SourceOneofCase.Image:
          Image = other.Image.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutionUnit Clone() {
      return new ExecutionUnit(this);
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 1;
    /// <summary>
    /// Container image as a execution unit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.ImageSource Image {
      get { return sourceCase_ == SourceOneofCase.Image ? (global::Nitric.Proto.Deploy.v1.ImageSource) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.Image;
      }
    }

    /// <summary>Field number for the "workers" field.</summary>
    public const int WorkersFieldNumber = 10;
    private int workers_;
    /// <summary>
    /// Expected worker count for this execution unit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Workers {
      get { return workers_; }
      set {
        workers_ = value;
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 11;
    private int timeout_;
    /// <summary>
    /// Configurable timeout for request handling
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    /// <summary>Field number for the "memory" field.</summary>
    public const int MemoryFieldNumber = 12;
    private int memory_;
    /// <summary>
    /// Configurable memory size for this instance
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Memory {
      get { return memory_; }
      set {
        memory_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 13;
    private string type_ = "";
    /// <summary>
    /// A simple type property
    /// describes the requested type of execution unit that this should be
    /// for this project, a provider can implement how this request is satisfied
    /// in any way
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "env" field.</summary>
    public const int EnvFieldNumber = 14;
    private static readonly pbc::MapField<string, string>.Codec _map_env_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 114);
    private readonly pbc::MapField<string, string> env_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Environment variables for this execution unit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Env {
      get { return env_; }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      Image = 1,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExecutionUnit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExecutionUnit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Image, other.Image)) return false;
      if (Workers != other.Workers) return false;
      if (Timeout != other.Timeout) return false;
      if (Memory != other.Memory) return false;
      if (Type != other.Type) return false;
      if (!Env.Equals(other.Env)) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sourceCase_ == SourceOneofCase.Image) hash ^= Image.GetHashCode();
      if (Workers != 0) hash ^= Workers.GetHashCode();
      if (Timeout != 0) hash ^= Timeout.GetHashCode();
      if (Memory != 0) hash ^= Memory.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      hash ^= Env.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sourceCase_ == SourceOneofCase.Image) {
        output.WriteRawTag(10);
        output.WriteMessage(Image);
      }
      if (Workers != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Workers);
      }
      if (Timeout != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Timeout);
      }
      if (Memory != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Memory);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Type);
      }
      env_.WriteTo(output, _map_env_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sourceCase_ == SourceOneofCase.Image) {
        output.WriteRawTag(10);
        output.WriteMessage(Image);
      }
      if (Workers != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Workers);
      }
      if (Timeout != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Timeout);
      }
      if (Memory != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Memory);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Type);
      }
      env_.WriteTo(ref output, _map_env_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sourceCase_ == SourceOneofCase.Image) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (Workers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Workers);
      }
      if (Timeout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timeout);
      }
      if (Memory != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Memory);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      size += env_.CalculateSize(_map_env_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExecutionUnit other) {
      if (other == null) {
        return;
      }
      if (other.Workers != 0) {
        Workers = other.Workers;
      }
      if (other.Timeout != 0) {
        Timeout = other.Timeout;
      }
      if (other.Memory != 0) {
        Memory = other.Memory;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      env_.Add(other.env_);
      switch (other.SourceCase) {
        case SourceOneofCase.Image:
          if (Image == null) {
            Image = new global::Nitric.Proto.Deploy.v1.ImageSource();
          }
          Image.MergeFrom(other.Image);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Nitric.Proto.Deploy.v1.ImageSource subBuilder = new global::Nitric.Proto.Deploy.v1.ImageSource();
            if (sourceCase_ == SourceOneofCase.Image) {
              subBuilder.MergeFrom(Image);
            }
            input.ReadMessage(subBuilder);
            Image = subBuilder;
            break;
          }
          case 80: {
            Workers = input.ReadInt32();
            break;
          }
          case 88: {
            Timeout = input.ReadInt32();
            break;
          }
          case 96: {
            Memory = input.ReadInt32();
            break;
          }
          case 106: {
            Type = input.ReadString();
            break;
          }
          case 114: {
            env_.AddEntriesFrom(input, _map_env_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Nitric.Proto.Deploy.v1.ImageSource subBuilder = new global::Nitric.Proto.Deploy.v1.ImageSource();
            if (sourceCase_ == SourceOneofCase.Image) {
              subBuilder.MergeFrom(Image);
            }
            input.ReadMessage(subBuilder);
            Image = subBuilder;
            break;
          }
          case 80: {
            Workers = input.ReadInt32();
            break;
          }
          case 88: {
            Timeout = input.ReadInt32();
            break;
          }
          case 96: {
            Memory = input.ReadInt32();
            break;
          }
          case 106: {
            Type = input.ReadString();
            break;
          }
          case 114: {
            env_.AddEntriesFrom(ref input, _map_env_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Bucket : pb::IMessage<Bucket>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Bucket> _parser = new pb::MessageParser<Bucket>(() => new Bucket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Bucket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bucket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bucket(Bucket other) : this() {
      notifications_ = other.notifications_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bucket Clone() {
      return new Bucket(this);
    }

    /// <summary>Field number for the "notifications" field.</summary>
    public const int NotificationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Nitric.Proto.Deploy.v1.BucketNotificationTarget> _repeated_notifications_codec
        = pb::FieldCodec.ForMessage(10, global::Nitric.Proto.Deploy.v1.BucketNotificationTarget.Parser);
    private readonly pbc::RepeatedField<global::Nitric.Proto.Deploy.v1.BucketNotificationTarget> notifications_ = new pbc::RepeatedField<global::Nitric.Proto.Deploy.v1.BucketNotificationTarget>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Nitric.Proto.Deploy.v1.BucketNotificationTarget> Notifications {
      get { return notifications_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Bucket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Bucket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!notifications_.Equals(other.notifications_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= notifications_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      notifications_.WriteTo(output, _repeated_notifications_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      notifications_.WriteTo(ref output, _repeated_notifications_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += notifications_.CalculateSize(_repeated_notifications_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Bucket other) {
      if (other == null) {
        return;
      }
      notifications_.Add(other.notifications_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            notifications_.AddEntriesFrom(input, _repeated_notifications_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            notifications_.AddEntriesFrom(ref input, _repeated_notifications_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BucketNotificationTarget : pb::IMessage<BucketNotificationTarget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BucketNotificationTarget> _parser = new pb::MessageParser<BucketNotificationTarget>(() => new BucketNotificationTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BucketNotificationTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BucketNotificationTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BucketNotificationTarget(BucketNotificationTarget other) : this() {
      config_ = other.config_ != null ? other.config_.Clone() : null;
      switch (other.TargetCase) {
        case TargetOneofCase.ExecutionUnit:
          ExecutionUnit = other.ExecutionUnit;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BucketNotificationTarget Clone() {
      return new BucketNotificationTarget(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    private global::Nitric.Proto.Faas.v1.BucketNotificationConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Faas.v1.BucketNotificationConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "execution_unit" field.</summary>
    public const int ExecutionUnitFieldNumber = 2;
    /// <summary>
    /// The name of an execution unit to target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExecutionUnit {
      get { return targetCase_ == TargetOneofCase.ExecutionUnit ? (string) target_ : ""; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        targetCase_ = TargetOneofCase.ExecutionUnit;
      }
    }

    private object target_;
    /// <summary>Enum of possible cases for the "target" oneof.</summary>
    public enum TargetOneofCase {
      None = 0,
      ExecutionUnit = 2,
    }
    private TargetOneofCase targetCase_ = TargetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetOneofCase TargetCase {
      get { return targetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTarget() {
      targetCase_ = TargetOneofCase.None;
      target_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BucketNotificationTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BucketNotificationTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Config, other.Config)) return false;
      if (ExecutionUnit != other.ExecutionUnit) return false;
      if (TargetCase != other.TargetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (config_ != null) hash ^= Config.GetHashCode();
      if (targetCase_ == TargetOneofCase.ExecutionUnit) hash ^= ExecutionUnit.GetHashCode();
      hash ^= (int) targetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (targetCase_ == TargetOneofCase.ExecutionUnit) {
        output.WriteRawTag(18);
        output.WriteString(ExecutionUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (targetCase_ == TargetOneofCase.ExecutionUnit) {
        output.WriteRawTag(18);
        output.WriteString(ExecutionUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (targetCase_ == TargetOneofCase.ExecutionUnit) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExecutionUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BucketNotificationTarget other) {
      if (other == null) {
        return;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Nitric.Proto.Faas.v1.BucketNotificationConfig();
        }
        Config.MergeFrom(other.Config);
      }
      switch (other.TargetCase) {
        case TargetOneofCase.ExecutionUnit:
          ExecutionUnit = other.ExecutionUnit;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::Nitric.Proto.Faas.v1.BucketNotificationConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 18: {
            ExecutionUnit = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::Nitric.Proto.Faas.v1.BucketNotificationConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 18: {
            ExecutionUnit = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Topic : pb::IMessage<Topic>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Topic> _parser = new pb::MessageParser<Topic>(() => new Topic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Topic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Topic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Topic(Topic other) : this() {
      subscriptions_ = other.subscriptions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Topic Clone() {
      return new Topic(this);
    }

    /// <summary>Field number for the "subscriptions" field.</summary>
    public const int SubscriptionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Nitric.Proto.Deploy.v1.SubscriptionTarget> _repeated_subscriptions_codec
        = pb::FieldCodec.ForMessage(10, global::Nitric.Proto.Deploy.v1.SubscriptionTarget.Parser);
    private readonly pbc::RepeatedField<global::Nitric.Proto.Deploy.v1.SubscriptionTarget> subscriptions_ = new pbc::RepeatedField<global::Nitric.Proto.Deploy.v1.SubscriptionTarget>();
    /// <summary>
    /// TODO: Include topic specifications here
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Nitric.Proto.Deploy.v1.SubscriptionTarget> Subscriptions {
      get { return subscriptions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Topic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Topic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!subscriptions_.Equals(other.subscriptions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= subscriptions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      subscriptions_.WriteTo(output, _repeated_subscriptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      subscriptions_.WriteTo(ref output, _repeated_subscriptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += subscriptions_.CalculateSize(_repeated_subscriptions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Topic other) {
      if (other == null) {
        return;
      }
      subscriptions_.Add(other.subscriptions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            subscriptions_.AddEntriesFrom(input, _repeated_subscriptions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            subscriptions_.AddEntriesFrom(ref input, _repeated_subscriptions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// TODO: Include queue specifications here
  /// </summary>
  public sealed partial class Queue : pb::IMessage<Queue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Queue> _parser = new pb::MessageParser<Queue>(() => new Queue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Queue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Queue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Queue(Queue other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Queue Clone() {
      return new Queue(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Queue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Queue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Queue other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class Collection : pb::IMessage<Collection>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Collection> _parser = new pb::MessageParser<Collection>(() => new Collection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Collection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Collection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Collection(Collection other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Collection Clone() {
      return new Collection(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Collection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Collection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Collection other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class Secret : pb::IMessage<Secret>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Secret> _parser = new pb::MessageParser<Secret>(() => new Secret());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Secret> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secret() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secret(Secret other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secret Clone() {
      return new Secret(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Secret);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Secret other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Secret other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SubscriptionTarget : pb::IMessage<SubscriptionTarget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscriptionTarget> _parser = new pb::MessageParser<SubscriptionTarget>(() => new SubscriptionTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscriptionTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionTarget(SubscriptionTarget other) : this() {
      switch (other.TargetCase) {
        case TargetOneofCase.ExecutionUnit:
          ExecutionUnit = other.ExecutionUnit;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionTarget Clone() {
      return new SubscriptionTarget(this);
    }

    /// <summary>Field number for the "execution_unit" field.</summary>
    public const int ExecutionUnitFieldNumber = 1;
    /// <summary>
    /// The name of an execution unit to target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExecutionUnit {
      get { return targetCase_ == TargetOneofCase.ExecutionUnit ? (string) target_ : ""; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        targetCase_ = TargetOneofCase.ExecutionUnit;
      }
    }

    private object target_;
    /// <summary>Enum of possible cases for the "target" oneof.</summary>
    public enum TargetOneofCase {
      None = 0,
      ExecutionUnit = 1,
    }
    private TargetOneofCase targetCase_ = TargetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetOneofCase TargetCase {
      get { return targetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTarget() {
      targetCase_ = TargetOneofCase.None;
      target_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscriptionTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExecutionUnit != other.ExecutionUnit) return false;
      if (TargetCase != other.TargetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (targetCase_ == TargetOneofCase.ExecutionUnit) hash ^= ExecutionUnit.GetHashCode();
      hash ^= (int) targetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (targetCase_ == TargetOneofCase.ExecutionUnit) {
        output.WriteRawTag(10);
        output.WriteString(ExecutionUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (targetCase_ == TargetOneofCase.ExecutionUnit) {
        output.WriteRawTag(10);
        output.WriteString(ExecutionUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (targetCase_ == TargetOneofCase.ExecutionUnit) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExecutionUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscriptionTarget other) {
      if (other == null) {
        return;
      }
      switch (other.TargetCase) {
        case TargetOneofCase.ExecutionUnit:
          ExecutionUnit = other.ExecutionUnit;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExecutionUnit = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ExecutionUnit = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TopicSubscription : pb::IMessage<TopicSubscription>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TopicSubscription> _parser = new pb::MessageParser<TopicSubscription>(() => new TopicSubscription());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TopicSubscription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicSubscription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicSubscription(TopicSubscription other) : this() {
      target_ = other.target_ != null ? other.target_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicSubscription Clone() {
      return new TopicSubscription(this);
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 1;
    private global::Nitric.Proto.Deploy.v1.SubscriptionTarget target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.SubscriptionTarget Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TopicSubscription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TopicSubscription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Target, other.Target)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (target_ != null) hash ^= Target.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TopicSubscription other) {
      if (other == null) {
        return;
      }
      if (other.target_ != null) {
        if (target_ == null) {
          Target = new global::Nitric.Proto.Deploy.v1.SubscriptionTarget();
        }
        Target.MergeFrom(other.Target);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::Nitric.Proto.Deploy.v1.SubscriptionTarget();
            }
            input.ReadMessage(Target);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::Nitric.Proto.Deploy.v1.SubscriptionTarget();
            }
            input.ReadMessage(Target);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Api : pb::IMessage<Api>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Api> _parser = new pb::MessageParser<Api>(() => new Api());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Api> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Api() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Api(Api other) : this() {
      switch (other.DocumentCase) {
        case DocumentOneofCase.Openapi:
          Openapi = other.Openapi;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Api Clone() {
      return new Api(this);
    }

    /// <summary>Field number for the "openapi" field.</summary>
    public const int OpenapiFieldNumber = 1;
    /// <summary>
    /// An OpenAPI document for deployment
    /// This document will contain extensions that hint of execution units that should be targeted as part of the deployment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Openapi {
      get { return documentCase_ == DocumentOneofCase.Openapi ? (string) document_ : ""; }
      set {
        document_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        documentCase_ = DocumentOneofCase.Openapi;
      }
    }

    private object document_;
    /// <summary>Enum of possible cases for the "document" oneof.</summary>
    public enum DocumentOneofCase {
      None = 0,
      Openapi = 1,
    }
    private DocumentOneofCase documentCase_ = DocumentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentOneofCase DocumentCase {
      get { return documentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDocument() {
      documentCase_ = DocumentOneofCase.None;
      document_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Api);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Api other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Openapi != other.Openapi) return false;
      if (DocumentCase != other.DocumentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (documentCase_ == DocumentOneofCase.Openapi) hash ^= Openapi.GetHashCode();
      hash ^= (int) documentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (documentCase_ == DocumentOneofCase.Openapi) {
        output.WriteRawTag(10);
        output.WriteString(Openapi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (documentCase_ == DocumentOneofCase.Openapi) {
        output.WriteRawTag(10);
        output.WriteString(Openapi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (documentCase_ == DocumentOneofCase.Openapi) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Openapi);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Api other) {
      if (other == null) {
        return;
      }
      switch (other.DocumentCase) {
        case DocumentOneofCase.Openapi:
          Openapi = other.Openapi;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Openapi = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Openapi = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScheduleTarget : pb::IMessage<ScheduleTarget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleTarget> _parser = new pb::MessageParser<ScheduleTarget>(() => new ScheduleTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScheduleTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleTarget(ScheduleTarget other) : this() {
      switch (other.TargetCase) {
        case TargetOneofCase.ExecutionUnit:
          ExecutionUnit = other.ExecutionUnit;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleTarget Clone() {
      return new ScheduleTarget(this);
    }

    /// <summary>Field number for the "execution_unit" field.</summary>
    public const int ExecutionUnitFieldNumber = 1;
    /// <summary>
    /// The name of an execution unit to target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExecutionUnit {
      get { return targetCase_ == TargetOneofCase.ExecutionUnit ? (string) target_ : ""; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        targetCase_ = TargetOneofCase.ExecutionUnit;
      }
    }

    private object target_;
    /// <summary>Enum of possible cases for the "target" oneof.</summary>
    public enum TargetOneofCase {
      None = 0,
      ExecutionUnit = 1,
    }
    private TargetOneofCase targetCase_ = TargetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetOneofCase TargetCase {
      get { return targetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTarget() {
      targetCase_ = TargetOneofCase.None;
      target_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScheduleTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScheduleTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExecutionUnit != other.ExecutionUnit) return false;
      if (TargetCase != other.TargetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (targetCase_ == TargetOneofCase.ExecutionUnit) hash ^= ExecutionUnit.GetHashCode();
      hash ^= (int) targetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (targetCase_ == TargetOneofCase.ExecutionUnit) {
        output.WriteRawTag(10);
        output.WriteString(ExecutionUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (targetCase_ == TargetOneofCase.ExecutionUnit) {
        output.WriteRawTag(10);
        output.WriteString(ExecutionUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (targetCase_ == TargetOneofCase.ExecutionUnit) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExecutionUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScheduleTarget other) {
      if (other == null) {
        return;
      }
      switch (other.TargetCase) {
        case TargetOneofCase.ExecutionUnit:
          ExecutionUnit = other.ExecutionUnit;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExecutionUnit = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ExecutionUnit = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Schedule : pb::IMessage<Schedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Schedule> _parser = new pb::MessageParser<Schedule>(() => new Schedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Schedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule(Schedule other) : this() {
      cron_ = other.cron_;
      target_ = other.target_ != null ? other.target_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule Clone() {
      return new Schedule(this);
    }

    /// <summary>Field number for the "cron" field.</summary>
    public const int CronFieldNumber = 1;
    private string cron_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cron {
      get { return cron_; }
      set {
        cron_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 2;
    private global::Nitric.Proto.Deploy.v1.ScheduleTarget target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.ScheduleTarget Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Schedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Schedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cron != other.Cron) return false;
      if (!object.Equals(Target, other.Target)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cron.Length != 0) hash ^= Cron.GetHashCode();
      if (target_ != null) hash ^= Target.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Cron.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Cron);
      }
      if (target_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Cron.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Cron);
      }
      if (target_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cron.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cron);
      }
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Schedule other) {
      if (other == null) {
        return;
      }
      if (other.Cron.Length != 0) {
        Cron = other.Cron;
      }
      if (other.target_ != null) {
        if (target_ == null) {
          Target = new global::Nitric.Proto.Deploy.v1.ScheduleTarget();
        }
        Target.MergeFrom(other.Target);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Cron = input.ReadString();
            break;
          }
          case 18: {
            if (target_ == null) {
              Target = new global::Nitric.Proto.Deploy.v1.ScheduleTarget();
            }
            input.ReadMessage(Target);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Cron = input.ReadString();
            break;
          }
          case 18: {
            if (target_ == null) {
              Target = new global::Nitric.Proto.Deploy.v1.ScheduleTarget();
            }
            input.ReadMessage(Target);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Resource : pb::IMessage<Resource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Resource> _parser = new pb::MessageParser<Resource>(() => new Resource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Resource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource(Resource other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      switch (other.ConfigCase) {
        case ConfigOneofCase.ExecutionUnit:
          ExecutionUnit = other.ExecutionUnit.Clone();
          break;
        case ConfigOneofCase.Bucket:
          Bucket = other.Bucket.Clone();
          break;
        case ConfigOneofCase.Topic:
          Topic = other.Topic.Clone();
          break;
        case ConfigOneofCase.Queue:
          Queue = other.Queue.Clone();
          break;
        case ConfigOneofCase.Api:
          Api = other.Api.Clone();
          break;
        case ConfigOneofCase.Policy:
          Policy = other.Policy.Clone();
          break;
        case ConfigOneofCase.Schedule:
          Schedule = other.Schedule.Clone();
          break;
        case ConfigOneofCase.Collection:
          Collection = other.Collection.Clone();
          break;
        case ConfigOneofCase.Secret:
          Secret = other.Secret.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource Clone() {
      return new Resource(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Nitric.Proto.Resource.v1.ResourceType type_ = global::Nitric.Proto.Resource.v1.ResourceType.Api;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Resource.v1.ResourceType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "execution_unit" field.</summary>
    public const int ExecutionUnitFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.ExecutionUnit ExecutionUnit {
      get { return configCase_ == ConfigOneofCase.ExecutionUnit ? (global::Nitric.Proto.Deploy.v1.ExecutionUnit) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.ExecutionUnit;
      }
    }

    /// <summary>Field number for the "bucket" field.</summary>
    public const int BucketFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.Bucket Bucket {
      get { return configCase_ == ConfigOneofCase.Bucket ? (global::Nitric.Proto.Deploy.v1.Bucket) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Bucket;
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.Topic Topic {
      get { return configCase_ == ConfigOneofCase.Topic ? (global::Nitric.Proto.Deploy.v1.Topic) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Topic;
      }
    }

    /// <summary>Field number for the "queue" field.</summary>
    public const int QueueFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.Queue Queue {
      get { return configCase_ == ConfigOneofCase.Queue ? (global::Nitric.Proto.Deploy.v1.Queue) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Queue;
      }
    }

    /// <summary>Field number for the "api" field.</summary>
    public const int ApiFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.Api Api {
      get { return configCase_ == ConfigOneofCase.Api ? (global::Nitric.Proto.Deploy.v1.Api) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Api;
      }
    }

    /// <summary>Field number for the "policy" field.</summary>
    public const int PolicyFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.Policy Policy {
      get { return configCase_ == ConfigOneofCase.Policy ? (global::Nitric.Proto.Deploy.v1.Policy) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Policy;
      }
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.Schedule Schedule {
      get { return configCase_ == ConfigOneofCase.Schedule ? (global::Nitric.Proto.Deploy.v1.Schedule) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Schedule;
      }
    }

    /// <summary>Field number for the "collection" field.</summary>
    public const int CollectionFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.Collection Collection {
      get { return configCase_ == ConfigOneofCase.Collection ? (global::Nitric.Proto.Deploy.v1.Collection) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Collection;
      }
    }

    /// <summary>Field number for the "secret" field.</summary>
    public const int SecretFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deploy.v1.Secret Secret {
      get { return configCase_ == ConfigOneofCase.Secret ? (global::Nitric.Proto.Deploy.v1.Secret) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Secret;
      }
    }

    private object config_;
    /// <summary>Enum of possible cases for the "config" oneof.</summary>
    public enum ConfigOneofCase {
      None = 0,
      ExecutionUnit = 10,
      Bucket = 11,
      Topic = 12,
      Queue = 13,
      Api = 14,
      Policy = 15,
      Schedule = 16,
      Collection = 17,
      Secret = 18,
    }
    private ConfigOneofCase configCase_ = ConfigOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigOneofCase ConfigCase {
      get { return configCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConfig() {
      configCase_ = ConfigOneofCase.None;
      config_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Resource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Resource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(ExecutionUnit, other.ExecutionUnit)) return false;
      if (!object.Equals(Bucket, other.Bucket)) return false;
      if (!object.Equals(Topic, other.Topic)) return false;
      if (!object.Equals(Queue, other.Queue)) return false;
      if (!object.Equals(Api, other.Api)) return false;
      if (!object.Equals(Policy, other.Policy)) return false;
      if (!object.Equals(Schedule, other.Schedule)) return false;
      if (!object.Equals(Collection, other.Collection)) return false;
      if (!object.Equals(Secret, other.Secret)) return false;
      if (ConfigCase != other.ConfigCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::Nitric.Proto.Resource.v1.ResourceType.Api) hash ^= Type.GetHashCode();
      if (configCase_ == ConfigOneofCase.ExecutionUnit) hash ^= ExecutionUnit.GetHashCode();
      if (configCase_ == ConfigOneofCase.Bucket) hash ^= Bucket.GetHashCode();
      if (configCase_ == ConfigOneofCase.Topic) hash ^= Topic.GetHashCode();
      if (configCase_ == ConfigOneofCase.Queue) hash ^= Queue.GetHashCode();
      if (configCase_ == ConfigOneofCase.Api) hash ^= Api.GetHashCode();
      if (configCase_ == ConfigOneofCase.Policy) hash ^= Policy.GetHashCode();
      if (configCase_ == ConfigOneofCase.Schedule) hash ^= Schedule.GetHashCode();
      if (configCase_ == ConfigOneofCase.Collection) hash ^= Collection.GetHashCode();
      if (configCase_ == ConfigOneofCase.Secret) hash ^= Secret.GetHashCode();
      hash ^= (int) configCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::Nitric.Proto.Resource.v1.ResourceType.Api) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (configCase_ == ConfigOneofCase.ExecutionUnit) {
        output.WriteRawTag(82);
        output.WriteMessage(ExecutionUnit);
      }
      if (configCase_ == ConfigOneofCase.Bucket) {
        output.WriteRawTag(90);
        output.WriteMessage(Bucket);
      }
      if (configCase_ == ConfigOneofCase.Topic) {
        output.WriteRawTag(98);
        output.WriteMessage(Topic);
      }
      if (configCase_ == ConfigOneofCase.Queue) {
        output.WriteRawTag(106);
        output.WriteMessage(Queue);
      }
      if (configCase_ == ConfigOneofCase.Api) {
        output.WriteRawTag(114);
        output.WriteMessage(Api);
      }
      if (configCase_ == ConfigOneofCase.Policy) {
        output.WriteRawTag(122);
        output.WriteMessage(Policy);
      }
      if (configCase_ == ConfigOneofCase.Schedule) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Schedule);
      }
      if (configCase_ == ConfigOneofCase.Collection) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Collection);
      }
      if (configCase_ == ConfigOneofCase.Secret) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Secret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::Nitric.Proto.Resource.v1.ResourceType.Api) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (configCase_ == ConfigOneofCase.ExecutionUnit) {
        output.WriteRawTag(82);
        output.WriteMessage(ExecutionUnit);
      }
      if (configCase_ == ConfigOneofCase.Bucket) {
        output.WriteRawTag(90);
        output.WriteMessage(Bucket);
      }
      if (configCase_ == ConfigOneofCase.Topic) {
        output.WriteRawTag(98);
        output.WriteMessage(Topic);
      }
      if (configCase_ == ConfigOneofCase.Queue) {
        output.WriteRawTag(106);
        output.WriteMessage(Queue);
      }
      if (configCase_ == ConfigOneofCase.Api) {
        output.WriteRawTag(114);
        output.WriteMessage(Api);
      }
      if (configCase_ == ConfigOneofCase.Policy) {
        output.WriteRawTag(122);
        output.WriteMessage(Policy);
      }
      if (configCase_ == ConfigOneofCase.Schedule) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Schedule);
      }
      if (configCase_ == ConfigOneofCase.Collection) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Collection);
      }
      if (configCase_ == ConfigOneofCase.Secret) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Secret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::Nitric.Proto.Resource.v1.ResourceType.Api) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (configCase_ == ConfigOneofCase.ExecutionUnit) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecutionUnit);
      }
      if (configCase_ == ConfigOneofCase.Bucket) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bucket);
      }
      if (configCase_ == ConfigOneofCase.Topic) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
      }
      if (configCase_ == ConfigOneofCase.Queue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Queue);
      }
      if (configCase_ == ConfigOneofCase.Api) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Api);
      }
      if (configCase_ == ConfigOneofCase.Policy) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Policy);
      }
      if (configCase_ == ConfigOneofCase.Schedule) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
      }
      if (configCase_ == ConfigOneofCase.Collection) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Collection);
      }
      if (configCase_ == ConfigOneofCase.Secret) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Secret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Resource other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::Nitric.Proto.Resource.v1.ResourceType.Api) {
        Type = other.Type;
      }
      switch (other.ConfigCase) {
        case ConfigOneofCase.ExecutionUnit:
          if (ExecutionUnit == null) {
            ExecutionUnit = new global::Nitric.Proto.Deploy.v1.ExecutionUnit();
          }
          ExecutionUnit.MergeFrom(other.ExecutionUnit);
          break;
        case ConfigOneofCase.Bucket:
          if (Bucket == null) {
            Bucket = new global::Nitric.Proto.Deploy.v1.Bucket();
          }
          Bucket.MergeFrom(other.Bucket);
          break;
        case ConfigOneofCase.Topic:
          if (Topic == null) {
            Topic = new global::Nitric.Proto.Deploy.v1.Topic();
          }
          Topic.MergeFrom(other.Topic);
          break;
        case ConfigOneofCase.Queue:
          if (Queue == null) {
            Queue = new global::Nitric.Proto.Deploy.v1.Queue();
          }
          Queue.MergeFrom(other.Queue);
          break;
        case ConfigOneofCase.Api:
          if (Api == null) {
            Api = new global::Nitric.Proto.Deploy.v1.Api();
          }
          Api.MergeFrom(other.Api);
          break;
        case ConfigOneofCase.Policy:
          if (Policy == null) {
            Policy = new global::Nitric.Proto.Deploy.v1.Policy();
          }
          Policy.MergeFrom(other.Policy);
          break;
        case ConfigOneofCase.Schedule:
          if (Schedule == null) {
            Schedule = new global::Nitric.Proto.Deploy.v1.Schedule();
          }
          Schedule.MergeFrom(other.Schedule);
          break;
        case ConfigOneofCase.Collection:
          if (Collection == null) {
            Collection = new global::Nitric.Proto.Deploy.v1.Collection();
          }
          Collection.MergeFrom(other.Collection);
          break;
        case ConfigOneofCase.Secret:
          if (Secret == null) {
            Secret = new global::Nitric.Proto.Deploy.v1.Secret();
          }
          Secret.MergeFrom(other.Secret);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Nitric.Proto.Resource.v1.ResourceType) input.ReadEnum();
            break;
          }
          case 82: {
            global::Nitric.Proto.Deploy.v1.ExecutionUnit subBuilder = new global::Nitric.Proto.Deploy.v1.ExecutionUnit();
            if (configCase_ == ConfigOneofCase.ExecutionUnit) {
              subBuilder.MergeFrom(ExecutionUnit);
            }
            input.ReadMessage(subBuilder);
            ExecutionUnit = subBuilder;
            break;
          }
          case 90: {
            global::Nitric.Proto.Deploy.v1.Bucket subBuilder = new global::Nitric.Proto.Deploy.v1.Bucket();
            if (configCase_ == ConfigOneofCase.Bucket) {
              subBuilder.MergeFrom(Bucket);
            }
            input.ReadMessage(subBuilder);
            Bucket = subBuilder;
            break;
          }
          case 98: {
            global::Nitric.Proto.Deploy.v1.Topic subBuilder = new global::Nitric.Proto.Deploy.v1.Topic();
            if (configCase_ == ConfigOneofCase.Topic) {
              subBuilder.MergeFrom(Topic);
            }
            input.ReadMessage(subBuilder);
            Topic = subBuilder;
            break;
          }
          case 106: {
            global::Nitric.Proto.Deploy.v1.Queue subBuilder = new global::Nitric.Proto.Deploy.v1.Queue();
            if (configCase_ == ConfigOneofCase.Queue) {
              subBuilder.MergeFrom(Queue);
            }
            input.ReadMessage(subBuilder);
            Queue = subBuilder;
            break;
          }
          case 114: {
            global::Nitric.Proto.Deploy.v1.Api subBuilder = new global::Nitric.Proto.Deploy.v1.Api();
            if (configCase_ == ConfigOneofCase.Api) {
              subBuilder.MergeFrom(Api);
            }
            input.ReadMessage(subBuilder);
            Api = subBuilder;
            break;
          }
          case 122: {
            global::Nitric.Proto.Deploy.v1.Policy subBuilder = new global::Nitric.Proto.Deploy.v1.Policy();
            if (configCase_ == ConfigOneofCase.Policy) {
              subBuilder.MergeFrom(Policy);
            }
            input.ReadMessage(subBuilder);
            Policy = subBuilder;
            break;
          }
          case 130: {
            global::Nitric.Proto.Deploy.v1.Schedule subBuilder = new global::Nitric.Proto.Deploy.v1.Schedule();
            if (configCase_ == ConfigOneofCase.Schedule) {
              subBuilder.MergeFrom(Schedule);
            }
            input.ReadMessage(subBuilder);
            Schedule = subBuilder;
            break;
          }
          case 138: {
            global::Nitric.Proto.Deploy.v1.Collection subBuilder = new global::Nitric.Proto.Deploy.v1.Collection();
            if (configCase_ == ConfigOneofCase.Collection) {
              subBuilder.MergeFrom(Collection);
            }
            input.ReadMessage(subBuilder);
            Collection = subBuilder;
            break;
          }
          case 146: {
            global::Nitric.Proto.Deploy.v1.Secret subBuilder = new global::Nitric.Proto.Deploy.v1.Secret();
            if (configCase_ == ConfigOneofCase.Secret) {
              subBuilder.MergeFrom(Secret);
            }
            input.ReadMessage(subBuilder);
            Secret = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Nitric.Proto.Resource.v1.ResourceType) input.ReadEnum();
            break;
          }
          case 82: {
            global::Nitric.Proto.Deploy.v1.ExecutionUnit subBuilder = new global::Nitric.Proto.Deploy.v1.ExecutionUnit();
            if (configCase_ == ConfigOneofCase.ExecutionUnit) {
              subBuilder.MergeFrom(ExecutionUnit);
            }
            input.ReadMessage(subBuilder);
            ExecutionUnit = subBuilder;
            break;
          }
          case 90: {
            global::Nitric.Proto.Deploy.v1.Bucket subBuilder = new global::Nitric.Proto.Deploy.v1.Bucket();
            if (configCase_ == ConfigOneofCase.Bucket) {
              subBuilder.MergeFrom(Bucket);
            }
            input.ReadMessage(subBuilder);
            Bucket = subBuilder;
            break;
          }
          case 98: {
            global::Nitric.Proto.Deploy.v1.Topic subBuilder = new global::Nitric.Proto.Deploy.v1.Topic();
            if (configCase_ == ConfigOneofCase.Topic) {
              subBuilder.MergeFrom(Topic);
            }
            input.ReadMessage(subBuilder);
            Topic = subBuilder;
            break;
          }
          case 106: {
            global::Nitric.Proto.Deploy.v1.Queue subBuilder = new global::Nitric.Proto.Deploy.v1.Queue();
            if (configCase_ == ConfigOneofCase.Queue) {
              subBuilder.MergeFrom(Queue);
            }
            input.ReadMessage(subBuilder);
            Queue = subBuilder;
            break;
          }
          case 114: {
            global::Nitric.Proto.Deploy.v1.Api subBuilder = new global::Nitric.Proto.Deploy.v1.Api();
            if (configCase_ == ConfigOneofCase.Api) {
              subBuilder.MergeFrom(Api);
            }
            input.ReadMessage(subBuilder);
            Api = subBuilder;
            break;
          }
          case 122: {
            global::Nitric.Proto.Deploy.v1.Policy subBuilder = new global::Nitric.Proto.Deploy.v1.Policy();
            if (configCase_ == ConfigOneofCase.Policy) {
              subBuilder.MergeFrom(Policy);
            }
            input.ReadMessage(subBuilder);
            Policy = subBuilder;
            break;
          }
          case 130: {
            global::Nitric.Proto.Deploy.v1.Schedule subBuilder = new global::Nitric.Proto.Deploy.v1.Schedule();
            if (configCase_ == ConfigOneofCase.Schedule) {
              subBuilder.MergeFrom(Schedule);
            }
            input.ReadMessage(subBuilder);
            Schedule = subBuilder;
            break;
          }
          case 138: {
            global::Nitric.Proto.Deploy.v1.Collection subBuilder = new global::Nitric.Proto.Deploy.v1.Collection();
            if (configCase_ == ConfigOneofCase.Collection) {
              subBuilder.MergeFrom(Collection);
            }
            input.ReadMessage(subBuilder);
            Collection = subBuilder;
            break;
          }
          case 146: {
            global::Nitric.Proto.Deploy.v1.Secret subBuilder = new global::Nitric.Proto.Deploy.v1.Secret();
            if (configCase_ == ConfigOneofCase.Secret) {
              subBuilder.MergeFrom(Secret);
            }
            input.ReadMessage(subBuilder);
            Secret = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// TODO: This is already defined in our resource contracts...
  /// Need to determine if it's worth re-using
  /// unfortunately there are parts we don't want to duplicate, such as API config
  /// </summary>
  public sealed partial class Policy : pb::IMessage<Policy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Policy> _parser = new pb::MessageParser<Policy>(() => new Policy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Policy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Policy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Policy(Policy other) : this() {
      principals_ = other.principals_.Clone();
      actions_ = other.actions_.Clone();
      resources_ = other.resources_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Policy Clone() {
      return new Policy(this);
    }

    /// <summary>Field number for the "principals" field.</summary>
    public const int PrincipalsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Nitric.Proto.Deploy.v1.Resource> _repeated_principals_codec
        = pb::FieldCodec.ForMessage(10, global::Nitric.Proto.Deploy.v1.Resource.Parser);
    private readonly pbc::RepeatedField<global::Nitric.Proto.Deploy.v1.Resource> principals_ = new pbc::RepeatedField<global::Nitric.Proto.Deploy.v1.Resource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Nitric.Proto.Deploy.v1.Resource> Principals {
      get { return principals_; }
    }

    /// <summary>Field number for the "actions" field.</summary>
    public const int ActionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Nitric.Proto.Resource.v1.Action> _repeated_actions_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Nitric.Proto.Resource.v1.Action) x);
    private readonly pbc::RepeatedField<global::Nitric.Proto.Resource.v1.Action> actions_ = new pbc::RepeatedField<global::Nitric.Proto.Resource.v1.Action>();
    /// <summary>
    /// TODO: Split out discrete action definitions from resources
    /// Also need to allow custom action types as well
    /// Should incorporate action re-use here...
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Nitric.Proto.Resource.v1.Action> Actions {
      get { return actions_; }
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Nitric.Proto.Deploy.v1.Resource> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(26, global::Nitric.Proto.Deploy.v1.Resource.Parser);
    private readonly pbc::RepeatedField<global::Nitric.Proto.Deploy.v1.Resource> resources_ = new pbc::RepeatedField<global::Nitric.Proto.Deploy.v1.Resource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Nitric.Proto.Deploy.v1.Resource> Resources {
      get { return resources_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Policy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Policy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!principals_.Equals(other.principals_)) return false;
      if(!actions_.Equals(other.actions_)) return false;
      if(!resources_.Equals(other.resources_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= principals_.GetHashCode();
      hash ^= actions_.GetHashCode();
      hash ^= resources_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      principals_.WriteTo(output, _repeated_principals_codec);
      actions_.WriteTo(output, _repeated_actions_codec);
      resources_.WriteTo(output, _repeated_resources_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      principals_.WriteTo(ref output, _repeated_principals_codec);
      actions_.WriteTo(ref output, _repeated_actions_codec);
      resources_.WriteTo(ref output, _repeated_resources_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += principals_.CalculateSize(_repeated_principals_codec);
      size += actions_.CalculateSize(_repeated_actions_codec);
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Policy other) {
      if (other == null) {
        return;
      }
      principals_.Add(other.principals_);
      actions_.Add(other.actions_);
      resources_.Add(other.resources_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            principals_.AddEntriesFrom(input, _repeated_principals_codec);
            break;
          }
          case 18:
          case 16: {
            actions_.AddEntriesFrom(input, _repeated_actions_codec);
            break;
          }
          case 26: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            principals_.AddEntriesFrom(ref input, _repeated_principals_codec);
            break;
          }
          case 18:
          case 16: {
            actions_.AddEntriesFrom(ref input, _repeated_actions_codec);
            break;
          }
          case 26: {
            resources_.AddEntriesFrom(ref input, _repeated_resources_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Spec : pb::IMessage<Spec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Spec> _parser = new pb::MessageParser<Spec>(() => new Spec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Spec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deploy.v1.DeployReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Spec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Spec(Spec other) : this() {
      resources_ = other.resources_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Spec Clone() {
      return new Spec(this);
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Nitric.Proto.Deploy.v1.Resource> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(10, global::Nitric.Proto.Deploy.v1.Resource.Parser);
    private readonly pbc::RepeatedField<global::Nitric.Proto.Deploy.v1.Resource> resources_ = new pbc::RepeatedField<global::Nitric.Proto.Deploy.v1.Resource>();
    /// <summary>
    /// list of resources to deploy
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Nitric.Proto.Deploy.v1.Resource> Resources {
      get { return resources_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Spec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Spec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!resources_.Equals(other.resources_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= resources_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      resources_.WriteTo(output, _repeated_resources_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      resources_.WriteTo(ref output, _repeated_resources_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Spec other) {
      if (other == null) {
        return;
      }
      resources_.Add(other.resources_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            resources_.AddEntriesFrom(ref input, _repeated_resources_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
