// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: nitric/proto/schedules/v1/schedules.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nitric.Proto.Schedules.v1 {

  /// <summary>Holder for reflection information generated from nitric/proto/schedules/v1/schedules.proto</summary>
  public static partial class SchedulesReflection {

    #region Descriptor
    /// <summary>File descriptor for nitric/proto/schedules/v1/schedules.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SchedulesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiluaXRyaWMvcHJvdG8vc2NoZWR1bGVzL3YxL3NjaGVkdWxlcy5wcm90bxIZ",
            "bml0cmljLnByb3RvLnNjaGVkdWxlcy52MSLAAQoNQ2xpZW50TWVzc2FnZRIK",
            "CgJpZBgBIAEoCRJOChRyZWdpc3RyYXRpb25fcmVxdWVzdBgCIAEoCzIuLm5p",
            "dHJpYy5wcm90by5zY2hlZHVsZXMudjEuUmVnaXN0cmF0aW9uUmVxdWVzdEgA",
            "EkgKEWludGVydmFsX3Jlc3BvbnNlGAMgASgLMisubml0cmljLnByb3RvLnNj",
            "aGVkdWxlcy52MS5JbnRlcnZhbFJlc3BvbnNlSABCCQoHY29udGVudCIoCg9J",
            "bnRlcnZhbFJlcXVlc3QSFQoNc2NoZWR1bGVfbmFtZRgBIAEoCSLAAQoNU2Vy",
            "dmVyTWVzc2FnZRIKCgJpZBgBIAEoCRJQChVyZWdpc3RyYXRpb25fcmVzcG9u",
            "c2UYAiABKAsyLy5uaXRyaWMucHJvdG8uc2NoZWR1bGVzLnYxLlJlZ2lzdHJh",
            "dGlvblJlc3BvbnNlSAASRgoQaW50ZXJ2YWxfcmVxdWVzdBgDIAEoCzIqLm5p",
            "dHJpYy5wcm90by5zY2hlZHVsZXMudjEuSW50ZXJ2YWxSZXF1ZXN0SABCCQoH",
            "Y29udGVudCKrAQoTUmVnaXN0cmF0aW9uUmVxdWVzdBIVCg1zY2hlZHVsZV9u",
            "YW1lGAEgASgJEjkKBWV2ZXJ5GAogASgLMigubml0cmljLnByb3RvLnNjaGVk",
            "dWxlcy52MS5TY2hlZHVsZUV2ZXJ5SAASNwoEY3JvbhgLIAEoCzInLm5pdHJp",
            "Yy5wcm90by5zY2hlZHVsZXMudjEuU2NoZWR1bGVDcm9uSABCCQoHY2FkZW5j",
            "ZSIdCg1TY2hlZHVsZUV2ZXJ5EgwKBHJhdGUYASABKAkiIgoMU2NoZWR1bGVD",
            "cm9uEhIKCmV4cHJlc3Npb24YASABKAkiFgoUUmVnaXN0cmF0aW9uUmVzcG9u",
            "c2UiEgoQSW50ZXJ2YWxSZXNwb25zZTJvCglTY2hlZHVsZXMSYgoIU2NoZWR1",
            "bGUSKC5uaXRyaWMucHJvdG8uc2NoZWR1bGVzLnYxLkNsaWVudE1lc3NhZ2Ua",
            "KC5uaXRyaWMucHJvdG8uc2NoZWR1bGVzLnYxLlNlcnZlck1lc3NhZ2UoATAB",
            "QrABChxpby5uaXRyaWMucHJvdG8uc2NoZWR1bGVzLnYxQhBTY2hlZHVsZXNT",
            "ZXJ2aWNlUAFaRGdpdGh1Yi5jb20vbml0cmljdGVjaC9uaXRyaWMvY29yZS9w",
            "a2cvcHJvdG8vc2NoZWR1bGVzL3YxO3NjaGVkdWxlc3BiqgIZTml0cmljLlBy",
            "b3RvLlNjaGVkdWxlcy52McoCGU5pdHJpY1xQcm90b1xTY2hlZHVsZXNcVjFi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Schedules.v1.ClientMessage), global::Nitric.Proto.Schedules.v1.ClientMessage.Parser, new[]{ "Id", "RegistrationRequest", "IntervalResponse" }, new[]{ "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Schedules.v1.IntervalRequest), global::Nitric.Proto.Schedules.v1.IntervalRequest.Parser, new[]{ "ScheduleName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Schedules.v1.ServerMessage), global::Nitric.Proto.Schedules.v1.ServerMessage.Parser, new[]{ "Id", "RegistrationResponse", "IntervalRequest" }, new[]{ "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Schedules.v1.RegistrationRequest), global::Nitric.Proto.Schedules.v1.RegistrationRequest.Parser, new[]{ "ScheduleName", "Every", "Cron" }, new[]{ "Cadence" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Schedules.v1.ScheduleEvery), global::Nitric.Proto.Schedules.v1.ScheduleEvery.Parser, new[]{ "Rate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Schedules.v1.ScheduleCron), global::Nitric.Proto.Schedules.v1.ScheduleCron.Parser, new[]{ "Expression" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Schedules.v1.RegistrationResponse), global::Nitric.Proto.Schedules.v1.RegistrationResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Schedules.v1.IntervalResponse), global::Nitric.Proto.Schedules.v1.IntervalResponse.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// ClientMessages are sent from the service to the nitric server
  /// </summary>
  public sealed partial class ClientMessage : pb::IMessage<ClientMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientMessage> _parser = new pb::MessageParser<ClientMessage>(() => new ClientMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Schedules.v1.SchedulesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMessage(ClientMessage other) : this() {
      id_ = other.id_;
      switch (other.ContentCase) {
        case ContentOneofCase.RegistrationRequest:
          RegistrationRequest = other.RegistrationRequest.Clone();
          break;
        case ContentOneofCase.IntervalResponse:
          IntervalResponse = other.IntervalResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMessage Clone() {
      return new ClientMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// globally unique ID of the request/response pair
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "registration_request" field.</summary>
    public const int RegistrationRequestFieldNumber = 2;
    /// <summary>
    /// Register new a schedule
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Schedules.v1.RegistrationRequest RegistrationRequest {
      get { return contentCase_ == ContentOneofCase.RegistrationRequest ? (global::Nitric.Proto.Schedules.v1.RegistrationRequest) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.RegistrationRequest;
      }
    }

    /// <summary>Field number for the "interval_response" field.</summary>
    public const int IntervalResponseFieldNumber = 3;
    /// <summary>
    /// Response to a schedule interval (i.e. response from callback function)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Schedules.v1.IntervalResponse IntervalResponse {
      get { return contentCase_ == ContentOneofCase.IntervalResponse ? (global::Nitric.Proto.Schedules.v1.IntervalResponse) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.IntervalResponse;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      RegistrationRequest = 2,
      IntervalResponse = 3,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(RegistrationRequest, other.RegistrationRequest)) return false;
      if (!object.Equals(IntervalResponse, other.IntervalResponse)) return false;
      if (ContentCase != other.ContentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (contentCase_ == ContentOneofCase.RegistrationRequest) hash ^= RegistrationRequest.GetHashCode();
      if (contentCase_ == ContentOneofCase.IntervalResponse) hash ^= IntervalResponse.GetHashCode();
      hash ^= (int) contentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (contentCase_ == ContentOneofCase.RegistrationRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(RegistrationRequest);
      }
      if (contentCase_ == ContentOneofCase.IntervalResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(IntervalResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (contentCase_ == ContentOneofCase.RegistrationRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(RegistrationRequest);
      }
      if (contentCase_ == ContentOneofCase.IntervalResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(IntervalResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (contentCase_ == ContentOneofCase.RegistrationRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegistrationRequest);
      }
      if (contentCase_ == ContentOneofCase.IntervalResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IntervalResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.RegistrationRequest:
          if (RegistrationRequest == null) {
            RegistrationRequest = new global::Nitric.Proto.Schedules.v1.RegistrationRequest();
          }
          RegistrationRequest.MergeFrom(other.RegistrationRequest);
          break;
        case ContentOneofCase.IntervalResponse:
          if (IntervalResponse == null) {
            IntervalResponse = new global::Nitric.Proto.Schedules.v1.IntervalResponse();
          }
          IntervalResponse.MergeFrom(other.IntervalResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            global::Nitric.Proto.Schedules.v1.RegistrationRequest subBuilder = new global::Nitric.Proto.Schedules.v1.RegistrationRequest();
            if (contentCase_ == ContentOneofCase.RegistrationRequest) {
              subBuilder.MergeFrom(RegistrationRequest);
            }
            input.ReadMessage(subBuilder);
            RegistrationRequest = subBuilder;
            break;
          }
          case 26: {
            global::Nitric.Proto.Schedules.v1.IntervalResponse subBuilder = new global::Nitric.Proto.Schedules.v1.IntervalResponse();
            if (contentCase_ == ContentOneofCase.IntervalResponse) {
              subBuilder.MergeFrom(IntervalResponse);
            }
            input.ReadMessage(subBuilder);
            IntervalResponse = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            global::Nitric.Proto.Schedules.v1.RegistrationRequest subBuilder = new global::Nitric.Proto.Schedules.v1.RegistrationRequest();
            if (contentCase_ == ContentOneofCase.RegistrationRequest) {
              subBuilder.MergeFrom(RegistrationRequest);
            }
            input.ReadMessage(subBuilder);
            RegistrationRequest = subBuilder;
            break;
          }
          case 26: {
            global::Nitric.Proto.Schedules.v1.IntervalResponse subBuilder = new global::Nitric.Proto.Schedules.v1.IntervalResponse();
            if (contentCase_ == ContentOneofCase.IntervalResponse) {
              subBuilder.MergeFrom(IntervalResponse);
            }
            input.ReadMessage(subBuilder);
            IntervalResponse = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IntervalRequest : pb::IMessage<IntervalRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IntervalRequest> _parser = new pb::MessageParser<IntervalRequest>(() => new IntervalRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IntervalRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Schedules.v1.SchedulesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntervalRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntervalRequest(IntervalRequest other) : this() {
      scheduleName_ = other.scheduleName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntervalRequest Clone() {
      return new IntervalRequest(this);
    }

    /// <summary>Field number for the "schedule_name" field.</summary>
    public const int ScheduleNameFieldNumber = 1;
    private string scheduleName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ScheduleName {
      get { return scheduleName_; }
      set {
        scheduleName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IntervalRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IntervalRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ScheduleName != other.ScheduleName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ScheduleName.Length != 0) hash ^= ScheduleName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ScheduleName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ScheduleName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ScheduleName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ScheduleName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ScheduleName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScheduleName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IntervalRequest other) {
      if (other == null) {
        return;
      }
      if (other.ScheduleName.Length != 0) {
        ScheduleName = other.ScheduleName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ScheduleName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ScheduleName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ServerMessages are sent from the nitric server to the service
  /// </summary>
  public sealed partial class ServerMessage : pb::IMessage<ServerMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerMessage> _parser = new pb::MessageParser<ServerMessage>(() => new ServerMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Schedules.v1.SchedulesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerMessage(ServerMessage other) : this() {
      id_ = other.id_;
      switch (other.ContentCase) {
        case ContentOneofCase.RegistrationResponse:
          RegistrationResponse = other.RegistrationResponse.Clone();
          break;
        case ContentOneofCase.IntervalRequest:
          IntervalRequest = other.IntervalRequest.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerMessage Clone() {
      return new ServerMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// globally unique ID of the request/response pair
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "registration_response" field.</summary>
    public const int RegistrationResponseFieldNumber = 2;
    /// <summary>
    /// Response to a schedule subscription request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Schedules.v1.RegistrationResponse RegistrationResponse {
      get { return contentCase_ == ContentOneofCase.RegistrationResponse ? (global::Nitric.Proto.Schedules.v1.RegistrationResponse) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.RegistrationResponse;
      }
    }

    /// <summary>Field number for the "interval_request" field.</summary>
    public const int IntervalRequestFieldNumber = 3;
    /// <summary>
    /// A schedule interval trigger request (i.e. call the callback)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Schedules.v1.IntervalRequest IntervalRequest {
      get { return contentCase_ == ContentOneofCase.IntervalRequest ? (global::Nitric.Proto.Schedules.v1.IntervalRequest) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.IntervalRequest;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      RegistrationResponse = 2,
      IntervalRequest = 3,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(RegistrationResponse, other.RegistrationResponse)) return false;
      if (!object.Equals(IntervalRequest, other.IntervalRequest)) return false;
      if (ContentCase != other.ContentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (contentCase_ == ContentOneofCase.RegistrationResponse) hash ^= RegistrationResponse.GetHashCode();
      if (contentCase_ == ContentOneofCase.IntervalRequest) hash ^= IntervalRequest.GetHashCode();
      hash ^= (int) contentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (contentCase_ == ContentOneofCase.RegistrationResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(RegistrationResponse);
      }
      if (contentCase_ == ContentOneofCase.IntervalRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(IntervalRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (contentCase_ == ContentOneofCase.RegistrationResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(RegistrationResponse);
      }
      if (contentCase_ == ContentOneofCase.IntervalRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(IntervalRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (contentCase_ == ContentOneofCase.RegistrationResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegistrationResponse);
      }
      if (contentCase_ == ContentOneofCase.IntervalRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IntervalRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.RegistrationResponse:
          if (RegistrationResponse == null) {
            RegistrationResponse = new global::Nitric.Proto.Schedules.v1.RegistrationResponse();
          }
          RegistrationResponse.MergeFrom(other.RegistrationResponse);
          break;
        case ContentOneofCase.IntervalRequest:
          if (IntervalRequest == null) {
            IntervalRequest = new global::Nitric.Proto.Schedules.v1.IntervalRequest();
          }
          IntervalRequest.MergeFrom(other.IntervalRequest);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            global::Nitric.Proto.Schedules.v1.RegistrationResponse subBuilder = new global::Nitric.Proto.Schedules.v1.RegistrationResponse();
            if (contentCase_ == ContentOneofCase.RegistrationResponse) {
              subBuilder.MergeFrom(RegistrationResponse);
            }
            input.ReadMessage(subBuilder);
            RegistrationResponse = subBuilder;
            break;
          }
          case 26: {
            global::Nitric.Proto.Schedules.v1.IntervalRequest subBuilder = new global::Nitric.Proto.Schedules.v1.IntervalRequest();
            if (contentCase_ == ContentOneofCase.IntervalRequest) {
              subBuilder.MergeFrom(IntervalRequest);
            }
            input.ReadMessage(subBuilder);
            IntervalRequest = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            global::Nitric.Proto.Schedules.v1.RegistrationResponse subBuilder = new global::Nitric.Proto.Schedules.v1.RegistrationResponse();
            if (contentCase_ == ContentOneofCase.RegistrationResponse) {
              subBuilder.MergeFrom(RegistrationResponse);
            }
            input.ReadMessage(subBuilder);
            RegistrationResponse = subBuilder;
            break;
          }
          case 26: {
            global::Nitric.Proto.Schedules.v1.IntervalRequest subBuilder = new global::Nitric.Proto.Schedules.v1.IntervalRequest();
            if (contentCase_ == ContentOneofCase.IntervalRequest) {
              subBuilder.MergeFrom(IntervalRequest);
            }
            input.ReadMessage(subBuilder);
            IntervalRequest = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegistrationRequest : pb::IMessage<RegistrationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegistrationRequest> _parser = new pb::MessageParser<RegistrationRequest>(() => new RegistrationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegistrationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Schedules.v1.SchedulesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationRequest(RegistrationRequest other) : this() {
      scheduleName_ = other.scheduleName_;
      switch (other.CadenceCase) {
        case CadenceOneofCase.Every:
          Every = other.Every.Clone();
          break;
        case CadenceOneofCase.Cron:
          Cron = other.Cron.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationRequest Clone() {
      return new RegistrationRequest(this);
    }

    /// <summary>Field number for the "schedule_name" field.</summary>
    public const int ScheduleNameFieldNumber = 1;
    private string scheduleName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ScheduleName {
      get { return scheduleName_; }
      set {
        scheduleName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "every" field.</summary>
    public const int EveryFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Schedules.v1.ScheduleEvery Every {
      get { return cadenceCase_ == CadenceOneofCase.Every ? (global::Nitric.Proto.Schedules.v1.ScheduleEvery) cadence_ : null; }
      set {
        cadence_ = value;
        cadenceCase_ = value == null ? CadenceOneofCase.None : CadenceOneofCase.Every;
      }
    }

    /// <summary>Field number for the "cron" field.</summary>
    public const int CronFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Schedules.v1.ScheduleCron Cron {
      get { return cadenceCase_ == CadenceOneofCase.Cron ? (global::Nitric.Proto.Schedules.v1.ScheduleCron) cadence_ : null; }
      set {
        cadence_ = value;
        cadenceCase_ = value == null ? CadenceOneofCase.None : CadenceOneofCase.Cron;
      }
    }

    private object cadence_;
    /// <summary>Enum of possible cases for the "cadence" oneof.</summary>
    public enum CadenceOneofCase {
      None = 0,
      Every = 10,
      Cron = 11,
    }
    private CadenceOneofCase cadenceCase_ = CadenceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CadenceOneofCase CadenceCase {
      get { return cadenceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCadence() {
      cadenceCase_ = CadenceOneofCase.None;
      cadence_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegistrationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegistrationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ScheduleName != other.ScheduleName) return false;
      if (!object.Equals(Every, other.Every)) return false;
      if (!object.Equals(Cron, other.Cron)) return false;
      if (CadenceCase != other.CadenceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ScheduleName.Length != 0) hash ^= ScheduleName.GetHashCode();
      if (cadenceCase_ == CadenceOneofCase.Every) hash ^= Every.GetHashCode();
      if (cadenceCase_ == CadenceOneofCase.Cron) hash ^= Cron.GetHashCode();
      hash ^= (int) cadenceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ScheduleName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ScheduleName);
      }
      if (cadenceCase_ == CadenceOneofCase.Every) {
        output.WriteRawTag(82);
        output.WriteMessage(Every);
      }
      if (cadenceCase_ == CadenceOneofCase.Cron) {
        output.WriteRawTag(90);
        output.WriteMessage(Cron);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ScheduleName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ScheduleName);
      }
      if (cadenceCase_ == CadenceOneofCase.Every) {
        output.WriteRawTag(82);
        output.WriteMessage(Every);
      }
      if (cadenceCase_ == CadenceOneofCase.Cron) {
        output.WriteRawTag(90);
        output.WriteMessage(Cron);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ScheduleName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScheduleName);
      }
      if (cadenceCase_ == CadenceOneofCase.Every) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Every);
      }
      if (cadenceCase_ == CadenceOneofCase.Cron) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cron);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegistrationRequest other) {
      if (other == null) {
        return;
      }
      if (other.ScheduleName.Length != 0) {
        ScheduleName = other.ScheduleName;
      }
      switch (other.CadenceCase) {
        case CadenceOneofCase.Every:
          if (Every == null) {
            Every = new global::Nitric.Proto.Schedules.v1.ScheduleEvery();
          }
          Every.MergeFrom(other.Every);
          break;
        case CadenceOneofCase.Cron:
          if (Cron == null) {
            Cron = new global::Nitric.Proto.Schedules.v1.ScheduleCron();
          }
          Cron.MergeFrom(other.Cron);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ScheduleName = input.ReadString();
            break;
          }
          case 82: {
            global::Nitric.Proto.Schedules.v1.ScheduleEvery subBuilder = new global::Nitric.Proto.Schedules.v1.ScheduleEvery();
            if (cadenceCase_ == CadenceOneofCase.Every) {
              subBuilder.MergeFrom(Every);
            }
            input.ReadMessage(subBuilder);
            Every = subBuilder;
            break;
          }
          case 90: {
            global::Nitric.Proto.Schedules.v1.ScheduleCron subBuilder = new global::Nitric.Proto.Schedules.v1.ScheduleCron();
            if (cadenceCase_ == CadenceOneofCase.Cron) {
              subBuilder.MergeFrom(Cron);
            }
            input.ReadMessage(subBuilder);
            Cron = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ScheduleName = input.ReadString();
            break;
          }
          case 82: {
            global::Nitric.Proto.Schedules.v1.ScheduleEvery subBuilder = new global::Nitric.Proto.Schedules.v1.ScheduleEvery();
            if (cadenceCase_ == CadenceOneofCase.Every) {
              subBuilder.MergeFrom(Every);
            }
            input.ReadMessage(subBuilder);
            Every = subBuilder;
            break;
          }
          case 90: {
            global::Nitric.Proto.Schedules.v1.ScheduleCron subBuilder = new global::Nitric.Proto.Schedules.v1.ScheduleCron();
            if (cadenceCase_ == CadenceOneofCase.Cron) {
              subBuilder.MergeFrom(Cron);
            }
            input.ReadMessage(subBuilder);
            Cron = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScheduleEvery : pb::IMessage<ScheduleEvery>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleEvery> _parser = new pb::MessageParser<ScheduleEvery>(() => new ScheduleEvery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScheduleEvery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Schedules.v1.SchedulesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleEvery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleEvery(ScheduleEvery other) : this() {
      rate_ = other.rate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleEvery Clone() {
      return new ScheduleEvery(this);
    }

    /// <summary>Field number for the "rate" field.</summary>
    public const int RateFieldNumber = 1;
    private string rate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Rate {
      get { return rate_; }
      set {
        rate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScheduleEvery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScheduleEvery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rate != other.Rate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rate.Length != 0) hash ^= Rate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Rate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Rate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Rate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Rate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Rate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScheduleEvery other) {
      if (other == null) {
        return;
      }
      if (other.Rate.Length != 0) {
        Rate = other.Rate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Rate = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Rate = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScheduleCron : pb::IMessage<ScheduleCron>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleCron> _parser = new pb::MessageParser<ScheduleCron>(() => new ScheduleCron());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScheduleCron> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Schedules.v1.SchedulesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleCron() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleCron(ScheduleCron other) : this() {
      expression_ = other.expression_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleCron Clone() {
      return new ScheduleCron(this);
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 1;
    private string expression_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Expression {
      get { return expression_; }
      set {
        expression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScheduleCron);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScheduleCron other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Expression != other.Expression) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Expression.Length != 0) hash ^= Expression.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Expression.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Expression);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Expression.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Expression);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Expression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Expression);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScheduleCron other) {
      if (other == null) {
        return;
      }
      if (other.Expression.Length != 0) {
        Expression = other.Expression;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Expression = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Expression = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegistrationResponse : pb::IMessage<RegistrationResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegistrationResponse> _parser = new pb::MessageParser<RegistrationResponse>(() => new RegistrationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegistrationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Schedules.v1.SchedulesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationResponse(RegistrationResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationResponse Clone() {
      return new RegistrationResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegistrationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegistrationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegistrationResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class IntervalResponse : pb::IMessage<IntervalResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IntervalResponse> _parser = new pb::MessageParser<IntervalResponse>(() => new IntervalResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IntervalResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Schedules.v1.SchedulesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntervalResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntervalResponse(IntervalResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntervalResponse Clone() {
      return new IntervalResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IntervalResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IntervalResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IntervalResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
