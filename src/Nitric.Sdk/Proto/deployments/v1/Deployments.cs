// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: nitric/proto/deployments/v1/deployments.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nitric.Proto.Deployments.v1 {

  /// <summary>Holder for reflection information generated from nitric/proto/deployments/v1/deployments.proto</summary>
  public static partial class DeploymentsReflection {

    #region Descriptor
    /// <summary>File descriptor for nitric/proto/deployments/v1/deployments.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DeploymentsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1uaXRyaWMvcHJvdG8vZGVwbG95bWVudHMvdjEvZGVwbG95bWVudHMucHJv",
            "dG8SG25pdHJpYy5wcm90by5kZXBsb3ltZW50cy52MRocZ29vZ2xlL3Byb3Rv",
            "YnVmL3N0cnVjdC5wcm90bxopbml0cmljL3Byb3RvL3Jlc291cmNlcy92MS9y",
            "ZXNvdXJjZXMucHJvdG8aJW5pdHJpYy9wcm90by9zdG9yYWdlL3YxL3N0b3Jh",
            "Z2UucHJvdG8iiAEKE0RlcGxveW1lbnRVcFJlcXVlc3QSLwoEc3BlYxgBIAEo",
            "CzIhLm5pdHJpYy5wcm90by5kZXBsb3ltZW50cy52MS5TcGVjEisKCmF0dHJp",
            "YnV0ZXMYAiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0EhMKC2ludGVy",
            "YWN0aXZlGAMgASgIIqkBChFEZXBsb3ltZW50VXBFdmVudBIRCgdtZXNzYWdl",
            "GAEgASgJSAASPQoGdXBkYXRlGAIgASgLMisubml0cmljLnByb3RvLmRlcGxv",
            "eW1lbnRzLnYxLlJlc291cmNlVXBkYXRlSAASNwoGcmVzdWx0GAMgASgLMiUu",
            "bml0cmljLnByb3RvLmRlcGxveW1lbnRzLnYxLlVwUmVzdWx0SABCCQoHY29u",
            "dGVudCKAAgoOUmVzb3VyY2VVcGRhdGUSOQoCaWQYASABKAsyLS5uaXRyaWMu",
            "cHJvdG8ucmVzb3VyY2VzLnYxLlJlc291cmNlSWRlbnRpZmllchJFCgZhY3Rp",
            "b24YAyABKA4yNS5uaXRyaWMucHJvdG8uZGVwbG95bWVudHMudjEuUmVzb3Vy",
            "Y2VEZXBsb3ltZW50QWN0aW9uEkUKBnN0YXR1cxgEIAEoDjI1Lm5pdHJpYy5w",
            "cm90by5kZXBsb3ltZW50cy52MS5SZXNvdXJjZURlcGxveW1lbnRTdGF0dXMS",
            "FAoMc3ViX3Jlc291cmNlGAUgASgJEg8KB21lc3NhZ2UYBiABKAkiNgoIVXBS",
            "ZXN1bHQSDwoHc3VjY2VzcxgBIAEoCBIOCgR0ZXh0GAIgASgJSABCCQoHY29u",
            "dGVudCJZChVEZXBsb3ltZW50RG93blJlcXVlc3QSKwoKYXR0cmlidXRlcxgB",
            "IAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QSEwoLaW50ZXJhY3RpdmUY",
            "AiABKAgirQEKE0RlcGxveW1lbnREb3duRXZlbnQSEQoHbWVzc2FnZRgBIAEo",
            "CUgAEjkKBnJlc3VsdBgCIAEoCzInLm5pdHJpYy5wcm90by5kZXBsb3ltZW50",
            "cy52MS5Eb3duUmVzdWx0SAASPQoGdXBkYXRlGAMgASgLMisubml0cmljLnBy",
            "b3RvLmRlcGxveW1lbnRzLnYxLlJlc291cmNlVXBkYXRlSABCCQoHY29udGVu",
            "dCIMCgpEb3duUmVzdWx0IhoKC0ltYWdlU291cmNlEgsKA3VyaRgBIAEoCSL+",
            "AQoHU2VydmljZRI5CgVpbWFnZRgBIAEoCzIoLm5pdHJpYy5wcm90by5kZXBs",
            "b3ltZW50cy52MS5JbWFnZVNvdXJjZUgAEg8KB3dvcmtlcnMYCiABKAUSEwoH",
            "dGltZW91dBgLIAEoBUICGAESEgoGbWVtb3J5GAwgASgFQgIYARIMCgR0eXBl",
            "GA0gASgJEjoKA2VudhgOIAMoCzItLm5pdHJpYy5wcm90by5kZXBsb3ltZW50",
            "cy52MS5TZXJ2aWNlLkVudkVudHJ5GioKCEVudkVudHJ5EgsKA2tleRgBIAEo",
            "CRINCgV2YWx1ZRgCIAEoCToCOAFCCAoGc291cmNlIkgKBkJ1Y2tldBI+Cgls",
            "aXN0ZW5lcnMYASADKAsyKy5uaXRyaWMucHJvdG8uZGVwbG95bWVudHMudjEu",
            "QnVja2V0TGlzdGVuZXIiawoOQnVja2V0TGlzdGVuZXISPAoGY29uZmlnGAEg",
            "ASgLMiwubml0cmljLnByb3RvLnN0b3JhZ2UudjEuUmVnaXN0cmF0aW9uUmVx",
            "dWVzdBIRCgdzZXJ2aWNlGAIgASgJSABCCAoGdGFyZ2V0Ik8KBVRvcGljEkYK",
            "DXN1YnNjcmlwdGlvbnMYASADKAsyLy5uaXRyaWMucHJvdG8uZGVwbG95bWVu",
            "dHMudjEuU3Vic2NyaXB0aW9uVGFyZ2V0IgcKBVF1ZXVlIg8KDUtleVZhbHVl",
            "U3RvcmUiCAoGU2VjcmV0IjEKElN1YnNjcmlwdGlvblRhcmdldBIRCgdzZXJ2",
            "aWNlGAEgASgJSABCCAoGdGFyZ2V0IlQKEVRvcGljU3Vic2NyaXB0aW9uEj8K",
            "BnRhcmdldBgBIAEoCzIvLm5pdHJpYy5wcm90by5kZXBsb3ltZW50cy52MS5T",
            "dWJzY3JpcHRpb25UYXJnZXQiKQoKSHR0cFRhcmdldBIRCgdzZXJ2aWNlGAEg",
            "ASgJSABCCAoGdGFyZ2V0Ij8KBEh0dHASNwoGdGFyZ2V0GAEgASgLMicubml0",
            "cmljLnByb3RvLmRlcGxveW1lbnRzLnYxLkh0dHBUYXJnZXQiJAoDQXBpEhEK",
            "B29wZW5hcGkYASABKAlIAEIKCghkb2N1bWVudCLgAQoJV2Vic29ja2V0EkQK",
            "DmNvbm5lY3RfdGFyZ2V0GAEgASgLMiwubml0cmljLnByb3RvLmRlcGxveW1l",
            "bnRzLnYxLldlYnNvY2tldFRhcmdldBJHChFkaXNjb25uZWN0X3RhcmdldBgC",
            "IAEoCzIsLm5pdHJpYy5wcm90by5kZXBsb3ltZW50cy52MS5XZWJzb2NrZXRU",
            "YXJnZXQSRAoObWVzc2FnZV90YXJnZXQYAyABKAsyLC5uaXRyaWMucHJvdG8u",
            "ZGVwbG95bWVudHMudjEuV2Vic29ja2V0VGFyZ2V0Ii4KD1dlYnNvY2tldFRh",
            "cmdldBIRCgdzZXJ2aWNlGAEgASgJSABCCAoGdGFyZ2V0Ii0KDlNjaGVkdWxl",
            "VGFyZ2V0EhEKB3NlcnZpY2UYASABKAlIAEIICgZ0YXJnZXQiygEKCFNjaGVk",
            "dWxlEjsKBnRhcmdldBgBIAEoCzIrLm5pdHJpYy5wcm90by5kZXBsb3ltZW50",
            "cy52MS5TY2hlZHVsZVRhcmdldBI7CgVldmVyeRgKIAEoCzIqLm5pdHJpYy5w",
            "cm90by5kZXBsb3ltZW50cy52MS5TY2hlZHVsZUV2ZXJ5SAASOQoEY3JvbhgL",
            "IAEoCzIpLm5pdHJpYy5wcm90by5kZXBsb3ltZW50cy52MS5TY2hlZHVsZUNy",
            "b25IAEIJCgdjYWRlbmNlIh0KDVNjaGVkdWxlRXZlcnkSDAoEcmF0ZRgBIAEo",
            "CSIiCgxTY2hlZHVsZUNyb24SEgoKZXhwcmVzc2lvbhgBIAEoCSK6BQoIUmVz",
            "b3VyY2USOQoCaWQYASABKAsyLS5uaXRyaWMucHJvdG8ucmVzb3VyY2VzLnYx",
            "LlJlc291cmNlSWRlbnRpZmllchI3CgdzZXJ2aWNlGAogASgLMiQubml0cmlj",
            "LnByb3RvLmRlcGxveW1lbnRzLnYxLlNlcnZpY2VIABI1CgZidWNrZXQYCyAB",
            "KAsyIy5uaXRyaWMucHJvdG8uZGVwbG95bWVudHMudjEuQnVja2V0SAASMwoF",
            "dG9waWMYDCABKAsyIi5uaXRyaWMucHJvdG8uZGVwbG95bWVudHMudjEuVG9w",
            "aWNIABIvCgNhcGkYDSABKAsyIC5uaXRyaWMucHJvdG8uZGVwbG95bWVudHMu",
            "djEuQXBpSAASNQoGcG9saWN5GA4gASgLMiMubml0cmljLnByb3RvLmRlcGxv",
            "eW1lbnRzLnYxLlBvbGljeUgAEjkKCHNjaGVkdWxlGA8gASgLMiUubml0cmlj",
            "LnByb3RvLmRlcGxveW1lbnRzLnYxLlNjaGVkdWxlSAASRQoPa2V5X3ZhbHVl",
            "X3N0b3JlGBAgASgLMioubml0cmljLnByb3RvLmRlcGxveW1lbnRzLnYxLktl",
            "eVZhbHVlU3RvcmVIABI1CgZzZWNyZXQYESABKAsyIy5uaXRyaWMucHJvdG8u",
            "ZGVwbG95bWVudHMudjEuU2VjcmV0SAASOwoJd2Vic29ja2V0GBIgASgLMiYu",
            "bml0cmljLnByb3RvLmRlcGxveW1lbnRzLnYxLldlYnNvY2tldEgAEjEKBGh0",
            "dHAYEyABKAsyIS5uaXRyaWMucHJvdG8uZGVwbG95bWVudHMudjEuSHR0cEgA",
            "EjMKBXF1ZXVlGBQgASgLMiIubml0cmljLnByb3RvLmRlcGxveW1lbnRzLnYx",
            "LlF1ZXVlSABCCAoGY29uZmlnIrEBCgZQb2xpY3kSOQoKcHJpbmNpcGFscxgB",
            "IAMoCzIlLm5pdHJpYy5wcm90by5kZXBsb3ltZW50cy52MS5SZXNvdXJjZRIy",
            "CgdhY3Rpb25zGAIgAygOMiEubml0cmljLnByb3RvLnJlc291cmNlcy52MS5B",
            "Y3Rpb24SOAoJcmVzb3VyY2VzGAMgAygLMiUubml0cmljLnByb3RvLmRlcGxv",
            "eW1lbnRzLnYxLlJlc291cmNlIkAKBFNwZWMSOAoJcmVzb3VyY2VzGAEgAygL",
            "MiUubml0cmljLnByb3RvLmRlcGxveW1lbnRzLnYxLlJlc291cmNlKlUKGFJl",
            "c291cmNlRGVwbG95bWVudEFjdGlvbhIKCgZDUkVBVEUQABIKCgZVUERBVEUQ",
            "ARILCgdSRVBMQUNFEAISCAoEU0FNRRADEgoKBkRFTEVURRAEKlEKGFJlc291",
            "cmNlRGVwbG95bWVudFN0YXR1cxILCgdQRU5ESU5HEAASDwoLSU5fUFJPR1JF",
            "U1MQARILCgdTVUNDRVNTEAISCgoGRkFJTEVEEAMy5gEKCkRlcGxveW1lbnQS",
            "aAoCVXASMC5uaXRyaWMucHJvdG8uZGVwbG95bWVudHMudjEuRGVwbG95bWVu",
            "dFVwUmVxdWVzdBouLm5pdHJpYy5wcm90by5kZXBsb3ltZW50cy52MS5EZXBs",
            "b3ltZW50VXBFdmVudDABEm4KBERvd24SMi5uaXRyaWMucHJvdG8uZGVwbG95",
            "bWVudHMudjEuRGVwbG95bWVudERvd25SZXF1ZXN0GjAubml0cmljLnByb3Rv",
            "LmRlcGxveW1lbnRzLnYxLkRlcGxveW1lbnREb3duRXZlbnQwAUK1AQoeaW8u",
            "bml0cmljLnByb3RvLmRlcGxveW1lbnRzLnYxQgtEZXBsb3ltZW50c1ABWkhn",
            "aXRodWIuY29tL25pdHJpY3RlY2gvbml0cmljL2NvcmUvcGtnL3Byb3RvL2Rl",
            "cGxveW1lbnRzL3YxO2RlcGxveW1lbnRzcGKqAhtOaXRyaWMuUHJvdG8uRGVw",
            "bG95bWVudHMudjHKAhtOaXRyaWNcUHJvdG9cRGVwbG95bWVudHNcVjFiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Nitric.Proto.Resources.v1.ResourcesReflection.Descriptor, global::Nitric.Proto.Storage.v1.StorageReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Nitric.Proto.Deployments.v1.ResourceDeploymentAction), typeof(global::Nitric.Proto.Deployments.v1.ResourceDeploymentStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.DeploymentUpRequest), global::Nitric.Proto.Deployments.v1.DeploymentUpRequest.Parser, new[]{ "Spec", "Attributes", "Interactive" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.DeploymentUpEvent), global::Nitric.Proto.Deployments.v1.DeploymentUpEvent.Parser, new[]{ "Message", "Update", "Result" }, new[]{ "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.ResourceUpdate), global::Nitric.Proto.Deployments.v1.ResourceUpdate.Parser, new[]{ "Id", "Action", "Status", "SubResource", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.UpResult), global::Nitric.Proto.Deployments.v1.UpResult.Parser, new[]{ "Success", "Text" }, new[]{ "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.DeploymentDownRequest), global::Nitric.Proto.Deployments.v1.DeploymentDownRequest.Parser, new[]{ "Attributes", "Interactive" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.DeploymentDownEvent), global::Nitric.Proto.Deployments.v1.DeploymentDownEvent.Parser, new[]{ "Message", "Result", "Update" }, new[]{ "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.DownResult), global::Nitric.Proto.Deployments.v1.DownResult.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.ImageSource), global::Nitric.Proto.Deployments.v1.ImageSource.Parser, new[]{ "Uri" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.Service), global::Nitric.Proto.Deployments.v1.Service.Parser, new[]{ "Image", "Workers", "Timeout", "Memory", "Type", "Env" }, new[]{ "Source" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.Bucket), global::Nitric.Proto.Deployments.v1.Bucket.Parser, new[]{ "Listeners" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.BucketListener), global::Nitric.Proto.Deployments.v1.BucketListener.Parser, new[]{ "Config", "Service" }, new[]{ "Target" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.Topic), global::Nitric.Proto.Deployments.v1.Topic.Parser, new[]{ "Subscriptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.Queue), global::Nitric.Proto.Deployments.v1.Queue.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.KeyValueStore), global::Nitric.Proto.Deployments.v1.KeyValueStore.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.Secret), global::Nitric.Proto.Deployments.v1.Secret.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.SubscriptionTarget), global::Nitric.Proto.Deployments.v1.SubscriptionTarget.Parser, new[]{ "Service" }, new[]{ "Target" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.TopicSubscription), global::Nitric.Proto.Deployments.v1.TopicSubscription.Parser, new[]{ "Target" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.HttpTarget), global::Nitric.Proto.Deployments.v1.HttpTarget.Parser, new[]{ "Service" }, new[]{ "Target" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.Http), global::Nitric.Proto.Deployments.v1.Http.Parser, new[]{ "Target" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.Api), global::Nitric.Proto.Deployments.v1.Api.Parser, new[]{ "Openapi" }, new[]{ "Document" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.Websocket), global::Nitric.Proto.Deployments.v1.Websocket.Parser, new[]{ "ConnectTarget", "DisconnectTarget", "MessageTarget" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.WebsocketTarget), global::Nitric.Proto.Deployments.v1.WebsocketTarget.Parser, new[]{ "Service" }, new[]{ "Target" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.ScheduleTarget), global::Nitric.Proto.Deployments.v1.ScheduleTarget.Parser, new[]{ "Service" }, new[]{ "Target" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.Schedule), global::Nitric.Proto.Deployments.v1.Schedule.Parser, new[]{ "Target", "Every", "Cron" }, new[]{ "Cadence" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.ScheduleEvery), global::Nitric.Proto.Deployments.v1.ScheduleEvery.Parser, new[]{ "Rate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.ScheduleCron), global::Nitric.Proto.Deployments.v1.ScheduleCron.Parser, new[]{ "Expression" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.Resource), global::Nitric.Proto.Deployments.v1.Resource.Parser, new[]{ "Id", "Service", "Bucket", "Topic", "Api", "Policy", "Schedule", "KeyValueStore", "Secret", "Websocket", "Http", "Queue" }, new[]{ "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.Policy), global::Nitric.Proto.Deployments.v1.Policy.Parser, new[]{ "Principals", "Actions", "Resources" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Deployments.v1.Spec), global::Nitric.Proto.Deployments.v1.Spec.Parser, new[]{ "Resources" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ResourceDeploymentAction {
    /// <summary>
    /// A new resource is being created
    /// </summary>
    [pbr::OriginalName("CREATE")] Create = 0,
    /// <summary>
    /// An existing resource is being updated
    /// </summary>
    [pbr::OriginalName("UPDATE")] Update = 1,
    /// <summary>
    /// An existing resource is being replaced
    /// </summary>
    [pbr::OriginalName("REPLACE")] Replace = 2,
    /// <summary>
    /// No-op on the resource (it already exists and requires no changes)
    /// </summary>
    [pbr::OriginalName("SAME")] Same = 3,
    /// <summary>
    /// An existing resource is being deleted
    /// </summary>
    [pbr::OriginalName("DELETE")] Delete = 4,
  }

  public enum ResourceDeploymentStatus {
    /// <summary>
    /// The action hasn't started, usually due to a dependency
    /// </summary>
    [pbr::OriginalName("PENDING")] Pending = 0,
    /// <summary>
    /// The action in currently in-flight, e.g. waiting for cloud provder to provision a resource
    /// </summary>
    [pbr::OriginalName("IN_PROGRESS")] InProgress = 1,
    /// <summary>
    /// The action has been applied successfully
    /// </summary>
    [pbr::OriginalName("SUCCESS")] Success = 2,
    /// <summary>
    /// The action has failed to be (completely) applied
    /// </summary>
    [pbr::OriginalName("FAILED")] Failed = 3,
  }

  #endregion

  #region Messages
  public sealed partial class DeploymentUpRequest : pb::IMessage<DeploymentUpRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeploymentUpRequest> _parser = new pb::MessageParser<DeploymentUpRequest>(() => new DeploymentUpRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeploymentUpRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeploymentUpRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeploymentUpRequest(DeploymentUpRequest other) : this() {
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      interactive_ = other.interactive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeploymentUpRequest Clone() {
      return new DeploymentUpRequest(this);
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 1;
    private global::Nitric.Proto.Deployments.v1.Spec spec_;
    /// <summary>
    /// The spec to deploy
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.Spec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct attributes_;
    /// <summary>
    /// A map of attributes related to the deploy request
    /// this allows for adding project identifiers etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    /// <summary>Field number for the "interactive" field.</summary>
    public const int InteractiveFieldNumber = 3;
    private bool interactive_;
    /// <summary>
    /// A hint to the provider of the kind of output that the client can accept
    /// This will allow provider developers to provider richer output back to clients.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Interactive {
      get { return interactive_; }
      set {
        interactive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeploymentUpRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeploymentUpRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      if (Interactive != other.Interactive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (Interactive != false) hash ^= Interactive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (spec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Spec);
      }
      if (attributes_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Attributes);
      }
      if (Interactive != false) {
        output.WriteRawTag(24);
        output.WriteBool(Interactive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (spec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Spec);
      }
      if (attributes_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Attributes);
      }
      if (Interactive != false) {
        output.WriteRawTag(24);
        output.WriteBool(Interactive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (Interactive != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeploymentUpRequest other) {
      if (other == null) {
        return;
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Nitric.Proto.Deployments.v1.Spec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          Attributes = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      if (other.Interactive != false) {
        Interactive = other.Interactive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (spec_ == null) {
              Spec = new global::Nitric.Proto.Deployments.v1.Spec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 18: {
            if (attributes_ == null) {
              Attributes = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Attributes);
            break;
          }
          case 24: {
            Interactive = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (spec_ == null) {
              Spec = new global::Nitric.Proto.Deployments.v1.Spec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 18: {
            if (attributes_ == null) {
              Attributes = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Attributes);
            break;
          }
          case 24: {
            Interactive = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeploymentUpEvent : pb::IMessage<DeploymentUpEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeploymentUpEvent> _parser = new pb::MessageParser<DeploymentUpEvent>(() => new DeploymentUpEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeploymentUpEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeploymentUpEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeploymentUpEvent(DeploymentUpEvent other) : this() {
      switch (other.ContentCase) {
        case ContentOneofCase.Message:
          Message = other.Message;
          break;
        case ContentOneofCase.Update:
          Update = other.Update.Clone();
          break;
        case ContentOneofCase.Result:
          Result = other.Result.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeploymentUpEvent Clone() {
      return new DeploymentUpEvent(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return contentCase_ == ContentOneofCase.Message ? (string) content_ : ""; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        contentCase_ = ContentOneofCase.Message;
      }
    }

    /// <summary>Field number for the "update" field.</summary>
    public const int UpdateFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.ResourceUpdate Update {
      get { return contentCase_ == ContentOneofCase.Update ? (global::Nitric.Proto.Deployments.v1.ResourceUpdate) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.Update;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.UpResult Result {
      get { return contentCase_ == ContentOneofCase.Result ? (global::Nitric.Proto.Deployments.v1.UpResult) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.Result;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      Message = 1,
      Update = 2,
      Result = 3,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeploymentUpEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeploymentUpEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      if (!object.Equals(Update, other.Update)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      if (ContentCase != other.ContentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contentCase_ == ContentOneofCase.Message) hash ^= Message.GetHashCode();
      if (contentCase_ == ContentOneofCase.Update) hash ^= Update.GetHashCode();
      if (contentCase_ == ContentOneofCase.Result) hash ^= Result.GetHashCode();
      hash ^= (int) contentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (contentCase_ == ContentOneofCase.Message) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (contentCase_ == ContentOneofCase.Update) {
        output.WriteRawTag(18);
        output.WriteMessage(Update);
      }
      if (contentCase_ == ContentOneofCase.Result) {
        output.WriteRawTag(26);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (contentCase_ == ContentOneofCase.Message) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (contentCase_ == ContentOneofCase.Update) {
        output.WriteRawTag(18);
        output.WriteMessage(Update);
      }
      if (contentCase_ == ContentOneofCase.Result) {
        output.WriteRawTag(26);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contentCase_ == ContentOneofCase.Message) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (contentCase_ == ContentOneofCase.Update) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Update);
      }
      if (contentCase_ == ContentOneofCase.Result) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeploymentUpEvent other) {
      if (other == null) {
        return;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.Message:
          Message = other.Message;
          break;
        case ContentOneofCase.Update:
          if (Update == null) {
            Update = new global::Nitric.Proto.Deployments.v1.ResourceUpdate();
          }
          Update.MergeFrom(other.Update);
          break;
        case ContentOneofCase.Result:
          if (Result == null) {
            Result = new global::Nitric.Proto.Deployments.v1.UpResult();
          }
          Result.MergeFrom(other.Result);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
          case 18: {
            global::Nitric.Proto.Deployments.v1.ResourceUpdate subBuilder = new global::Nitric.Proto.Deployments.v1.ResourceUpdate();
            if (contentCase_ == ContentOneofCase.Update) {
              subBuilder.MergeFrom(Update);
            }
            input.ReadMessage(subBuilder);
            Update = subBuilder;
            break;
          }
          case 26: {
            global::Nitric.Proto.Deployments.v1.UpResult subBuilder = new global::Nitric.Proto.Deployments.v1.UpResult();
            if (contentCase_ == ContentOneofCase.Result) {
              subBuilder.MergeFrom(Result);
            }
            input.ReadMessage(subBuilder);
            Result = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
          case 18: {
            global::Nitric.Proto.Deployments.v1.ResourceUpdate subBuilder = new global::Nitric.Proto.Deployments.v1.ResourceUpdate();
            if (contentCase_ == ContentOneofCase.Update) {
              subBuilder.MergeFrom(Update);
            }
            input.ReadMessage(subBuilder);
            Update = subBuilder;
            break;
          }
          case 26: {
            global::Nitric.Proto.Deployments.v1.UpResult subBuilder = new global::Nitric.Proto.Deployments.v1.UpResult();
            if (contentCase_ == ContentOneofCase.Result) {
              subBuilder.MergeFrom(Result);
            }
            input.ReadMessage(subBuilder);
            Result = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResourceUpdate : pb::IMessage<ResourceUpdate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResourceUpdate> _parser = new pb::MessageParser<ResourceUpdate>(() => new ResourceUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResourceUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceUpdate(ResourceUpdate other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      action_ = other.action_;
      status_ = other.status_;
      subResource_ = other.subResource_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceUpdate Clone() {
      return new ResourceUpdate(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Nitric.Proto.Resources.v1.ResourceIdentifier id_;
    /// <summary>
    /// The resource being updated, if this is nil the update applies to the stack
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Resources.v1.ResourceIdentifier Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private global::Nitric.Proto.Deployments.v1.ResourceDeploymentAction action_ = global::Nitric.Proto.Deployments.v1.ResourceDeploymentAction.Create;
    /// <summary>
    /// The type of update being applied
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.ResourceDeploymentAction Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::Nitric.Proto.Deployments.v1.ResourceDeploymentStatus status_ = global::Nitric.Proto.Deployments.v1.ResourceDeploymentStatus.Pending;
    /// <summary>
    /// The current status of the action being applied
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.ResourceDeploymentStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "sub_resource" field.</summary>
    public const int SubResourceFieldNumber = 5;
    private string subResource_ = "";
    /// <summary>
    /// (optional) A globally unique identifier (scoped to the id above), used when Nitric Resources map 1:many in a cloud provider.
    /// e.g. the container image repository for a service deployment.
    /// This can also be set when id is nil above and it will imply a non-nitric resource that is necessary to deploy for a stack to operate 
    /// e.g. an Azure StorageAccount
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubResource {
      get { return subResource_; }
      set {
        subResource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 6;
    private string message_ = "";
    /// <summary>
    /// Additional information about the update
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResourceUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResourceUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (Action != other.Action) return false;
      if (Status != other.Status) return false;
      if (SubResource != other.SubResource) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (Action != global::Nitric.Proto.Deployments.v1.ResourceDeploymentAction.Create) hash ^= Action.GetHashCode();
      if (Status != global::Nitric.Proto.Deployments.v1.ResourceDeploymentStatus.Pending) hash ^= Status.GetHashCode();
      if (SubResource.Length != 0) hash ^= SubResource.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Action != global::Nitric.Proto.Deployments.v1.ResourceDeploymentAction.Create) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Action);
      }
      if (Status != global::Nitric.Proto.Deployments.v1.ResourceDeploymentStatus.Pending) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (SubResource.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SubResource);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Action != global::Nitric.Proto.Deployments.v1.ResourceDeploymentAction.Create) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Action);
      }
      if (Status != global::Nitric.Proto.Deployments.v1.ResourceDeploymentStatus.Pending) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (SubResource.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SubResource);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (Action != global::Nitric.Proto.Deployments.v1.ResourceDeploymentAction.Create) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (Status != global::Nitric.Proto.Deployments.v1.ResourceDeploymentStatus.Pending) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (SubResource.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubResource);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResourceUpdate other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Nitric.Proto.Resources.v1.ResourceIdentifier();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.Action != global::Nitric.Proto.Deployments.v1.ResourceDeploymentAction.Create) {
        Action = other.Action;
      }
      if (other.Status != global::Nitric.Proto.Deployments.v1.ResourceDeploymentStatus.Pending) {
        Status = other.Status;
      }
      if (other.SubResource.Length != 0) {
        SubResource = other.SubResource;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Nitric.Proto.Resources.v1.ResourceIdentifier();
            }
            input.ReadMessage(Id);
            break;
          }
          case 24: {
            Action = (global::Nitric.Proto.Deployments.v1.ResourceDeploymentAction) input.ReadEnum();
            break;
          }
          case 32: {
            Status = (global::Nitric.Proto.Deployments.v1.ResourceDeploymentStatus) input.ReadEnum();
            break;
          }
          case 42: {
            SubResource = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Nitric.Proto.Resources.v1.ResourceIdentifier();
            }
            input.ReadMessage(Id);
            break;
          }
          case 24: {
            Action = (global::Nitric.Proto.Deployments.v1.ResourceDeploymentAction) input.ReadEnum();
            break;
          }
          case 32: {
            Status = (global::Nitric.Proto.Deployments.v1.ResourceDeploymentStatus) input.ReadEnum();
            break;
          }
          case 42: {
            SubResource = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Terminal message indicating deployment success
  /// </summary>
  public sealed partial class UpResult : pb::IMessage<UpResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpResult> _parser = new pb::MessageParser<UpResult>(() => new UpResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpResult(UpResult other) : this() {
      success_ = other.success_;
      switch (other.ContentCase) {
        case ContentOneofCase.Text:
          Text = other.Text;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpResult Clone() {
      return new UpResult(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    /// <summary>
    /// Indicate the success status
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    /// <summary>
    /// Simple text output as result
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return contentCase_ == ContentOneofCase.Text ? (string) content_ : ""; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        contentCase_ = ContentOneofCase.Text;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      Text = 2,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (Text != other.Text) return false;
      if (ContentCase != other.ContentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (contentCase_ == ContentOneofCase.Text) hash ^= Text.GetHashCode();
      hash ^= (int) contentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (contentCase_ == ContentOneofCase.Text) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (contentCase_ == ContentOneofCase.Text) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (contentCase_ == ContentOneofCase.Text) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpResult other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.Text:
          Text = other.Text;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeploymentDownRequest : pb::IMessage<DeploymentDownRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeploymentDownRequest> _parser = new pb::MessageParser<DeploymentDownRequest>(() => new DeploymentDownRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeploymentDownRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeploymentDownRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeploymentDownRequest(DeploymentDownRequest other) : this() {
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      interactive_ = other.interactive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeploymentDownRequest Clone() {
      return new DeploymentDownRequest(this);
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Struct attributes_;
    /// <summary>
    /// A map of attributes related to the deploy request
    /// this allows for adding project identifiers etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    /// <summary>Field number for the "interactive" field.</summary>
    public const int InteractiveFieldNumber = 2;
    private bool interactive_;
    /// <summary>
    /// A hint to the provider of the kind of output that the client can accept
    /// This will allow provider developers to provider richer output back to clients.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Interactive {
      get { return interactive_; }
      set {
        interactive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeploymentDownRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeploymentDownRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Attributes, other.Attributes)) return false;
      if (Interactive != other.Interactive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (Interactive != false) hash ^= Interactive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (attributes_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Attributes);
      }
      if (Interactive != false) {
        output.WriteRawTag(16);
        output.WriteBool(Interactive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (attributes_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Attributes);
      }
      if (Interactive != false) {
        output.WriteRawTag(16);
        output.WriteBool(Interactive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (Interactive != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeploymentDownRequest other) {
      if (other == null) {
        return;
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          Attributes = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      if (other.Interactive != false) {
        Interactive = other.Interactive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (attributes_ == null) {
              Attributes = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Attributes);
            break;
          }
          case 16: {
            Interactive = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (attributes_ == null) {
              Attributes = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Attributes);
            break;
          }
          case 16: {
            Interactive = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DeploymentDownEvent : pb::IMessage<DeploymentDownEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeploymentDownEvent> _parser = new pb::MessageParser<DeploymentDownEvent>(() => new DeploymentDownEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeploymentDownEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeploymentDownEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeploymentDownEvent(DeploymentDownEvent other) : this() {
      switch (other.ContentCase) {
        case ContentOneofCase.Message:
          Message = other.Message;
          break;
        case ContentOneofCase.Result:
          Result = other.Result.Clone();
          break;
        case ContentOneofCase.Update:
          Update = other.Update.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeploymentDownEvent Clone() {
      return new DeploymentDownEvent(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return contentCase_ == ContentOneofCase.Message ? (string) content_ : ""; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        contentCase_ = ContentOneofCase.Message;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.DownResult Result {
      get { return contentCase_ == ContentOneofCase.Result ? (global::Nitric.Proto.Deployments.v1.DownResult) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.Result;
      }
    }

    /// <summary>Field number for the "update" field.</summary>
    public const int UpdateFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.ResourceUpdate Update {
      get { return contentCase_ == ContentOneofCase.Update ? (global::Nitric.Proto.Deployments.v1.ResourceUpdate) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.Update;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      Message = 1,
      Result = 2,
      Update = 3,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeploymentDownEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeploymentDownEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      if (!object.Equals(Result, other.Result)) return false;
      if (!object.Equals(Update, other.Update)) return false;
      if (ContentCase != other.ContentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contentCase_ == ContentOneofCase.Message) hash ^= Message.GetHashCode();
      if (contentCase_ == ContentOneofCase.Result) hash ^= Result.GetHashCode();
      if (contentCase_ == ContentOneofCase.Update) hash ^= Update.GetHashCode();
      hash ^= (int) contentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (contentCase_ == ContentOneofCase.Message) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (contentCase_ == ContentOneofCase.Result) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (contentCase_ == ContentOneofCase.Update) {
        output.WriteRawTag(26);
        output.WriteMessage(Update);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (contentCase_ == ContentOneofCase.Message) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (contentCase_ == ContentOneofCase.Result) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (contentCase_ == ContentOneofCase.Update) {
        output.WriteRawTag(26);
        output.WriteMessage(Update);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contentCase_ == ContentOneofCase.Message) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (contentCase_ == ContentOneofCase.Result) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (contentCase_ == ContentOneofCase.Update) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Update);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeploymentDownEvent other) {
      if (other == null) {
        return;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.Message:
          Message = other.Message;
          break;
        case ContentOneofCase.Result:
          if (Result == null) {
            Result = new global::Nitric.Proto.Deployments.v1.DownResult();
          }
          Result.MergeFrom(other.Result);
          break;
        case ContentOneofCase.Update:
          if (Update == null) {
            Update = new global::Nitric.Proto.Deployments.v1.ResourceUpdate();
          }
          Update.MergeFrom(other.Update);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
          case 18: {
            global::Nitric.Proto.Deployments.v1.DownResult subBuilder = new global::Nitric.Proto.Deployments.v1.DownResult();
            if (contentCase_ == ContentOneofCase.Result) {
              subBuilder.MergeFrom(Result);
            }
            input.ReadMessage(subBuilder);
            Result = subBuilder;
            break;
          }
          case 26: {
            global::Nitric.Proto.Deployments.v1.ResourceUpdate subBuilder = new global::Nitric.Proto.Deployments.v1.ResourceUpdate();
            if (contentCase_ == ContentOneofCase.Update) {
              subBuilder.MergeFrom(Update);
            }
            input.ReadMessage(subBuilder);
            Update = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
          case 18: {
            global::Nitric.Proto.Deployments.v1.DownResult subBuilder = new global::Nitric.Proto.Deployments.v1.DownResult();
            if (contentCase_ == ContentOneofCase.Result) {
              subBuilder.MergeFrom(Result);
            }
            input.ReadMessage(subBuilder);
            Result = subBuilder;
            break;
          }
          case 26: {
            global::Nitric.Proto.Deployments.v1.ResourceUpdate subBuilder = new global::Nitric.Proto.Deployments.v1.ResourceUpdate();
            if (contentCase_ == ContentOneofCase.Update) {
              subBuilder.MergeFrom(Update);
            }
            input.ReadMessage(subBuilder);
            Update = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Terminal message indicating deployment success
  /// </summary>
  public sealed partial class DownResult : pb::IMessage<DownResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DownResult> _parser = new pb::MessageParser<DownResult>(() => new DownResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownResult(DownResult other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownResult Clone() {
      return new DownResult(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownResult other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An image source to be used for service deployment
  /// </summary>
  public sealed partial class ImageSource : pb::IMessage<ImageSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImageSource> _parser = new pb::MessageParser<ImageSource>(() => new ImageSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImageSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageSource(ImageSource other) : this() {
      uri_ = other.uri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImageSource Clone() {
      return new ImageSource(this);
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 1;
    private string uri_ = "";
    /// <summary>
    /// URI of the docker image
    /// To support remote images this may also need to provide auth information
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImageSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImageSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uri != other.Uri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImageSource other) {
      if (other == null) {
        return;
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uri = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uri = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A unit of compute (i.e. function/container)
  /// </summary>
  public sealed partial class Service : pb::IMessage<Service>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Service> _parser = new pb::MessageParser<Service>(() => new Service());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Service> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Service() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Service(Service other) : this() {
      workers_ = other.workers_;
      timeout_ = other.timeout_;
      memory_ = other.memory_;
      type_ = other.type_;
      env_ = other.env_.Clone();
      switch (other.SourceCase) {
        case SourceOneofCase.Image:
          Image = other.Image.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Service Clone() {
      return new Service(this);
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 1;
    /// <summary>
    /// Container image as a service
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.ImageSource Image {
      get { return sourceCase_ == SourceOneofCase.Image ? (global::Nitric.Proto.Deployments.v1.ImageSource) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.Image;
      }
    }

    /// <summary>Field number for the "workers" field.</summary>
    public const int WorkersFieldNumber = 10;
    private int workers_;
    /// <summary>
    /// Expected worker count for this service
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Workers {
      get { return workers_; }
      set {
        workers_ = value;
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 11;
    private int timeout_;
    /// <summary>
    /// Configurable timeout for request handling
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    /// <summary>Field number for the "memory" field.</summary>
    public const int MemoryFieldNumber = 12;
    private int memory_;
    /// <summary>
    /// Configurable memory size for this instance
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Memory {
      get { return memory_; }
      set {
        memory_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 13;
    private string type_ = "";
    /// <summary>
    /// A simple type property
    /// describes the requested type of service that this should be
    /// for this project, a provider can implement how this request is satisfied
    /// in any way
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "env" field.</summary>
    public const int EnvFieldNumber = 14;
    private static readonly pbc::MapField<string, string>.Codec _map_env_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 114);
    private readonly pbc::MapField<string, string> env_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Environment variables for this service
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Env {
      get { return env_; }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      Image = 1,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Service);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Service other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Image, other.Image)) return false;
      if (Workers != other.Workers) return false;
      if (Timeout != other.Timeout) return false;
      if (Memory != other.Memory) return false;
      if (Type != other.Type) return false;
      if (!Env.Equals(other.Env)) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sourceCase_ == SourceOneofCase.Image) hash ^= Image.GetHashCode();
      if (Workers != 0) hash ^= Workers.GetHashCode();
      if (Timeout != 0) hash ^= Timeout.GetHashCode();
      if (Memory != 0) hash ^= Memory.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      hash ^= Env.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sourceCase_ == SourceOneofCase.Image) {
        output.WriteRawTag(10);
        output.WriteMessage(Image);
      }
      if (Workers != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Workers);
      }
      if (Timeout != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Timeout);
      }
      if (Memory != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Memory);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Type);
      }
      env_.WriteTo(output, _map_env_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sourceCase_ == SourceOneofCase.Image) {
        output.WriteRawTag(10);
        output.WriteMessage(Image);
      }
      if (Workers != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Workers);
      }
      if (Timeout != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Timeout);
      }
      if (Memory != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Memory);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Type);
      }
      env_.WriteTo(ref output, _map_env_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sourceCase_ == SourceOneofCase.Image) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (Workers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Workers);
      }
      if (Timeout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timeout);
      }
      if (Memory != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Memory);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      size += env_.CalculateSize(_map_env_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Service other) {
      if (other == null) {
        return;
      }
      if (other.Workers != 0) {
        Workers = other.Workers;
      }
      if (other.Timeout != 0) {
        Timeout = other.Timeout;
      }
      if (other.Memory != 0) {
        Memory = other.Memory;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      env_.Add(other.env_);
      switch (other.SourceCase) {
        case SourceOneofCase.Image:
          if (Image == null) {
            Image = new global::Nitric.Proto.Deployments.v1.ImageSource();
          }
          Image.MergeFrom(other.Image);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Nitric.Proto.Deployments.v1.ImageSource subBuilder = new global::Nitric.Proto.Deployments.v1.ImageSource();
            if (sourceCase_ == SourceOneofCase.Image) {
              subBuilder.MergeFrom(Image);
            }
            input.ReadMessage(subBuilder);
            Image = subBuilder;
            break;
          }
          case 80: {
            Workers = input.ReadInt32();
            break;
          }
          case 88: {
            Timeout = input.ReadInt32();
            break;
          }
          case 96: {
            Memory = input.ReadInt32();
            break;
          }
          case 106: {
            Type = input.ReadString();
            break;
          }
          case 114: {
            env_.AddEntriesFrom(input, _map_env_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Nitric.Proto.Deployments.v1.ImageSource subBuilder = new global::Nitric.Proto.Deployments.v1.ImageSource();
            if (sourceCase_ == SourceOneofCase.Image) {
              subBuilder.MergeFrom(Image);
            }
            input.ReadMessage(subBuilder);
            Image = subBuilder;
            break;
          }
          case 80: {
            Workers = input.ReadInt32();
            break;
          }
          case 88: {
            Timeout = input.ReadInt32();
            break;
          }
          case 96: {
            Memory = input.ReadInt32();
            break;
          }
          case 106: {
            Type = input.ReadString();
            break;
          }
          case 114: {
            env_.AddEntriesFrom(ref input, _map_env_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Bucket : pb::IMessage<Bucket>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Bucket> _parser = new pb::MessageParser<Bucket>(() => new Bucket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Bucket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bucket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bucket(Bucket other) : this() {
      listeners_ = other.listeners_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bucket Clone() {
      return new Bucket(this);
    }

    /// <summary>Field number for the "listeners" field.</summary>
    public const int ListenersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Nitric.Proto.Deployments.v1.BucketListener> _repeated_listeners_codec
        = pb::FieldCodec.ForMessage(10, global::Nitric.Proto.Deployments.v1.BucketListener.Parser);
    private readonly pbc::RepeatedField<global::Nitric.Proto.Deployments.v1.BucketListener> listeners_ = new pbc::RepeatedField<global::Nitric.Proto.Deployments.v1.BucketListener>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Nitric.Proto.Deployments.v1.BucketListener> Listeners {
      get { return listeners_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Bucket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Bucket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listeners_.Equals(other.listeners_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listeners_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      listeners_.WriteTo(output, _repeated_listeners_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      listeners_.WriteTo(ref output, _repeated_listeners_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listeners_.CalculateSize(_repeated_listeners_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Bucket other) {
      if (other == null) {
        return;
      }
      listeners_.Add(other.listeners_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listeners_.AddEntriesFrom(input, _repeated_listeners_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            listeners_.AddEntriesFrom(ref input, _repeated_listeners_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BucketListener : pb::IMessage<BucketListener>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BucketListener> _parser = new pb::MessageParser<BucketListener>(() => new BucketListener());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BucketListener> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BucketListener() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BucketListener(BucketListener other) : this() {
      config_ = other.config_ != null ? other.config_.Clone() : null;
      switch (other.TargetCase) {
        case TargetOneofCase.Service:
          Service = other.Service;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BucketListener Clone() {
      return new BucketListener(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    private global::Nitric.Proto.Storage.v1.RegistrationRequest config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Storage.v1.RegistrationRequest Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 2;
    /// <summary>
    /// The name of an service to target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Service {
      get { return targetCase_ == TargetOneofCase.Service ? (string) target_ : ""; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        targetCase_ = TargetOneofCase.Service;
      }
    }

    private object target_;
    /// <summary>Enum of possible cases for the "target" oneof.</summary>
    public enum TargetOneofCase {
      None = 0,
      Service = 2,
    }
    private TargetOneofCase targetCase_ = TargetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetOneofCase TargetCase {
      get { return targetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTarget() {
      targetCase_ = TargetOneofCase.None;
      target_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BucketListener);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BucketListener other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Config, other.Config)) return false;
      if (Service != other.Service) return false;
      if (TargetCase != other.TargetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (config_ != null) hash ^= Config.GetHashCode();
      if (targetCase_ == TargetOneofCase.Service) hash ^= Service.GetHashCode();
      hash ^= (int) targetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (targetCase_ == TargetOneofCase.Service) {
        output.WriteRawTag(18);
        output.WriteString(Service);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (config_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (targetCase_ == TargetOneofCase.Service) {
        output.WriteRawTag(18);
        output.WriteString(Service);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (targetCase_ == TargetOneofCase.Service) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BucketListener other) {
      if (other == null) {
        return;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Nitric.Proto.Storage.v1.RegistrationRequest();
        }
        Config.MergeFrom(other.Config);
      }
      switch (other.TargetCase) {
        case TargetOneofCase.Service:
          Service = other.Service;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::Nitric.Proto.Storage.v1.RegistrationRequest();
            }
            input.ReadMessage(Config);
            break;
          }
          case 18: {
            Service = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (config_ == null) {
              Config = new global::Nitric.Proto.Storage.v1.RegistrationRequest();
            }
            input.ReadMessage(Config);
            break;
          }
          case 18: {
            Service = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Topic : pb::IMessage<Topic>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Topic> _parser = new pb::MessageParser<Topic>(() => new Topic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Topic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Topic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Topic(Topic other) : this() {
      subscriptions_ = other.subscriptions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Topic Clone() {
      return new Topic(this);
    }

    /// <summary>Field number for the "subscriptions" field.</summary>
    public const int SubscriptionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Nitric.Proto.Deployments.v1.SubscriptionTarget> _repeated_subscriptions_codec
        = pb::FieldCodec.ForMessage(10, global::Nitric.Proto.Deployments.v1.SubscriptionTarget.Parser);
    private readonly pbc::RepeatedField<global::Nitric.Proto.Deployments.v1.SubscriptionTarget> subscriptions_ = new pbc::RepeatedField<global::Nitric.Proto.Deployments.v1.SubscriptionTarget>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Nitric.Proto.Deployments.v1.SubscriptionTarget> Subscriptions {
      get { return subscriptions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Topic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Topic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!subscriptions_.Equals(other.subscriptions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= subscriptions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      subscriptions_.WriteTo(output, _repeated_subscriptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      subscriptions_.WriteTo(ref output, _repeated_subscriptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += subscriptions_.CalculateSize(_repeated_subscriptions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Topic other) {
      if (other == null) {
        return;
      }
      subscriptions_.Add(other.subscriptions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            subscriptions_.AddEntriesFrom(input, _repeated_subscriptions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            subscriptions_.AddEntriesFrom(ref input, _repeated_subscriptions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Queue : pb::IMessage<Queue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Queue> _parser = new pb::MessageParser<Queue>(() => new Queue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Queue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Queue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Queue(Queue other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Queue Clone() {
      return new Queue(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Queue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Queue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Queue other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class KeyValueStore : pb::IMessage<KeyValueStore>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyValueStore> _parser = new pb::MessageParser<KeyValueStore>(() => new KeyValueStore());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyValueStore> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueStore() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueStore(KeyValueStore other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValueStore Clone() {
      return new KeyValueStore(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyValueStore);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyValueStore other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyValueStore other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class Secret : pb::IMessage<Secret>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Secret> _parser = new pb::MessageParser<Secret>(() => new Secret());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Secret> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secret() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secret(Secret other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secret Clone() {
      return new Secret(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Secret);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Secret other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Secret other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SubscriptionTarget : pb::IMessage<SubscriptionTarget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscriptionTarget> _parser = new pb::MessageParser<SubscriptionTarget>(() => new SubscriptionTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscriptionTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionTarget(SubscriptionTarget other) : this() {
      switch (other.TargetCase) {
        case TargetOneofCase.Service:
          Service = other.Service;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionTarget Clone() {
      return new SubscriptionTarget(this);
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 1;
    /// <summary>
    /// The name of an service to target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Service {
      get { return targetCase_ == TargetOneofCase.Service ? (string) target_ : ""; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        targetCase_ = TargetOneofCase.Service;
      }
    }

    private object target_;
    /// <summary>Enum of possible cases for the "target" oneof.</summary>
    public enum TargetOneofCase {
      None = 0,
      Service = 1,
    }
    private TargetOneofCase targetCase_ = TargetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetOneofCase TargetCase {
      get { return targetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTarget() {
      targetCase_ = TargetOneofCase.None;
      target_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscriptionTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Service != other.Service) return false;
      if (TargetCase != other.TargetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (targetCase_ == TargetOneofCase.Service) hash ^= Service.GetHashCode();
      hash ^= (int) targetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (targetCase_ == TargetOneofCase.Service) {
        output.WriteRawTag(10);
        output.WriteString(Service);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (targetCase_ == TargetOneofCase.Service) {
        output.WriteRawTag(10);
        output.WriteString(Service);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (targetCase_ == TargetOneofCase.Service) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscriptionTarget other) {
      if (other == null) {
        return;
      }
      switch (other.TargetCase) {
        case TargetOneofCase.Service:
          Service = other.Service;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Service = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Service = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TopicSubscription : pb::IMessage<TopicSubscription>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TopicSubscription> _parser = new pb::MessageParser<TopicSubscription>(() => new TopicSubscription());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TopicSubscription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicSubscription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicSubscription(TopicSubscription other) : this() {
      target_ = other.target_ != null ? other.target_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TopicSubscription Clone() {
      return new TopicSubscription(this);
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 1;
    private global::Nitric.Proto.Deployments.v1.SubscriptionTarget target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.SubscriptionTarget Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TopicSubscription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TopicSubscription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Target, other.Target)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (target_ != null) hash ^= Target.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TopicSubscription other) {
      if (other == null) {
        return;
      }
      if (other.target_ != null) {
        if (target_ == null) {
          Target = new global::Nitric.Proto.Deployments.v1.SubscriptionTarget();
        }
        Target.MergeFrom(other.Target);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::Nitric.Proto.Deployments.v1.SubscriptionTarget();
            }
            input.ReadMessage(Target);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::Nitric.Proto.Deployments.v1.SubscriptionTarget();
            }
            input.ReadMessage(Target);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HttpTarget : pb::IMessage<HttpTarget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HttpTarget> _parser = new pb::MessageParser<HttpTarget>(() => new HttpTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HttpTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpTarget(HttpTarget other) : this() {
      switch (other.TargetCase) {
        case TargetOneofCase.Service:
          Service = other.Service;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpTarget Clone() {
      return new HttpTarget(this);
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 1;
    /// <summary>
    /// The name of an service to target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Service {
      get { return targetCase_ == TargetOneofCase.Service ? (string) target_ : ""; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        targetCase_ = TargetOneofCase.Service;
      }
    }

    private object target_;
    /// <summary>Enum of possible cases for the "target" oneof.</summary>
    public enum TargetOneofCase {
      None = 0,
      Service = 1,
    }
    private TargetOneofCase targetCase_ = TargetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetOneofCase TargetCase {
      get { return targetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTarget() {
      targetCase_ = TargetOneofCase.None;
      target_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HttpTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HttpTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Service != other.Service) return false;
      if (TargetCase != other.TargetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (targetCase_ == TargetOneofCase.Service) hash ^= Service.GetHashCode();
      hash ^= (int) targetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (targetCase_ == TargetOneofCase.Service) {
        output.WriteRawTag(10);
        output.WriteString(Service);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (targetCase_ == TargetOneofCase.Service) {
        output.WriteRawTag(10);
        output.WriteString(Service);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (targetCase_ == TargetOneofCase.Service) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HttpTarget other) {
      if (other == null) {
        return;
      }
      switch (other.TargetCase) {
        case TargetOneofCase.Service:
          Service = other.Service;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Service = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Service = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An http proxy resource
  /// </summary>
  public sealed partial class Http : pb::IMessage<Http>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Http> _parser = new pb::MessageParser<Http>(() => new Http());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Http> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Http() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Http(Http other) : this() {
      target_ = other.target_ != null ? other.target_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Http Clone() {
      return new Http(this);
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 1;
    private global::Nitric.Proto.Deployments.v1.HttpTarget target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.HttpTarget Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Http);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Http other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Target, other.Target)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (target_ != null) hash ^= Target.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Http other) {
      if (other == null) {
        return;
      }
      if (other.target_ != null) {
        if (target_ == null) {
          Target = new global::Nitric.Proto.Deployments.v1.HttpTarget();
        }
        Target.MergeFrom(other.Target);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::Nitric.Proto.Deployments.v1.HttpTarget();
            }
            input.ReadMessage(Target);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::Nitric.Proto.Deployments.v1.HttpTarget();
            }
            input.ReadMessage(Target);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Api : pb::IMessage<Api>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Api> _parser = new pb::MessageParser<Api>(() => new Api());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Api> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Api() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Api(Api other) : this() {
      switch (other.DocumentCase) {
        case DocumentOneofCase.Openapi:
          Openapi = other.Openapi;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Api Clone() {
      return new Api(this);
    }

    /// <summary>Field number for the "openapi" field.</summary>
    public const int OpenapiFieldNumber = 1;
    /// <summary>
    /// An OpenAPI document for deployment
    /// This document will contain extensions that hint of services that should be targeted as part of the deployment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Openapi {
      get { return documentCase_ == DocumentOneofCase.Openapi ? (string) document_ : ""; }
      set {
        document_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        documentCase_ = DocumentOneofCase.Openapi;
      }
    }

    private object document_;
    /// <summary>Enum of possible cases for the "document" oneof.</summary>
    public enum DocumentOneofCase {
      None = 0,
      Openapi = 1,
    }
    private DocumentOneofCase documentCase_ = DocumentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentOneofCase DocumentCase {
      get { return documentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDocument() {
      documentCase_ = DocumentOneofCase.None;
      document_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Api);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Api other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Openapi != other.Openapi) return false;
      if (DocumentCase != other.DocumentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (documentCase_ == DocumentOneofCase.Openapi) hash ^= Openapi.GetHashCode();
      hash ^= (int) documentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (documentCase_ == DocumentOneofCase.Openapi) {
        output.WriteRawTag(10);
        output.WriteString(Openapi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (documentCase_ == DocumentOneofCase.Openapi) {
        output.WriteRawTag(10);
        output.WriteString(Openapi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (documentCase_ == DocumentOneofCase.Openapi) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Openapi);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Api other) {
      if (other == null) {
        return;
      }
      switch (other.DocumentCase) {
        case DocumentOneofCase.Openapi:
          Openapi = other.Openapi;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Openapi = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Openapi = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Declare a new websocket
  /// </summary>
  public sealed partial class Websocket : pb::IMessage<Websocket>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Websocket> _parser = new pb::MessageParser<Websocket>(() => new Websocket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Websocket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Websocket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Websocket(Websocket other) : this() {
      connectTarget_ = other.connectTarget_ != null ? other.connectTarget_.Clone() : null;
      disconnectTarget_ = other.disconnectTarget_ != null ? other.disconnectTarget_.Clone() : null;
      messageTarget_ = other.messageTarget_ != null ? other.messageTarget_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Websocket Clone() {
      return new Websocket(this);
    }

    /// <summary>Field number for the "connect_target" field.</summary>
    public const int ConnectTargetFieldNumber = 1;
    private global::Nitric.Proto.Deployments.v1.WebsocketTarget connectTarget_;
    /// <summary>
    /// Target for handling new client connections
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.WebsocketTarget ConnectTarget {
      get { return connectTarget_; }
      set {
        connectTarget_ = value;
      }
    }

    /// <summary>Field number for the "disconnect_target" field.</summary>
    public const int DisconnectTargetFieldNumber = 2;
    private global::Nitric.Proto.Deployments.v1.WebsocketTarget disconnectTarget_;
    /// <summary>
    /// Target for handling client disconnections
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.WebsocketTarget DisconnectTarget {
      get { return disconnectTarget_; }
      set {
        disconnectTarget_ = value;
      }
    }

    /// <summary>Field number for the "message_target" field.</summary>
    public const int MessageTargetFieldNumber = 3;
    private global::Nitric.Proto.Deployments.v1.WebsocketTarget messageTarget_;
    /// <summary>
    /// Target for handling all other message types
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.WebsocketTarget MessageTarget {
      get { return messageTarget_; }
      set {
        messageTarget_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Websocket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Websocket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConnectTarget, other.ConnectTarget)) return false;
      if (!object.Equals(DisconnectTarget, other.DisconnectTarget)) return false;
      if (!object.Equals(MessageTarget, other.MessageTarget)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (connectTarget_ != null) hash ^= ConnectTarget.GetHashCode();
      if (disconnectTarget_ != null) hash ^= DisconnectTarget.GetHashCode();
      if (messageTarget_ != null) hash ^= MessageTarget.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (connectTarget_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConnectTarget);
      }
      if (disconnectTarget_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DisconnectTarget);
      }
      if (messageTarget_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MessageTarget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (connectTarget_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConnectTarget);
      }
      if (disconnectTarget_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DisconnectTarget);
      }
      if (messageTarget_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MessageTarget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (connectTarget_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConnectTarget);
      }
      if (disconnectTarget_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisconnectTarget);
      }
      if (messageTarget_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MessageTarget);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Websocket other) {
      if (other == null) {
        return;
      }
      if (other.connectTarget_ != null) {
        if (connectTarget_ == null) {
          ConnectTarget = new global::Nitric.Proto.Deployments.v1.WebsocketTarget();
        }
        ConnectTarget.MergeFrom(other.ConnectTarget);
      }
      if (other.disconnectTarget_ != null) {
        if (disconnectTarget_ == null) {
          DisconnectTarget = new global::Nitric.Proto.Deployments.v1.WebsocketTarget();
        }
        DisconnectTarget.MergeFrom(other.DisconnectTarget);
      }
      if (other.messageTarget_ != null) {
        if (messageTarget_ == null) {
          MessageTarget = new global::Nitric.Proto.Deployments.v1.WebsocketTarget();
        }
        MessageTarget.MergeFrom(other.MessageTarget);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (connectTarget_ == null) {
              ConnectTarget = new global::Nitric.Proto.Deployments.v1.WebsocketTarget();
            }
            input.ReadMessage(ConnectTarget);
            break;
          }
          case 18: {
            if (disconnectTarget_ == null) {
              DisconnectTarget = new global::Nitric.Proto.Deployments.v1.WebsocketTarget();
            }
            input.ReadMessage(DisconnectTarget);
            break;
          }
          case 26: {
            if (messageTarget_ == null) {
              MessageTarget = new global::Nitric.Proto.Deployments.v1.WebsocketTarget();
            }
            input.ReadMessage(MessageTarget);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (connectTarget_ == null) {
              ConnectTarget = new global::Nitric.Proto.Deployments.v1.WebsocketTarget();
            }
            input.ReadMessage(ConnectTarget);
            break;
          }
          case 18: {
            if (disconnectTarget_ == null) {
              DisconnectTarget = new global::Nitric.Proto.Deployments.v1.WebsocketTarget();
            }
            input.ReadMessage(DisconnectTarget);
            break;
          }
          case 26: {
            if (messageTarget_ == null) {
              MessageTarget = new global::Nitric.Proto.Deployments.v1.WebsocketTarget();
            }
            input.ReadMessage(MessageTarget);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WebsocketTarget : pb::IMessage<WebsocketTarget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebsocketTarget> _parser = new pb::MessageParser<WebsocketTarget>(() => new WebsocketTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebsocketTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketTarget(WebsocketTarget other) : this() {
      switch (other.TargetCase) {
        case TargetOneofCase.Service:
          Service = other.Service;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketTarget Clone() {
      return new WebsocketTarget(this);
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 1;
    /// <summary>
    /// The name of an service to target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Service {
      get { return targetCase_ == TargetOneofCase.Service ? (string) target_ : ""; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        targetCase_ = TargetOneofCase.Service;
      }
    }

    private object target_;
    /// <summary>Enum of possible cases for the "target" oneof.</summary>
    public enum TargetOneofCase {
      None = 0,
      Service = 1,
    }
    private TargetOneofCase targetCase_ = TargetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetOneofCase TargetCase {
      get { return targetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTarget() {
      targetCase_ = TargetOneofCase.None;
      target_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebsocketTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebsocketTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Service != other.Service) return false;
      if (TargetCase != other.TargetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (targetCase_ == TargetOneofCase.Service) hash ^= Service.GetHashCode();
      hash ^= (int) targetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (targetCase_ == TargetOneofCase.Service) {
        output.WriteRawTag(10);
        output.WriteString(Service);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (targetCase_ == TargetOneofCase.Service) {
        output.WriteRawTag(10);
        output.WriteString(Service);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (targetCase_ == TargetOneofCase.Service) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebsocketTarget other) {
      if (other == null) {
        return;
      }
      switch (other.TargetCase) {
        case TargetOneofCase.Service:
          Service = other.Service;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Service = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Service = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScheduleTarget : pb::IMessage<ScheduleTarget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleTarget> _parser = new pb::MessageParser<ScheduleTarget>(() => new ScheduleTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScheduleTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleTarget(ScheduleTarget other) : this() {
      switch (other.TargetCase) {
        case TargetOneofCase.Service:
          Service = other.Service;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleTarget Clone() {
      return new ScheduleTarget(this);
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 1;
    /// <summary>
    /// The name of an service to target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Service {
      get { return targetCase_ == TargetOneofCase.Service ? (string) target_ : ""; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        targetCase_ = TargetOneofCase.Service;
      }
    }

    private object target_;
    /// <summary>Enum of possible cases for the "target" oneof.</summary>
    public enum TargetOneofCase {
      None = 0,
      Service = 1,
    }
    private TargetOneofCase targetCase_ = TargetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetOneofCase TargetCase {
      get { return targetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTarget() {
      targetCase_ = TargetOneofCase.None;
      target_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScheduleTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScheduleTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Service != other.Service) return false;
      if (TargetCase != other.TargetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (targetCase_ == TargetOneofCase.Service) hash ^= Service.GetHashCode();
      hash ^= (int) targetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (targetCase_ == TargetOneofCase.Service) {
        output.WriteRawTag(10);
        output.WriteString(Service);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (targetCase_ == TargetOneofCase.Service) {
        output.WriteRawTag(10);
        output.WriteString(Service);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (targetCase_ == TargetOneofCase.Service) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScheduleTarget other) {
      if (other == null) {
        return;
      }
      switch (other.TargetCase) {
        case TargetOneofCase.Service:
          Service = other.Service;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Service = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Service = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Schedule : pb::IMessage<Schedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Schedule> _parser = new pb::MessageParser<Schedule>(() => new Schedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Schedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule(Schedule other) : this() {
      target_ = other.target_ != null ? other.target_.Clone() : null;
      switch (other.CadenceCase) {
        case CadenceOneofCase.Every:
          Every = other.Every.Clone();
          break;
        case CadenceOneofCase.Cron:
          Cron = other.Cron.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schedule Clone() {
      return new Schedule(this);
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 1;
    private global::Nitric.Proto.Deployments.v1.ScheduleTarget target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.ScheduleTarget Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    /// <summary>Field number for the "every" field.</summary>
    public const int EveryFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.ScheduleEvery Every {
      get { return cadenceCase_ == CadenceOneofCase.Every ? (global::Nitric.Proto.Deployments.v1.ScheduleEvery) cadence_ : null; }
      set {
        cadence_ = value;
        cadenceCase_ = value == null ? CadenceOneofCase.None : CadenceOneofCase.Every;
      }
    }

    /// <summary>Field number for the "cron" field.</summary>
    public const int CronFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.ScheduleCron Cron {
      get { return cadenceCase_ == CadenceOneofCase.Cron ? (global::Nitric.Proto.Deployments.v1.ScheduleCron) cadence_ : null; }
      set {
        cadence_ = value;
        cadenceCase_ = value == null ? CadenceOneofCase.None : CadenceOneofCase.Cron;
      }
    }

    private object cadence_;
    /// <summary>Enum of possible cases for the "cadence" oneof.</summary>
    public enum CadenceOneofCase {
      None = 0,
      Every = 10,
      Cron = 11,
    }
    private CadenceOneofCase cadenceCase_ = CadenceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CadenceOneofCase CadenceCase {
      get { return cadenceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCadence() {
      cadenceCase_ = CadenceOneofCase.None;
      cadence_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Schedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Schedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Target, other.Target)) return false;
      if (!object.Equals(Every, other.Every)) return false;
      if (!object.Equals(Cron, other.Cron)) return false;
      if (CadenceCase != other.CadenceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (target_ != null) hash ^= Target.GetHashCode();
      if (cadenceCase_ == CadenceOneofCase.Every) hash ^= Every.GetHashCode();
      if (cadenceCase_ == CadenceOneofCase.Cron) hash ^= Cron.GetHashCode();
      hash ^= (int) cadenceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (cadenceCase_ == CadenceOneofCase.Every) {
        output.WriteRawTag(82);
        output.WriteMessage(Every);
      }
      if (cadenceCase_ == CadenceOneofCase.Cron) {
        output.WriteRawTag(90);
        output.WriteMessage(Cron);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (target_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (cadenceCase_ == CadenceOneofCase.Every) {
        output.WriteRawTag(82);
        output.WriteMessage(Every);
      }
      if (cadenceCase_ == CadenceOneofCase.Cron) {
        output.WriteRawTag(90);
        output.WriteMessage(Cron);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (cadenceCase_ == CadenceOneofCase.Every) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Every);
      }
      if (cadenceCase_ == CadenceOneofCase.Cron) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cron);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Schedule other) {
      if (other == null) {
        return;
      }
      if (other.target_ != null) {
        if (target_ == null) {
          Target = new global::Nitric.Proto.Deployments.v1.ScheduleTarget();
        }
        Target.MergeFrom(other.Target);
      }
      switch (other.CadenceCase) {
        case CadenceOneofCase.Every:
          if (Every == null) {
            Every = new global::Nitric.Proto.Deployments.v1.ScheduleEvery();
          }
          Every.MergeFrom(other.Every);
          break;
        case CadenceOneofCase.Cron:
          if (Cron == null) {
            Cron = new global::Nitric.Proto.Deployments.v1.ScheduleCron();
          }
          Cron.MergeFrom(other.Cron);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::Nitric.Proto.Deployments.v1.ScheduleTarget();
            }
            input.ReadMessage(Target);
            break;
          }
          case 82: {
            global::Nitric.Proto.Deployments.v1.ScheduleEvery subBuilder = new global::Nitric.Proto.Deployments.v1.ScheduleEvery();
            if (cadenceCase_ == CadenceOneofCase.Every) {
              subBuilder.MergeFrom(Every);
            }
            input.ReadMessage(subBuilder);
            Every = subBuilder;
            break;
          }
          case 90: {
            global::Nitric.Proto.Deployments.v1.ScheduleCron subBuilder = new global::Nitric.Proto.Deployments.v1.ScheduleCron();
            if (cadenceCase_ == CadenceOneofCase.Cron) {
              subBuilder.MergeFrom(Cron);
            }
            input.ReadMessage(subBuilder);
            Cron = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (target_ == null) {
              Target = new global::Nitric.Proto.Deployments.v1.ScheduleTarget();
            }
            input.ReadMessage(Target);
            break;
          }
          case 82: {
            global::Nitric.Proto.Deployments.v1.ScheduleEvery subBuilder = new global::Nitric.Proto.Deployments.v1.ScheduleEvery();
            if (cadenceCase_ == CadenceOneofCase.Every) {
              subBuilder.MergeFrom(Every);
            }
            input.ReadMessage(subBuilder);
            Every = subBuilder;
            break;
          }
          case 90: {
            global::Nitric.Proto.Deployments.v1.ScheduleCron subBuilder = new global::Nitric.Proto.Deployments.v1.ScheduleCron();
            if (cadenceCase_ == CadenceOneofCase.Cron) {
              subBuilder.MergeFrom(Cron);
            }
            input.ReadMessage(subBuilder);
            Cron = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScheduleEvery : pb::IMessage<ScheduleEvery>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleEvery> _parser = new pb::MessageParser<ScheduleEvery>(() => new ScheduleEvery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScheduleEvery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleEvery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleEvery(ScheduleEvery other) : this() {
      rate_ = other.rate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleEvery Clone() {
      return new ScheduleEvery(this);
    }

    /// <summary>Field number for the "rate" field.</summary>
    public const int RateFieldNumber = 1;
    private string rate_ = "";
    /// <summary>
    /// rate string e.g. '5 minutes'. Value frequencies are 'minutes', 'hours', 'days'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Rate {
      get { return rate_; }
      set {
        rate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScheduleEvery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScheduleEvery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rate != other.Rate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rate.Length != 0) hash ^= Rate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Rate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Rate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Rate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Rate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Rate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScheduleEvery other) {
      if (other == null) {
        return;
      }
      if (other.Rate.Length != 0) {
        Rate = other.Rate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Rate = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Rate = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScheduleCron : pb::IMessage<ScheduleCron>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleCron> _parser = new pb::MessageParser<ScheduleCron>(() => new ScheduleCron());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScheduleCron> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleCron() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleCron(ScheduleCron other) : this() {
      expression_ = other.expression_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduleCron Clone() {
      return new ScheduleCron(this);
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 1;
    private string expression_ = "";
    /// <summary>
    /// standard unix cron expression
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Expression {
      get { return expression_; }
      set {
        expression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScheduleCron);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScheduleCron other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Expression != other.Expression) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Expression.Length != 0) hash ^= Expression.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Expression.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Expression);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Expression.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Expression);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Expression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Expression);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScheduleCron other) {
      if (other == null) {
        return;
      }
      if (other.Expression.Length != 0) {
        Expression = other.Expression;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Expression = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Expression = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Resource : pb::IMessage<Resource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Resource> _parser = new pb::MessageParser<Resource>(() => new Resource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Resource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource(Resource other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      switch (other.ConfigCase) {
        case ConfigOneofCase.Service:
          Service = other.Service.Clone();
          break;
        case ConfigOneofCase.Bucket:
          Bucket = other.Bucket.Clone();
          break;
        case ConfigOneofCase.Topic:
          Topic = other.Topic.Clone();
          break;
        case ConfigOneofCase.Api:
          Api = other.Api.Clone();
          break;
        case ConfigOneofCase.Policy:
          Policy = other.Policy.Clone();
          break;
        case ConfigOneofCase.Schedule:
          Schedule = other.Schedule.Clone();
          break;
        case ConfigOneofCase.KeyValueStore:
          KeyValueStore = other.KeyValueStore.Clone();
          break;
        case ConfigOneofCase.Secret:
          Secret = other.Secret.Clone();
          break;
        case ConfigOneofCase.Websocket:
          Websocket = other.Websocket.Clone();
          break;
        case ConfigOneofCase.Http:
          Http = other.Http.Clone();
          break;
        case ConfigOneofCase.Queue:
          Queue = other.Queue.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource Clone() {
      return new Resource(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Nitric.Proto.Resources.v1.ResourceIdentifier id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Resources.v1.ResourceIdentifier Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.Service Service {
      get { return configCase_ == ConfigOneofCase.Service ? (global::Nitric.Proto.Deployments.v1.Service) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Service;
      }
    }

    /// <summary>Field number for the "bucket" field.</summary>
    public const int BucketFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.Bucket Bucket {
      get { return configCase_ == ConfigOneofCase.Bucket ? (global::Nitric.Proto.Deployments.v1.Bucket) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Bucket;
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.Topic Topic {
      get { return configCase_ == ConfigOneofCase.Topic ? (global::Nitric.Proto.Deployments.v1.Topic) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Topic;
      }
    }

    /// <summary>Field number for the "api" field.</summary>
    public const int ApiFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.Api Api {
      get { return configCase_ == ConfigOneofCase.Api ? (global::Nitric.Proto.Deployments.v1.Api) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Api;
      }
    }

    /// <summary>Field number for the "policy" field.</summary>
    public const int PolicyFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.Policy Policy {
      get { return configCase_ == ConfigOneofCase.Policy ? (global::Nitric.Proto.Deployments.v1.Policy) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Policy;
      }
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.Schedule Schedule {
      get { return configCase_ == ConfigOneofCase.Schedule ? (global::Nitric.Proto.Deployments.v1.Schedule) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Schedule;
      }
    }

    /// <summary>Field number for the "key_value_store" field.</summary>
    public const int KeyValueStoreFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.KeyValueStore KeyValueStore {
      get { return configCase_ == ConfigOneofCase.KeyValueStore ? (global::Nitric.Proto.Deployments.v1.KeyValueStore) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.KeyValueStore;
      }
    }

    /// <summary>Field number for the "secret" field.</summary>
    public const int SecretFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.Secret Secret {
      get { return configCase_ == ConfigOneofCase.Secret ? (global::Nitric.Proto.Deployments.v1.Secret) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Secret;
      }
    }

    /// <summary>Field number for the "websocket" field.</summary>
    public const int WebsocketFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.Websocket Websocket {
      get { return configCase_ == ConfigOneofCase.Websocket ? (global::Nitric.Proto.Deployments.v1.Websocket) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Websocket;
      }
    }

    /// <summary>Field number for the "http" field.</summary>
    public const int HttpFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.Http Http {
      get { return configCase_ == ConfigOneofCase.Http ? (global::Nitric.Proto.Deployments.v1.Http) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Http;
      }
    }

    /// <summary>Field number for the "queue" field.</summary>
    public const int QueueFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Deployments.v1.Queue Queue {
      get { return configCase_ == ConfigOneofCase.Queue ? (global::Nitric.Proto.Deployments.v1.Queue) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.Queue;
      }
    }

    private object config_;
    /// <summary>Enum of possible cases for the "config" oneof.</summary>
    public enum ConfigOneofCase {
      None = 0,
      Service = 10,
      Bucket = 11,
      Topic = 12,
      Api = 13,
      Policy = 14,
      Schedule = 15,
      KeyValueStore = 16,
      Secret = 17,
      Websocket = 18,
      Http = 19,
      Queue = 20,
    }
    private ConfigOneofCase configCase_ = ConfigOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigOneofCase ConfigCase {
      get { return configCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConfig() {
      configCase_ = ConfigOneofCase.None;
      config_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Resource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Resource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(Service, other.Service)) return false;
      if (!object.Equals(Bucket, other.Bucket)) return false;
      if (!object.Equals(Topic, other.Topic)) return false;
      if (!object.Equals(Api, other.Api)) return false;
      if (!object.Equals(Policy, other.Policy)) return false;
      if (!object.Equals(Schedule, other.Schedule)) return false;
      if (!object.Equals(KeyValueStore, other.KeyValueStore)) return false;
      if (!object.Equals(Secret, other.Secret)) return false;
      if (!object.Equals(Websocket, other.Websocket)) return false;
      if (!object.Equals(Http, other.Http)) return false;
      if (!object.Equals(Queue, other.Queue)) return false;
      if (ConfigCase != other.ConfigCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (configCase_ == ConfigOneofCase.Service) hash ^= Service.GetHashCode();
      if (configCase_ == ConfigOneofCase.Bucket) hash ^= Bucket.GetHashCode();
      if (configCase_ == ConfigOneofCase.Topic) hash ^= Topic.GetHashCode();
      if (configCase_ == ConfigOneofCase.Api) hash ^= Api.GetHashCode();
      if (configCase_ == ConfigOneofCase.Policy) hash ^= Policy.GetHashCode();
      if (configCase_ == ConfigOneofCase.Schedule) hash ^= Schedule.GetHashCode();
      if (configCase_ == ConfigOneofCase.KeyValueStore) hash ^= KeyValueStore.GetHashCode();
      if (configCase_ == ConfigOneofCase.Secret) hash ^= Secret.GetHashCode();
      if (configCase_ == ConfigOneofCase.Websocket) hash ^= Websocket.GetHashCode();
      if (configCase_ == ConfigOneofCase.Http) hash ^= Http.GetHashCode();
      if (configCase_ == ConfigOneofCase.Queue) hash ^= Queue.GetHashCode();
      hash ^= (int) configCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (configCase_ == ConfigOneofCase.Service) {
        output.WriteRawTag(82);
        output.WriteMessage(Service);
      }
      if (configCase_ == ConfigOneofCase.Bucket) {
        output.WriteRawTag(90);
        output.WriteMessage(Bucket);
      }
      if (configCase_ == ConfigOneofCase.Topic) {
        output.WriteRawTag(98);
        output.WriteMessage(Topic);
      }
      if (configCase_ == ConfigOneofCase.Api) {
        output.WriteRawTag(106);
        output.WriteMessage(Api);
      }
      if (configCase_ == ConfigOneofCase.Policy) {
        output.WriteRawTag(114);
        output.WriteMessage(Policy);
      }
      if (configCase_ == ConfigOneofCase.Schedule) {
        output.WriteRawTag(122);
        output.WriteMessage(Schedule);
      }
      if (configCase_ == ConfigOneofCase.KeyValueStore) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(KeyValueStore);
      }
      if (configCase_ == ConfigOneofCase.Secret) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Secret);
      }
      if (configCase_ == ConfigOneofCase.Websocket) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Websocket);
      }
      if (configCase_ == ConfigOneofCase.Http) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(Http);
      }
      if (configCase_ == ConfigOneofCase.Queue) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Queue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (configCase_ == ConfigOneofCase.Service) {
        output.WriteRawTag(82);
        output.WriteMessage(Service);
      }
      if (configCase_ == ConfigOneofCase.Bucket) {
        output.WriteRawTag(90);
        output.WriteMessage(Bucket);
      }
      if (configCase_ == ConfigOneofCase.Topic) {
        output.WriteRawTag(98);
        output.WriteMessage(Topic);
      }
      if (configCase_ == ConfigOneofCase.Api) {
        output.WriteRawTag(106);
        output.WriteMessage(Api);
      }
      if (configCase_ == ConfigOneofCase.Policy) {
        output.WriteRawTag(114);
        output.WriteMessage(Policy);
      }
      if (configCase_ == ConfigOneofCase.Schedule) {
        output.WriteRawTag(122);
        output.WriteMessage(Schedule);
      }
      if (configCase_ == ConfigOneofCase.KeyValueStore) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(KeyValueStore);
      }
      if (configCase_ == ConfigOneofCase.Secret) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Secret);
      }
      if (configCase_ == ConfigOneofCase.Websocket) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Websocket);
      }
      if (configCase_ == ConfigOneofCase.Http) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(Http);
      }
      if (configCase_ == ConfigOneofCase.Queue) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Queue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (configCase_ == ConfigOneofCase.Service) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Service);
      }
      if (configCase_ == ConfigOneofCase.Bucket) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bucket);
      }
      if (configCase_ == ConfigOneofCase.Topic) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Topic);
      }
      if (configCase_ == ConfigOneofCase.Api) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Api);
      }
      if (configCase_ == ConfigOneofCase.Policy) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Policy);
      }
      if (configCase_ == ConfigOneofCase.Schedule) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
      }
      if (configCase_ == ConfigOneofCase.KeyValueStore) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(KeyValueStore);
      }
      if (configCase_ == ConfigOneofCase.Secret) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Secret);
      }
      if (configCase_ == ConfigOneofCase.Websocket) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Websocket);
      }
      if (configCase_ == ConfigOneofCase.Http) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Http);
      }
      if (configCase_ == ConfigOneofCase.Queue) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Queue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Resource other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Nitric.Proto.Resources.v1.ResourceIdentifier();
        }
        Id.MergeFrom(other.Id);
      }
      switch (other.ConfigCase) {
        case ConfigOneofCase.Service:
          if (Service == null) {
            Service = new global::Nitric.Proto.Deployments.v1.Service();
          }
          Service.MergeFrom(other.Service);
          break;
        case ConfigOneofCase.Bucket:
          if (Bucket == null) {
            Bucket = new global::Nitric.Proto.Deployments.v1.Bucket();
          }
          Bucket.MergeFrom(other.Bucket);
          break;
        case ConfigOneofCase.Topic:
          if (Topic == null) {
            Topic = new global::Nitric.Proto.Deployments.v1.Topic();
          }
          Topic.MergeFrom(other.Topic);
          break;
        case ConfigOneofCase.Api:
          if (Api == null) {
            Api = new global::Nitric.Proto.Deployments.v1.Api();
          }
          Api.MergeFrom(other.Api);
          break;
        case ConfigOneofCase.Policy:
          if (Policy == null) {
            Policy = new global::Nitric.Proto.Deployments.v1.Policy();
          }
          Policy.MergeFrom(other.Policy);
          break;
        case ConfigOneofCase.Schedule:
          if (Schedule == null) {
            Schedule = new global::Nitric.Proto.Deployments.v1.Schedule();
          }
          Schedule.MergeFrom(other.Schedule);
          break;
        case ConfigOneofCase.KeyValueStore:
          if (KeyValueStore == null) {
            KeyValueStore = new global::Nitric.Proto.Deployments.v1.KeyValueStore();
          }
          KeyValueStore.MergeFrom(other.KeyValueStore);
          break;
        case ConfigOneofCase.Secret:
          if (Secret == null) {
            Secret = new global::Nitric.Proto.Deployments.v1.Secret();
          }
          Secret.MergeFrom(other.Secret);
          break;
        case ConfigOneofCase.Websocket:
          if (Websocket == null) {
            Websocket = new global::Nitric.Proto.Deployments.v1.Websocket();
          }
          Websocket.MergeFrom(other.Websocket);
          break;
        case ConfigOneofCase.Http:
          if (Http == null) {
            Http = new global::Nitric.Proto.Deployments.v1.Http();
          }
          Http.MergeFrom(other.Http);
          break;
        case ConfigOneofCase.Queue:
          if (Queue == null) {
            Queue = new global::Nitric.Proto.Deployments.v1.Queue();
          }
          Queue.MergeFrom(other.Queue);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Nitric.Proto.Resources.v1.ResourceIdentifier();
            }
            input.ReadMessage(Id);
            break;
          }
          case 82: {
            global::Nitric.Proto.Deployments.v1.Service subBuilder = new global::Nitric.Proto.Deployments.v1.Service();
            if (configCase_ == ConfigOneofCase.Service) {
              subBuilder.MergeFrom(Service);
            }
            input.ReadMessage(subBuilder);
            Service = subBuilder;
            break;
          }
          case 90: {
            global::Nitric.Proto.Deployments.v1.Bucket subBuilder = new global::Nitric.Proto.Deployments.v1.Bucket();
            if (configCase_ == ConfigOneofCase.Bucket) {
              subBuilder.MergeFrom(Bucket);
            }
            input.ReadMessage(subBuilder);
            Bucket = subBuilder;
            break;
          }
          case 98: {
            global::Nitric.Proto.Deployments.v1.Topic subBuilder = new global::Nitric.Proto.Deployments.v1.Topic();
            if (configCase_ == ConfigOneofCase.Topic) {
              subBuilder.MergeFrom(Topic);
            }
            input.ReadMessage(subBuilder);
            Topic = subBuilder;
            break;
          }
          case 106: {
            global::Nitric.Proto.Deployments.v1.Api subBuilder = new global::Nitric.Proto.Deployments.v1.Api();
            if (configCase_ == ConfigOneofCase.Api) {
              subBuilder.MergeFrom(Api);
            }
            input.ReadMessage(subBuilder);
            Api = subBuilder;
            break;
          }
          case 114: {
            global::Nitric.Proto.Deployments.v1.Policy subBuilder = new global::Nitric.Proto.Deployments.v1.Policy();
            if (configCase_ == ConfigOneofCase.Policy) {
              subBuilder.MergeFrom(Policy);
            }
            input.ReadMessage(subBuilder);
            Policy = subBuilder;
            break;
          }
          case 122: {
            global::Nitric.Proto.Deployments.v1.Schedule subBuilder = new global::Nitric.Proto.Deployments.v1.Schedule();
            if (configCase_ == ConfigOneofCase.Schedule) {
              subBuilder.MergeFrom(Schedule);
            }
            input.ReadMessage(subBuilder);
            Schedule = subBuilder;
            break;
          }
          case 130: {
            global::Nitric.Proto.Deployments.v1.KeyValueStore subBuilder = new global::Nitric.Proto.Deployments.v1.KeyValueStore();
            if (configCase_ == ConfigOneofCase.KeyValueStore) {
              subBuilder.MergeFrom(KeyValueStore);
            }
            input.ReadMessage(subBuilder);
            KeyValueStore = subBuilder;
            break;
          }
          case 138: {
            global::Nitric.Proto.Deployments.v1.Secret subBuilder = new global::Nitric.Proto.Deployments.v1.Secret();
            if (configCase_ == ConfigOneofCase.Secret) {
              subBuilder.MergeFrom(Secret);
            }
            input.ReadMessage(subBuilder);
            Secret = subBuilder;
            break;
          }
          case 146: {
            global::Nitric.Proto.Deployments.v1.Websocket subBuilder = new global::Nitric.Proto.Deployments.v1.Websocket();
            if (configCase_ == ConfigOneofCase.Websocket) {
              subBuilder.MergeFrom(Websocket);
            }
            input.ReadMessage(subBuilder);
            Websocket = subBuilder;
            break;
          }
          case 154: {
            global::Nitric.Proto.Deployments.v1.Http subBuilder = new global::Nitric.Proto.Deployments.v1.Http();
            if (configCase_ == ConfigOneofCase.Http) {
              subBuilder.MergeFrom(Http);
            }
            input.ReadMessage(subBuilder);
            Http = subBuilder;
            break;
          }
          case 162: {
            global::Nitric.Proto.Deployments.v1.Queue subBuilder = new global::Nitric.Proto.Deployments.v1.Queue();
            if (configCase_ == ConfigOneofCase.Queue) {
              subBuilder.MergeFrom(Queue);
            }
            input.ReadMessage(subBuilder);
            Queue = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Nitric.Proto.Resources.v1.ResourceIdentifier();
            }
            input.ReadMessage(Id);
            break;
          }
          case 82: {
            global::Nitric.Proto.Deployments.v1.Service subBuilder = new global::Nitric.Proto.Deployments.v1.Service();
            if (configCase_ == ConfigOneofCase.Service) {
              subBuilder.MergeFrom(Service);
            }
            input.ReadMessage(subBuilder);
            Service = subBuilder;
            break;
          }
          case 90: {
            global::Nitric.Proto.Deployments.v1.Bucket subBuilder = new global::Nitric.Proto.Deployments.v1.Bucket();
            if (configCase_ == ConfigOneofCase.Bucket) {
              subBuilder.MergeFrom(Bucket);
            }
            input.ReadMessage(subBuilder);
            Bucket = subBuilder;
            break;
          }
          case 98: {
            global::Nitric.Proto.Deployments.v1.Topic subBuilder = new global::Nitric.Proto.Deployments.v1.Topic();
            if (configCase_ == ConfigOneofCase.Topic) {
              subBuilder.MergeFrom(Topic);
            }
            input.ReadMessage(subBuilder);
            Topic = subBuilder;
            break;
          }
          case 106: {
            global::Nitric.Proto.Deployments.v1.Api subBuilder = new global::Nitric.Proto.Deployments.v1.Api();
            if (configCase_ == ConfigOneofCase.Api) {
              subBuilder.MergeFrom(Api);
            }
            input.ReadMessage(subBuilder);
            Api = subBuilder;
            break;
          }
          case 114: {
            global::Nitric.Proto.Deployments.v1.Policy subBuilder = new global::Nitric.Proto.Deployments.v1.Policy();
            if (configCase_ == ConfigOneofCase.Policy) {
              subBuilder.MergeFrom(Policy);
            }
            input.ReadMessage(subBuilder);
            Policy = subBuilder;
            break;
          }
          case 122: {
            global::Nitric.Proto.Deployments.v1.Schedule subBuilder = new global::Nitric.Proto.Deployments.v1.Schedule();
            if (configCase_ == ConfigOneofCase.Schedule) {
              subBuilder.MergeFrom(Schedule);
            }
            input.ReadMessage(subBuilder);
            Schedule = subBuilder;
            break;
          }
          case 130: {
            global::Nitric.Proto.Deployments.v1.KeyValueStore subBuilder = new global::Nitric.Proto.Deployments.v1.KeyValueStore();
            if (configCase_ == ConfigOneofCase.KeyValueStore) {
              subBuilder.MergeFrom(KeyValueStore);
            }
            input.ReadMessage(subBuilder);
            KeyValueStore = subBuilder;
            break;
          }
          case 138: {
            global::Nitric.Proto.Deployments.v1.Secret subBuilder = new global::Nitric.Proto.Deployments.v1.Secret();
            if (configCase_ == ConfigOneofCase.Secret) {
              subBuilder.MergeFrom(Secret);
            }
            input.ReadMessage(subBuilder);
            Secret = subBuilder;
            break;
          }
          case 146: {
            global::Nitric.Proto.Deployments.v1.Websocket subBuilder = new global::Nitric.Proto.Deployments.v1.Websocket();
            if (configCase_ == ConfigOneofCase.Websocket) {
              subBuilder.MergeFrom(Websocket);
            }
            input.ReadMessage(subBuilder);
            Websocket = subBuilder;
            break;
          }
          case 154: {
            global::Nitric.Proto.Deployments.v1.Http subBuilder = new global::Nitric.Proto.Deployments.v1.Http();
            if (configCase_ == ConfigOneofCase.Http) {
              subBuilder.MergeFrom(Http);
            }
            input.ReadMessage(subBuilder);
            Http = subBuilder;
            break;
          }
          case 162: {
            global::Nitric.Proto.Deployments.v1.Queue subBuilder = new global::Nitric.Proto.Deployments.v1.Queue();
            if (configCase_ == ConfigOneofCase.Queue) {
              subBuilder.MergeFrom(Queue);
            }
            input.ReadMessage(subBuilder);
            Queue = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This is already defined in the resource contracts,
  /// unfortunately there are parts we don't want to duplicate, such as API config
  /// </summary>
  public sealed partial class Policy : pb::IMessage<Policy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Policy> _parser = new pb::MessageParser<Policy>(() => new Policy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Policy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Policy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Policy(Policy other) : this() {
      principals_ = other.principals_.Clone();
      actions_ = other.actions_.Clone();
      resources_ = other.resources_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Policy Clone() {
      return new Policy(this);
    }

    /// <summary>Field number for the "principals" field.</summary>
    public const int PrincipalsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Nitric.Proto.Deployments.v1.Resource> _repeated_principals_codec
        = pb::FieldCodec.ForMessage(10, global::Nitric.Proto.Deployments.v1.Resource.Parser);
    private readonly pbc::RepeatedField<global::Nitric.Proto.Deployments.v1.Resource> principals_ = new pbc::RepeatedField<global::Nitric.Proto.Deployments.v1.Resource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Nitric.Proto.Deployments.v1.Resource> Principals {
      get { return principals_; }
    }

    /// <summary>Field number for the "actions" field.</summary>
    public const int ActionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Nitric.Proto.Resources.v1.Action> _repeated_actions_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Nitric.Proto.Resources.v1.Action) x);
    private readonly pbc::RepeatedField<global::Nitric.Proto.Resources.v1.Action> actions_ = new pbc::RepeatedField<global::Nitric.Proto.Resources.v1.Action>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Nitric.Proto.Resources.v1.Action> Actions {
      get { return actions_; }
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Nitric.Proto.Deployments.v1.Resource> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(26, global::Nitric.Proto.Deployments.v1.Resource.Parser);
    private readonly pbc::RepeatedField<global::Nitric.Proto.Deployments.v1.Resource> resources_ = new pbc::RepeatedField<global::Nitric.Proto.Deployments.v1.Resource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Nitric.Proto.Deployments.v1.Resource> Resources {
      get { return resources_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Policy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Policy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!principals_.Equals(other.principals_)) return false;
      if(!actions_.Equals(other.actions_)) return false;
      if(!resources_.Equals(other.resources_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= principals_.GetHashCode();
      hash ^= actions_.GetHashCode();
      hash ^= resources_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      principals_.WriteTo(output, _repeated_principals_codec);
      actions_.WriteTo(output, _repeated_actions_codec);
      resources_.WriteTo(output, _repeated_resources_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      principals_.WriteTo(ref output, _repeated_principals_codec);
      actions_.WriteTo(ref output, _repeated_actions_codec);
      resources_.WriteTo(ref output, _repeated_resources_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += principals_.CalculateSize(_repeated_principals_codec);
      size += actions_.CalculateSize(_repeated_actions_codec);
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Policy other) {
      if (other == null) {
        return;
      }
      principals_.Add(other.principals_);
      actions_.Add(other.actions_);
      resources_.Add(other.resources_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            principals_.AddEntriesFrom(input, _repeated_principals_codec);
            break;
          }
          case 18:
          case 16: {
            actions_.AddEntriesFrom(input, _repeated_actions_codec);
            break;
          }
          case 26: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            principals_.AddEntriesFrom(ref input, _repeated_principals_codec);
            break;
          }
          case 18:
          case 16: {
            actions_.AddEntriesFrom(ref input, _repeated_actions_codec);
            break;
          }
          case 26: {
            resources_.AddEntriesFrom(ref input, _repeated_resources_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Spec : pb::IMessage<Spec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Spec> _parser = new pb::MessageParser<Spec>(() => new Spec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Spec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Deployments.v1.DeploymentsReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Spec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Spec(Spec other) : this() {
      resources_ = other.resources_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Spec Clone() {
      return new Spec(this);
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Nitric.Proto.Deployments.v1.Resource> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(10, global::Nitric.Proto.Deployments.v1.Resource.Parser);
    private readonly pbc::RepeatedField<global::Nitric.Proto.Deployments.v1.Resource> resources_ = new pbc::RepeatedField<global::Nitric.Proto.Deployments.v1.Resource>();
    /// <summary>
    /// list of resources to deploy
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Nitric.Proto.Deployments.v1.Resource> Resources {
      get { return resources_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Spec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Spec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!resources_.Equals(other.resources_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= resources_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      resources_.WriteTo(output, _repeated_resources_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      resources_.WriteTo(ref output, _repeated_resources_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Spec other) {
      if (other == null) {
        return;
      }
      resources_.Add(other.resources_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            resources_.AddEntriesFrom(ref input, _repeated_resources_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
