// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: nitric/proto/websockets/v1/websockets.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nitric.Proto.Websockets.v1 {

  /// <summary>Holder for reflection information generated from nitric/proto/websockets/v1/websockets.proto</summary>
  public static partial class WebsocketsReflection {

    #region Descriptor
    /// <summary>File descriptor for nitric/proto/websockets/v1/websockets.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WebsocketsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CituaXRyaWMvcHJvdG8vd2Vic29ja2V0cy92MS93ZWJzb2NrZXRzLnByb3Rv",
            "EhpuaXRyaWMucHJvdG8ud2Vic29ja2V0cy52MSIuChdXZWJzb2NrZXREZXRh",
            "aWxzUmVxdWVzdBITCgtzb2NrZXRfbmFtZRgBIAEoCSInChhXZWJzb2NrZXRE",
            "ZXRhaWxzUmVzcG9uc2USCwoDdXJsGAEgASgJIlAKFFdlYnNvY2tldFNlbmRS",
            "ZXF1ZXN0EhMKC3NvY2tldF9uYW1lGAEgASgJEhUKDWNvbm5lY3Rpb25faWQY",
            "AiABKAkSDAoEZGF0YRgDIAEoDCIXChVXZWJzb2NrZXRTZW5kUmVzcG9uc2Ui",
            "TQofV2Vic29ja2V0Q2xvc2VDb25uZWN0aW9uUmVxdWVzdBITCgtzb2NrZXRf",
            "bmFtZRgBIAEoCRIVCg1jb25uZWN0aW9uX2lkGAIgASgJIiIKIFdlYnNvY2tl",
            "dENsb3NlQ29ubmVjdGlvblJlc3BvbnNlIs8BCg1DbGllbnRNZXNzYWdlEgoK",
            "AmlkGAEgASgJEk8KFHJlZ2lzdHJhdGlvbl9yZXF1ZXN0GAIgASgLMi8ubml0",
            "cmljLnByb3RvLndlYnNvY2tldHMudjEuUmVnaXN0cmF0aW9uUmVxdWVzdEgA",
            "ElYKGHdlYnNvY2tldF9ldmVudF9yZXNwb25zZRgDIAEoCzIyLm5pdHJpYy5w",
            "cm90by53ZWJzb2NrZXRzLnYxLldlYnNvY2tldEV2ZW50UmVzcG9uc2VIAEIJ",
            "Cgdjb250ZW50IhYKFFJlZ2lzdHJhdGlvblJlc3BvbnNlIm4KE1JlZ2lzdHJh",
            "dGlvblJlcXVlc3QSEwoLc29ja2V0X25hbWUYASABKAkSQgoKZXZlbnRfdHlw",
            "ZRgCIAEoDjIuLm5pdHJpYy5wcm90by53ZWJzb2NrZXRzLnYxLldlYnNvY2tl",
            "dEV2ZW50VHlwZSK5AgoVV2Vic29ja2V0RXZlbnRSZXF1ZXN0EhMKC3NvY2tl",
            "dF9uYW1lGAEgASgJEhQKDGNvbm5lY3Rpb25JZBgCIAEoCRJKCgpjb25uZWN0",
            "aW9uGAogASgLMjQubml0cmljLnByb3RvLndlYnNvY2tldHMudjEuV2Vic29j",
            "a2V0Q29ubmVjdGlvbkV2ZW50SAASUAoNZGlzY29ubmVjdGlvbhgLIAEoCzI3",
            "Lm5pdHJpYy5wcm90by53ZWJzb2NrZXRzLnYxLldlYnNvY2tldERpc2Nvbm5l",
            "Y3Rpb25FdmVudEgAEkQKB21lc3NhZ2UYDCABKAsyMS5uaXRyaWMucHJvdG8u",
            "d2Vic29ja2V0cy52MS5XZWJzb2NrZXRNZXNzYWdlRXZlbnRIAEIRCg93ZWJz",
            "b2NrZXRfZXZlbnQiGwoKUXVlcnlWYWx1ZRINCgV2YWx1ZRgBIAMoCSLPAQoN",
            "U2VydmVyTWVzc2FnZRIKCgJpZBgBIAEoCRJRChVyZWdpc3RyYXRpb25fcmVz",
            "cG9uc2UYAiABKAsyMC5uaXRyaWMucHJvdG8ud2Vic29ja2V0cy52MS5SZWdp",
            "c3RyYXRpb25SZXNwb25zZUgAElQKF3dlYnNvY2tldF9ldmVudF9yZXF1ZXN0",
            "GAMgASgLMjEubml0cmljLnByb3RvLndlYnNvY2tldHMudjEuV2Vic29ja2V0",
            "RXZlbnRSZXF1ZXN0SABCCQoHY29udGVudCKGAQoWV2Vic29ja2V0RXZlbnRS",
            "ZXNwb25zZRJWChNjb25uZWN0aW9uX3Jlc3BvbnNlGAogASgLMjcubml0cmlj",
            "LnByb3RvLndlYnNvY2tldHMudjEuV2Vic29ja2V0Q29ubmVjdGlvblJlc3Bv",
            "bnNlSABCFAoSd2Vic29ja2V0X3Jlc3BvbnNlItMBChhXZWJzb2NrZXRDb25u",
            "ZWN0aW9uRXZlbnQSWwoMcXVlcnlfcGFyYW1zGAEgAygLMkUubml0cmljLnBy",
            "b3RvLndlYnNvY2tldHMudjEuV2Vic29ja2V0Q29ubmVjdGlvbkV2ZW50LlF1",
            "ZXJ5UGFyYW1zRW50cnkaWgoQUXVlcnlQYXJhbXNFbnRyeRILCgNrZXkYASAB",
            "KAkSNQoFdmFsdWUYAiABKAsyJi5uaXRyaWMucHJvdG8ud2Vic29ja2V0cy52",
            "MS5RdWVyeVZhbHVlOgI4ASItChtXZWJzb2NrZXRDb25uZWN0aW9uUmVzcG9u",
            "c2USDgoGcmVqZWN0GAEgASgIIh0KG1dlYnNvY2tldERpc2Nvbm5lY3Rpb25F",
            "dmVudCIlChVXZWJzb2NrZXRNZXNzYWdlRXZlbnQSDAoEYm9keRgBIAEoDCo+",
            "ChJXZWJzb2NrZXRFdmVudFR5cGUSCwoHQ29ubmVjdBAAEg4KCkRpc2Nvbm5l",
            "Y3QQARILCgdNZXNzYWdlEAIyigMKCVdlYnNvY2tldBJyCgtTZW5kTWVzc2Fn",
            "ZRIwLm5pdHJpYy5wcm90by53ZWJzb2NrZXRzLnYxLldlYnNvY2tldFNlbmRS",
            "ZXF1ZXN0GjEubml0cmljLnByb3RvLndlYnNvY2tldHMudjEuV2Vic29ja2V0",
            "U2VuZFJlc3BvbnNlEowBCg9DbG9zZUNvbm5lY3Rpb24SOy5uaXRyaWMucHJv",
            "dG8ud2Vic29ja2V0cy52MS5XZWJzb2NrZXRDbG9zZUNvbm5lY3Rpb25SZXF1",
            "ZXN0Gjwubml0cmljLnByb3RvLndlYnNvY2tldHMudjEuV2Vic29ja2V0Q2xv",
            "c2VDb25uZWN0aW9uUmVzcG9uc2USegoNU29ja2V0RGV0YWlscxIzLm5pdHJp",
            "Yy5wcm90by53ZWJzb2NrZXRzLnYxLldlYnNvY2tldERldGFpbHNSZXF1ZXN0",
            "GjQubml0cmljLnByb3RvLndlYnNvY2tldHMudjEuV2Vic29ja2V0RGV0YWls",
            "c1Jlc3BvbnNlMnwKEFdlYnNvY2tldEhhbmRsZXISaAoMSGFuZGxlRXZlbnRz",
            "Eikubml0cmljLnByb3RvLndlYnNvY2tldHMudjEuQ2xpZW50TWVzc2FnZRop",
            "Lm5pdHJpYy5wcm90by53ZWJzb2NrZXRzLnYxLlNlcnZlck1lc3NhZ2UoATAB",
            "QrYBCh1pby5uaXRyaWMucHJvdG8ud2Vic29ja2V0cy52MUIRV2Vic29ja2V0",
            "c1NlcnZpY2VQAVpGZ2l0aHViLmNvbS9uaXRyaWN0ZWNoL25pdHJpYy9jb3Jl",
            "L3BrZy9wcm90by93ZWJzb2NrZXRzL3YxO3dlYnNvY2tldHNwYqoCGk5pdHJp",
            "Yy5Qcm90by5XZWJzb2NrZXRzLnYxygIaTml0cmljXFByb3RvXFdlYnNvY2tl",
            "dHNcVjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Nitric.Proto.Websockets.v1.WebsocketEventType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Websockets.v1.WebsocketDetailsRequest), global::Nitric.Proto.Websockets.v1.WebsocketDetailsRequest.Parser, new[]{ "SocketName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Websockets.v1.WebsocketDetailsResponse), global::Nitric.Proto.Websockets.v1.WebsocketDetailsResponse.Parser, new[]{ "Url" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Websockets.v1.WebsocketSendRequest), global::Nitric.Proto.Websockets.v1.WebsocketSendRequest.Parser, new[]{ "SocketName", "ConnectionId", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Websockets.v1.WebsocketSendResponse), global::Nitric.Proto.Websockets.v1.WebsocketSendResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Websockets.v1.WebsocketCloseConnectionRequest), global::Nitric.Proto.Websockets.v1.WebsocketCloseConnectionRequest.Parser, new[]{ "SocketName", "ConnectionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Websockets.v1.WebsocketCloseConnectionResponse), global::Nitric.Proto.Websockets.v1.WebsocketCloseConnectionResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Websockets.v1.ClientMessage), global::Nitric.Proto.Websockets.v1.ClientMessage.Parser, new[]{ "Id", "RegistrationRequest", "WebsocketEventResponse" }, new[]{ "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Websockets.v1.RegistrationResponse), global::Nitric.Proto.Websockets.v1.RegistrationResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Websockets.v1.RegistrationRequest), global::Nitric.Proto.Websockets.v1.RegistrationRequest.Parser, new[]{ "SocketName", "EventType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Websockets.v1.WebsocketEventRequest), global::Nitric.Proto.Websockets.v1.WebsocketEventRequest.Parser, new[]{ "SocketName", "ConnectionId", "Connection", "Disconnection", "Message" }, new[]{ "WebsocketEvent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Websockets.v1.QueryValue), global::Nitric.Proto.Websockets.v1.QueryValue.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Websockets.v1.ServerMessage), global::Nitric.Proto.Websockets.v1.ServerMessage.Parser, new[]{ "Id", "RegistrationResponse", "WebsocketEventRequest" }, new[]{ "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Websockets.v1.WebsocketEventResponse), global::Nitric.Proto.Websockets.v1.WebsocketEventResponse.Parser, new[]{ "ConnectionResponse" }, new[]{ "WebsocketResponse" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Websockets.v1.WebsocketConnectionEvent), global::Nitric.Proto.Websockets.v1.WebsocketConnectionEvent.Parser, new[]{ "QueryParams" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Websockets.v1.WebsocketConnectionResponse), global::Nitric.Proto.Websockets.v1.WebsocketConnectionResponse.Parser, new[]{ "Reject" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Websockets.v1.WebsocketDisconnectionEvent), global::Nitric.Proto.Websockets.v1.WebsocketDisconnectionEvent.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Nitric.Proto.Websockets.v1.WebsocketMessageEvent), global::Nitric.Proto.Websockets.v1.WebsocketMessageEvent.Parser, new[]{ "Body" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum WebsocketEventType {
    /// <summary>
    /// Specialised Event for handling new client connections
    /// </summary>
    [pbr::OriginalName("Connect")] Connect = 0,
    /// <summary>
    /// Specialised Event for handling existing client connections
    /// </summary>
    [pbr::OriginalName("Disconnect")] Disconnect = 1,
    /// <summary>
    /// All other types of events are messages
    /// </summary>
    [pbr::OriginalName("Message")] Message = 2,
  }

  #endregion

  #region Messages
  public sealed partial class WebsocketDetailsRequest : pb::IMessage<WebsocketDetailsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebsocketDetailsRequest> _parser = new pb::MessageParser<WebsocketDetailsRequest>(() => new WebsocketDetailsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebsocketDetailsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Websockets.v1.WebsocketsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketDetailsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketDetailsRequest(WebsocketDetailsRequest other) : this() {
      socketName_ = other.socketName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketDetailsRequest Clone() {
      return new WebsocketDetailsRequest(this);
    }

    /// <summary>Field number for the "socket_name" field.</summary>
    public const int SocketNameFieldNumber = 1;
    private string socketName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SocketName {
      get { return socketName_; }
      set {
        socketName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebsocketDetailsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebsocketDetailsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SocketName != other.SocketName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SocketName.Length != 0) hash ^= SocketName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SocketName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SocketName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SocketName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SocketName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SocketName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SocketName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebsocketDetailsRequest other) {
      if (other == null) {
        return;
      }
      if (other.SocketName.Length != 0) {
        SocketName = other.SocketName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SocketName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SocketName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WebsocketDetailsResponse : pb::IMessage<WebsocketDetailsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebsocketDetailsResponse> _parser = new pb::MessageParser<WebsocketDetailsResponse>(() => new WebsocketDetailsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebsocketDetailsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Websockets.v1.WebsocketsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketDetailsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketDetailsResponse(WebsocketDetailsResponse other) : this() {
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketDetailsResponse Clone() {
      return new WebsocketDetailsResponse(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebsocketDetailsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebsocketDetailsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebsocketDetailsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WebsocketSendRequest : pb::IMessage<WebsocketSendRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebsocketSendRequest> _parser = new pb::MessageParser<WebsocketSendRequest>(() => new WebsocketSendRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebsocketSendRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Websockets.v1.WebsocketsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketSendRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketSendRequest(WebsocketSendRequest other) : this() {
      socketName_ = other.socketName_;
      connectionId_ = other.connectionId_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketSendRequest Clone() {
      return new WebsocketSendRequest(this);
    }

    /// <summary>Field number for the "socket_name" field.</summary>
    public const int SocketNameFieldNumber = 1;
    private string socketName_ = "";
    /// <summary>
    /// The nitric name of the socket to send on
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SocketName {
      get { return socketName_; }
      set {
        socketName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "connection_id" field.</summary>
    public const int ConnectionIdFieldNumber = 2;
    private string connectionId_ = "";
    /// <summary>
    /// The connection ID of the client to send to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionId {
      get { return connectionId_; }
      set {
        connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private pb::ByteString data_ = pb::ByteString.Empty;
    /// <summary>
    /// The data to send to the socket
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebsocketSendRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebsocketSendRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SocketName != other.SocketName) return false;
      if (ConnectionId != other.ConnectionId) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SocketName.Length != 0) hash ^= SocketName.GetHashCode();
      if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SocketName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SocketName);
      }
      if (ConnectionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionId);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SocketName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SocketName);
      }
      if (ConnectionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionId);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SocketName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SocketName);
      }
      if (ConnectionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebsocketSendRequest other) {
      if (other == null) {
        return;
      }
      if (other.SocketName.Length != 0) {
        SocketName = other.SocketName;
      }
      if (other.ConnectionId.Length != 0) {
        ConnectionId = other.ConnectionId;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SocketName = input.ReadString();
            break;
          }
          case 18: {
            ConnectionId = input.ReadString();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SocketName = input.ReadString();
            break;
          }
          case 18: {
            ConnectionId = input.ReadString();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WebsocketSendResponse : pb::IMessage<WebsocketSendResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebsocketSendResponse> _parser = new pb::MessageParser<WebsocketSendResponse>(() => new WebsocketSendResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebsocketSendResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Websockets.v1.WebsocketsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketSendResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketSendResponse(WebsocketSendResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketSendResponse Clone() {
      return new WebsocketSendResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebsocketSendResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebsocketSendResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebsocketSendResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class WebsocketCloseConnectionRequest : pb::IMessage<WebsocketCloseConnectionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebsocketCloseConnectionRequest> _parser = new pb::MessageParser<WebsocketCloseConnectionRequest>(() => new WebsocketCloseConnectionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebsocketCloseConnectionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Websockets.v1.WebsocketsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketCloseConnectionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketCloseConnectionRequest(WebsocketCloseConnectionRequest other) : this() {
      socketName_ = other.socketName_;
      connectionId_ = other.connectionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketCloseConnectionRequest Clone() {
      return new WebsocketCloseConnectionRequest(this);
    }

    /// <summary>Field number for the "socket_name" field.</summary>
    public const int SocketNameFieldNumber = 1;
    private string socketName_ = "";
    /// <summary>
    /// The nitric name of the socket to send on
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SocketName {
      get { return socketName_; }
      set {
        socketName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "connection_id" field.</summary>
    public const int ConnectionIdFieldNumber = 2;
    private string connectionId_ = "";
    /// <summary>
    /// The connection ID of the client to send to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionId {
      get { return connectionId_; }
      set {
        connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebsocketCloseConnectionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebsocketCloseConnectionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SocketName != other.SocketName) return false;
      if (ConnectionId != other.ConnectionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SocketName.Length != 0) hash ^= SocketName.GetHashCode();
      if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SocketName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SocketName);
      }
      if (ConnectionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SocketName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SocketName);
      }
      if (ConnectionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SocketName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SocketName);
      }
      if (ConnectionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebsocketCloseConnectionRequest other) {
      if (other == null) {
        return;
      }
      if (other.SocketName.Length != 0) {
        SocketName = other.SocketName;
      }
      if (other.ConnectionId.Length != 0) {
        ConnectionId = other.ConnectionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SocketName = input.ReadString();
            break;
          }
          case 18: {
            ConnectionId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SocketName = input.ReadString();
            break;
          }
          case 18: {
            ConnectionId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WebsocketCloseConnectionResponse : pb::IMessage<WebsocketCloseConnectionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebsocketCloseConnectionResponse> _parser = new pb::MessageParser<WebsocketCloseConnectionResponse>(() => new WebsocketCloseConnectionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebsocketCloseConnectionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Websockets.v1.WebsocketsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketCloseConnectionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketCloseConnectionResponse(WebsocketCloseConnectionResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketCloseConnectionResponse Clone() {
      return new WebsocketCloseConnectionResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebsocketCloseConnectionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebsocketCloseConnectionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebsocketCloseConnectionResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ClientMessages are sent from the service to the nitric server
  /// </summary>
  public sealed partial class ClientMessage : pb::IMessage<ClientMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientMessage> _parser = new pb::MessageParser<ClientMessage>(() => new ClientMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Websockets.v1.WebsocketsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMessage(ClientMessage other) : this() {
      id_ = other.id_;
      switch (other.ContentCase) {
        case ContentOneofCase.RegistrationRequest:
          RegistrationRequest = other.RegistrationRequest.Clone();
          break;
        case ContentOneofCase.WebsocketEventResponse:
          WebsocketEventResponse = other.WebsocketEventResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMessage Clone() {
      return new ClientMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Globally unique id to pair requests/responses
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "registration_request" field.</summary>
    public const int RegistrationRequestFieldNumber = 2;
    /// <summary>
    /// Client initialisation request
    /// A worker will not be eligible for triggers
    /// until it has identified itself
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Websockets.v1.RegistrationRequest RegistrationRequest {
      get { return contentCase_ == ContentOneofCase.RegistrationRequest ? (global::Nitric.Proto.Websockets.v1.RegistrationRequest) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.RegistrationRequest;
      }
    }

    /// <summary>Field number for the "websocket_event_response" field.</summary>
    public const int WebsocketEventResponseFieldNumber = 3;
    /// <summary>
    /// Client responding with result of a trigger
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Websockets.v1.WebsocketEventResponse WebsocketEventResponse {
      get { return contentCase_ == ContentOneofCase.WebsocketEventResponse ? (global::Nitric.Proto.Websockets.v1.WebsocketEventResponse) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.WebsocketEventResponse;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      RegistrationRequest = 2,
      WebsocketEventResponse = 3,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(RegistrationRequest, other.RegistrationRequest)) return false;
      if (!object.Equals(WebsocketEventResponse, other.WebsocketEventResponse)) return false;
      if (ContentCase != other.ContentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (contentCase_ == ContentOneofCase.RegistrationRequest) hash ^= RegistrationRequest.GetHashCode();
      if (contentCase_ == ContentOneofCase.WebsocketEventResponse) hash ^= WebsocketEventResponse.GetHashCode();
      hash ^= (int) contentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (contentCase_ == ContentOneofCase.RegistrationRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(RegistrationRequest);
      }
      if (contentCase_ == ContentOneofCase.WebsocketEventResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(WebsocketEventResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (contentCase_ == ContentOneofCase.RegistrationRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(RegistrationRequest);
      }
      if (contentCase_ == ContentOneofCase.WebsocketEventResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(WebsocketEventResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (contentCase_ == ContentOneofCase.RegistrationRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegistrationRequest);
      }
      if (contentCase_ == ContentOneofCase.WebsocketEventResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WebsocketEventResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.RegistrationRequest:
          if (RegistrationRequest == null) {
            RegistrationRequest = new global::Nitric.Proto.Websockets.v1.RegistrationRequest();
          }
          RegistrationRequest.MergeFrom(other.RegistrationRequest);
          break;
        case ContentOneofCase.WebsocketEventResponse:
          if (WebsocketEventResponse == null) {
            WebsocketEventResponse = new global::Nitric.Proto.Websockets.v1.WebsocketEventResponse();
          }
          WebsocketEventResponse.MergeFrom(other.WebsocketEventResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            global::Nitric.Proto.Websockets.v1.RegistrationRequest subBuilder = new global::Nitric.Proto.Websockets.v1.RegistrationRequest();
            if (contentCase_ == ContentOneofCase.RegistrationRequest) {
              subBuilder.MergeFrom(RegistrationRequest);
            }
            input.ReadMessage(subBuilder);
            RegistrationRequest = subBuilder;
            break;
          }
          case 26: {
            global::Nitric.Proto.Websockets.v1.WebsocketEventResponse subBuilder = new global::Nitric.Proto.Websockets.v1.WebsocketEventResponse();
            if (contentCase_ == ContentOneofCase.WebsocketEventResponse) {
              subBuilder.MergeFrom(WebsocketEventResponse);
            }
            input.ReadMessage(subBuilder);
            WebsocketEventResponse = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            global::Nitric.Proto.Websockets.v1.RegistrationRequest subBuilder = new global::Nitric.Proto.Websockets.v1.RegistrationRequest();
            if (contentCase_ == ContentOneofCase.RegistrationRequest) {
              subBuilder.MergeFrom(RegistrationRequest);
            }
            input.ReadMessage(subBuilder);
            RegistrationRequest = subBuilder;
            break;
          }
          case 26: {
            global::Nitric.Proto.Websockets.v1.WebsocketEventResponse subBuilder = new global::Nitric.Proto.Websockets.v1.WebsocketEventResponse();
            if (contentCase_ == ContentOneofCase.WebsocketEventResponse) {
              subBuilder.MergeFrom(WebsocketEventResponse);
            }
            input.ReadMessage(subBuilder);
            WebsocketEventResponse = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Placeholder message
  /// </summary>
  public sealed partial class RegistrationResponse : pb::IMessage<RegistrationResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegistrationResponse> _parser = new pb::MessageParser<RegistrationResponse>(() => new RegistrationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegistrationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Websockets.v1.WebsocketsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationResponse(RegistrationResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationResponse Clone() {
      return new RegistrationResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegistrationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegistrationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegistrationResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class RegistrationRequest : pb::IMessage<RegistrationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegistrationRequest> _parser = new pb::MessageParser<RegistrationRequest>(() => new RegistrationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegistrationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Websockets.v1.WebsocketsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationRequest(RegistrationRequest other) : this() {
      socketName_ = other.socketName_;
      eventType_ = other.eventType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegistrationRequest Clone() {
      return new RegistrationRequest(this);
    }

    /// <summary>Field number for the "socket_name" field.</summary>
    public const int SocketNameFieldNumber = 1;
    private string socketName_ = "";
    /// <summary>
    /// The nitric name of the socket that this worker listens on
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SocketName {
      get { return socketName_; }
      set {
        socketName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_type" field.</summary>
    public const int EventTypeFieldNumber = 2;
    private global::Nitric.Proto.Websockets.v1.WebsocketEventType eventType_ = global::Nitric.Proto.Websockets.v1.WebsocketEventType.Connect;
    /// <summary>
    /// The type of event that this worker handles
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Websockets.v1.WebsocketEventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegistrationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegistrationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SocketName != other.SocketName) return false;
      if (EventType != other.EventType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SocketName.Length != 0) hash ^= SocketName.GetHashCode();
      if (EventType != global::Nitric.Proto.Websockets.v1.WebsocketEventType.Connect) hash ^= EventType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SocketName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SocketName);
      }
      if (EventType != global::Nitric.Proto.Websockets.v1.WebsocketEventType.Connect) {
        output.WriteRawTag(16);
        output.WriteEnum((int) EventType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SocketName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SocketName);
      }
      if (EventType != global::Nitric.Proto.Websockets.v1.WebsocketEventType.Connect) {
        output.WriteRawTag(16);
        output.WriteEnum((int) EventType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SocketName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SocketName);
      }
      if (EventType != global::Nitric.Proto.Websockets.v1.WebsocketEventType.Connect) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegistrationRequest other) {
      if (other == null) {
        return;
      }
      if (other.SocketName.Length != 0) {
        SocketName = other.SocketName;
      }
      if (other.EventType != global::Nitric.Proto.Websockets.v1.WebsocketEventType.Connect) {
        EventType = other.EventType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SocketName = input.ReadString();
            break;
          }
          case 16: {
            EventType = (global::Nitric.Proto.Websockets.v1.WebsocketEventType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SocketName = input.ReadString();
            break;
          }
          case 16: {
            EventType = (global::Nitric.Proto.Websockets.v1.WebsocketEventType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WebsocketEventRequest : pb::IMessage<WebsocketEventRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebsocketEventRequest> _parser = new pb::MessageParser<WebsocketEventRequest>(() => new WebsocketEventRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebsocketEventRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Websockets.v1.WebsocketsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketEventRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketEventRequest(WebsocketEventRequest other) : this() {
      socketName_ = other.socketName_;
      connectionId_ = other.connectionId_;
      switch (other.WebsocketEventCase) {
        case WebsocketEventOneofCase.Connection:
          Connection = other.Connection.Clone();
          break;
        case WebsocketEventOneofCase.Disconnection:
          Disconnection = other.Disconnection.Clone();
          break;
        case WebsocketEventOneofCase.Message:
          Message = other.Message.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketEventRequest Clone() {
      return new WebsocketEventRequest(this);
    }

    /// <summary>Field number for the "socket_name" field.</summary>
    public const int SocketNameFieldNumber = 1;
    private string socketName_ = "";
    /// <summary>
    /// The nitric name of the socket that this worker listens on
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SocketName {
      get { return socketName_; }
      set {
        socketName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "connectionId" field.</summary>
    public const int ConnectionIdFieldNumber = 2;
    private string connectionId_ = "";
    /// <summary>
    /// The connection this trigger came from
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionId {
      get { return connectionId_; }
      set {
        connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "connection" field.</summary>
    public const int ConnectionFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Websockets.v1.WebsocketConnectionEvent Connection {
      get { return websocketEventCase_ == WebsocketEventOneofCase.Connection ? (global::Nitric.Proto.Websockets.v1.WebsocketConnectionEvent) websocketEvent_ : null; }
      set {
        websocketEvent_ = value;
        websocketEventCase_ = value == null ? WebsocketEventOneofCase.None : WebsocketEventOneofCase.Connection;
      }
    }

    /// <summary>Field number for the "disconnection" field.</summary>
    public const int DisconnectionFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Websockets.v1.WebsocketDisconnectionEvent Disconnection {
      get { return websocketEventCase_ == WebsocketEventOneofCase.Disconnection ? (global::Nitric.Proto.Websockets.v1.WebsocketDisconnectionEvent) websocketEvent_ : null; }
      set {
        websocketEvent_ = value;
        websocketEventCase_ = value == null ? WebsocketEventOneofCase.None : WebsocketEventOneofCase.Disconnection;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Websockets.v1.WebsocketMessageEvent Message {
      get { return websocketEventCase_ == WebsocketEventOneofCase.Message ? (global::Nitric.Proto.Websockets.v1.WebsocketMessageEvent) websocketEvent_ : null; }
      set {
        websocketEvent_ = value;
        websocketEventCase_ = value == null ? WebsocketEventOneofCase.None : WebsocketEventOneofCase.Message;
      }
    }

    private object websocketEvent_;
    /// <summary>Enum of possible cases for the "websocket_event" oneof.</summary>
    public enum WebsocketEventOneofCase {
      None = 0,
      Connection = 10,
      Disconnection = 11,
      Message = 12,
    }
    private WebsocketEventOneofCase websocketEventCase_ = WebsocketEventOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketEventOneofCase WebsocketEventCase {
      get { return websocketEventCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWebsocketEvent() {
      websocketEventCase_ = WebsocketEventOneofCase.None;
      websocketEvent_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebsocketEventRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebsocketEventRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SocketName != other.SocketName) return false;
      if (ConnectionId != other.ConnectionId) return false;
      if (!object.Equals(Connection, other.Connection)) return false;
      if (!object.Equals(Disconnection, other.Disconnection)) return false;
      if (!object.Equals(Message, other.Message)) return false;
      if (WebsocketEventCase != other.WebsocketEventCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SocketName.Length != 0) hash ^= SocketName.GetHashCode();
      if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
      if (websocketEventCase_ == WebsocketEventOneofCase.Connection) hash ^= Connection.GetHashCode();
      if (websocketEventCase_ == WebsocketEventOneofCase.Disconnection) hash ^= Disconnection.GetHashCode();
      if (websocketEventCase_ == WebsocketEventOneofCase.Message) hash ^= Message.GetHashCode();
      hash ^= (int) websocketEventCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SocketName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SocketName);
      }
      if (ConnectionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionId);
      }
      if (websocketEventCase_ == WebsocketEventOneofCase.Connection) {
        output.WriteRawTag(82);
        output.WriteMessage(Connection);
      }
      if (websocketEventCase_ == WebsocketEventOneofCase.Disconnection) {
        output.WriteRawTag(90);
        output.WriteMessage(Disconnection);
      }
      if (websocketEventCase_ == WebsocketEventOneofCase.Message) {
        output.WriteRawTag(98);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SocketName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SocketName);
      }
      if (ConnectionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionId);
      }
      if (websocketEventCase_ == WebsocketEventOneofCase.Connection) {
        output.WriteRawTag(82);
        output.WriteMessage(Connection);
      }
      if (websocketEventCase_ == WebsocketEventOneofCase.Disconnection) {
        output.WriteRawTag(90);
        output.WriteMessage(Disconnection);
      }
      if (websocketEventCase_ == WebsocketEventOneofCase.Message) {
        output.WriteRawTag(98);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SocketName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SocketName);
      }
      if (ConnectionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
      }
      if (websocketEventCase_ == WebsocketEventOneofCase.Connection) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connection);
      }
      if (websocketEventCase_ == WebsocketEventOneofCase.Disconnection) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Disconnection);
      }
      if (websocketEventCase_ == WebsocketEventOneofCase.Message) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebsocketEventRequest other) {
      if (other == null) {
        return;
      }
      if (other.SocketName.Length != 0) {
        SocketName = other.SocketName;
      }
      if (other.ConnectionId.Length != 0) {
        ConnectionId = other.ConnectionId;
      }
      switch (other.WebsocketEventCase) {
        case WebsocketEventOneofCase.Connection:
          if (Connection == null) {
            Connection = new global::Nitric.Proto.Websockets.v1.WebsocketConnectionEvent();
          }
          Connection.MergeFrom(other.Connection);
          break;
        case WebsocketEventOneofCase.Disconnection:
          if (Disconnection == null) {
            Disconnection = new global::Nitric.Proto.Websockets.v1.WebsocketDisconnectionEvent();
          }
          Disconnection.MergeFrom(other.Disconnection);
          break;
        case WebsocketEventOneofCase.Message:
          if (Message == null) {
            Message = new global::Nitric.Proto.Websockets.v1.WebsocketMessageEvent();
          }
          Message.MergeFrom(other.Message);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SocketName = input.ReadString();
            break;
          }
          case 18: {
            ConnectionId = input.ReadString();
            break;
          }
          case 82: {
            global::Nitric.Proto.Websockets.v1.WebsocketConnectionEvent subBuilder = new global::Nitric.Proto.Websockets.v1.WebsocketConnectionEvent();
            if (websocketEventCase_ == WebsocketEventOneofCase.Connection) {
              subBuilder.MergeFrom(Connection);
            }
            input.ReadMessage(subBuilder);
            Connection = subBuilder;
            break;
          }
          case 90: {
            global::Nitric.Proto.Websockets.v1.WebsocketDisconnectionEvent subBuilder = new global::Nitric.Proto.Websockets.v1.WebsocketDisconnectionEvent();
            if (websocketEventCase_ == WebsocketEventOneofCase.Disconnection) {
              subBuilder.MergeFrom(Disconnection);
            }
            input.ReadMessage(subBuilder);
            Disconnection = subBuilder;
            break;
          }
          case 98: {
            global::Nitric.Proto.Websockets.v1.WebsocketMessageEvent subBuilder = new global::Nitric.Proto.Websockets.v1.WebsocketMessageEvent();
            if (websocketEventCase_ == WebsocketEventOneofCase.Message) {
              subBuilder.MergeFrom(Message);
            }
            input.ReadMessage(subBuilder);
            Message = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SocketName = input.ReadString();
            break;
          }
          case 18: {
            ConnectionId = input.ReadString();
            break;
          }
          case 82: {
            global::Nitric.Proto.Websockets.v1.WebsocketConnectionEvent subBuilder = new global::Nitric.Proto.Websockets.v1.WebsocketConnectionEvent();
            if (websocketEventCase_ == WebsocketEventOneofCase.Connection) {
              subBuilder.MergeFrom(Connection);
            }
            input.ReadMessage(subBuilder);
            Connection = subBuilder;
            break;
          }
          case 90: {
            global::Nitric.Proto.Websockets.v1.WebsocketDisconnectionEvent subBuilder = new global::Nitric.Proto.Websockets.v1.WebsocketDisconnectionEvent();
            if (websocketEventCase_ == WebsocketEventOneofCase.Disconnection) {
              subBuilder.MergeFrom(Disconnection);
            }
            input.ReadMessage(subBuilder);
            Disconnection = subBuilder;
            break;
          }
          case 98: {
            global::Nitric.Proto.Websockets.v1.WebsocketMessageEvent subBuilder = new global::Nitric.Proto.Websockets.v1.WebsocketMessageEvent();
            if (websocketEventCase_ == WebsocketEventOneofCase.Message) {
              subBuilder.MergeFrom(Message);
            }
            input.ReadMessage(subBuilder);
            Message = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QueryValue : pb::IMessage<QueryValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QueryValue> _parser = new pb::MessageParser<QueryValue>(() => new QueryValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Websockets.v1.WebsocketsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryValue(QueryValue other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryValue Clone() {
      return new QueryValue(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_value_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> value_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryValue other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ServerMessages are sent from the nitric server to the service
  /// </summary>
  public sealed partial class ServerMessage : pb::IMessage<ServerMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerMessage> _parser = new pb::MessageParser<ServerMessage>(() => new ServerMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Websockets.v1.WebsocketsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerMessage(ServerMessage other) : this() {
      id_ = other.id_;
      switch (other.ContentCase) {
        case ContentOneofCase.RegistrationResponse:
          RegistrationResponse = other.RegistrationResponse.Clone();
          break;
        case ContentOneofCase.WebsocketEventRequest:
          WebsocketEventRequest = other.WebsocketEventRequest.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerMessage Clone() {
      return new ServerMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Server message ID, used to pair requests/responses
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "registration_response" field.</summary>
    public const int RegistrationResponseFieldNumber = 2;
    /// <summary>
    /// Server responding
    /// with client configuration details to an
    /// InitRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Websockets.v1.RegistrationResponse RegistrationResponse {
      get { return contentCase_ == ContentOneofCase.RegistrationResponse ? (global::Nitric.Proto.Websockets.v1.RegistrationResponse) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.RegistrationResponse;
      }
    }

    /// <summary>Field number for the "websocket_event_request" field.</summary>
    public const int WebsocketEventRequestFieldNumber = 3;
    /// <summary>
    /// Server requesting client to process an event
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Websockets.v1.WebsocketEventRequest WebsocketEventRequest {
      get { return contentCase_ == ContentOneofCase.WebsocketEventRequest ? (global::Nitric.Proto.Websockets.v1.WebsocketEventRequest) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.WebsocketEventRequest;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      RegistrationResponse = 2,
      WebsocketEventRequest = 3,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(RegistrationResponse, other.RegistrationResponse)) return false;
      if (!object.Equals(WebsocketEventRequest, other.WebsocketEventRequest)) return false;
      if (ContentCase != other.ContentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (contentCase_ == ContentOneofCase.RegistrationResponse) hash ^= RegistrationResponse.GetHashCode();
      if (contentCase_ == ContentOneofCase.WebsocketEventRequest) hash ^= WebsocketEventRequest.GetHashCode();
      hash ^= (int) contentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (contentCase_ == ContentOneofCase.RegistrationResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(RegistrationResponse);
      }
      if (contentCase_ == ContentOneofCase.WebsocketEventRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(WebsocketEventRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (contentCase_ == ContentOneofCase.RegistrationResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(RegistrationResponse);
      }
      if (contentCase_ == ContentOneofCase.WebsocketEventRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(WebsocketEventRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (contentCase_ == ContentOneofCase.RegistrationResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegistrationResponse);
      }
      if (contentCase_ == ContentOneofCase.WebsocketEventRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WebsocketEventRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.RegistrationResponse:
          if (RegistrationResponse == null) {
            RegistrationResponse = new global::Nitric.Proto.Websockets.v1.RegistrationResponse();
          }
          RegistrationResponse.MergeFrom(other.RegistrationResponse);
          break;
        case ContentOneofCase.WebsocketEventRequest:
          if (WebsocketEventRequest == null) {
            WebsocketEventRequest = new global::Nitric.Proto.Websockets.v1.WebsocketEventRequest();
          }
          WebsocketEventRequest.MergeFrom(other.WebsocketEventRequest);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            global::Nitric.Proto.Websockets.v1.RegistrationResponse subBuilder = new global::Nitric.Proto.Websockets.v1.RegistrationResponse();
            if (contentCase_ == ContentOneofCase.RegistrationResponse) {
              subBuilder.MergeFrom(RegistrationResponse);
            }
            input.ReadMessage(subBuilder);
            RegistrationResponse = subBuilder;
            break;
          }
          case 26: {
            global::Nitric.Proto.Websockets.v1.WebsocketEventRequest subBuilder = new global::Nitric.Proto.Websockets.v1.WebsocketEventRequest();
            if (contentCase_ == ContentOneofCase.WebsocketEventRequest) {
              subBuilder.MergeFrom(WebsocketEventRequest);
            }
            input.ReadMessage(subBuilder);
            WebsocketEventRequest = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            global::Nitric.Proto.Websockets.v1.RegistrationResponse subBuilder = new global::Nitric.Proto.Websockets.v1.RegistrationResponse();
            if (contentCase_ == ContentOneofCase.RegistrationResponse) {
              subBuilder.MergeFrom(RegistrationResponse);
            }
            input.ReadMessage(subBuilder);
            RegistrationResponse = subBuilder;
            break;
          }
          case 26: {
            global::Nitric.Proto.Websockets.v1.WebsocketEventRequest subBuilder = new global::Nitric.Proto.Websockets.v1.WebsocketEventRequest();
            if (contentCase_ == ContentOneofCase.WebsocketEventRequest) {
              subBuilder.MergeFrom(WebsocketEventRequest);
            }
            input.ReadMessage(subBuilder);
            WebsocketEventRequest = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WebsocketEventResponse : pb::IMessage<WebsocketEventResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebsocketEventResponse> _parser = new pb::MessageParser<WebsocketEventResponse>(() => new WebsocketEventResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebsocketEventResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Websockets.v1.WebsocketsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketEventResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketEventResponse(WebsocketEventResponse other) : this() {
      switch (other.WebsocketResponseCase) {
        case WebsocketResponseOneofCase.ConnectionResponse:
          ConnectionResponse = other.ConnectionResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketEventResponse Clone() {
      return new WebsocketEventResponse(this);
    }

    /// <summary>Field number for the "connection_response" field.</summary>
    public const int ConnectionResponseFieldNumber = 10;
    /// <summary>
    /// WebsocketDisconnectionResponse disconnection_response = 11;
    /// WebsocketMessageEventResponse message_response = 12;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nitric.Proto.Websockets.v1.WebsocketConnectionResponse ConnectionResponse {
      get { return websocketResponseCase_ == WebsocketResponseOneofCase.ConnectionResponse ? (global::Nitric.Proto.Websockets.v1.WebsocketConnectionResponse) websocketResponse_ : null; }
      set {
        websocketResponse_ = value;
        websocketResponseCase_ = value == null ? WebsocketResponseOneofCase.None : WebsocketResponseOneofCase.ConnectionResponse;
      }
    }

    private object websocketResponse_;
    /// <summary>Enum of possible cases for the "websocket_response" oneof.</summary>
    public enum WebsocketResponseOneofCase {
      None = 0,
      ConnectionResponse = 10,
    }
    private WebsocketResponseOneofCase websocketResponseCase_ = WebsocketResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketResponseOneofCase WebsocketResponseCase {
      get { return websocketResponseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWebsocketResponse() {
      websocketResponseCase_ = WebsocketResponseOneofCase.None;
      websocketResponse_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebsocketEventResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebsocketEventResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConnectionResponse, other.ConnectionResponse)) return false;
      if (WebsocketResponseCase != other.WebsocketResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (websocketResponseCase_ == WebsocketResponseOneofCase.ConnectionResponse) hash ^= ConnectionResponse.GetHashCode();
      hash ^= (int) websocketResponseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (websocketResponseCase_ == WebsocketResponseOneofCase.ConnectionResponse) {
        output.WriteRawTag(82);
        output.WriteMessage(ConnectionResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (websocketResponseCase_ == WebsocketResponseOneofCase.ConnectionResponse) {
        output.WriteRawTag(82);
        output.WriteMessage(ConnectionResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (websocketResponseCase_ == WebsocketResponseOneofCase.ConnectionResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConnectionResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebsocketEventResponse other) {
      if (other == null) {
        return;
      }
      switch (other.WebsocketResponseCase) {
        case WebsocketResponseOneofCase.ConnectionResponse:
          if (ConnectionResponse == null) {
            ConnectionResponse = new global::Nitric.Proto.Websockets.v1.WebsocketConnectionResponse();
          }
          ConnectionResponse.MergeFrom(other.ConnectionResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            global::Nitric.Proto.Websockets.v1.WebsocketConnectionResponse subBuilder = new global::Nitric.Proto.Websockets.v1.WebsocketConnectionResponse();
            if (websocketResponseCase_ == WebsocketResponseOneofCase.ConnectionResponse) {
              subBuilder.MergeFrom(ConnectionResponse);
            }
            input.ReadMessage(subBuilder);
            ConnectionResponse = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 82: {
            global::Nitric.Proto.Websockets.v1.WebsocketConnectionResponse subBuilder = new global::Nitric.Proto.Websockets.v1.WebsocketConnectionResponse();
            if (websocketResponseCase_ == WebsocketResponseOneofCase.ConnectionResponse) {
              subBuilder.MergeFrom(ConnectionResponse);
            }
            input.ReadMessage(subBuilder);
            ConnectionResponse = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WebsocketConnectionEvent : pb::IMessage<WebsocketConnectionEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebsocketConnectionEvent> _parser = new pb::MessageParser<WebsocketConnectionEvent>(() => new WebsocketConnectionEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebsocketConnectionEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Websockets.v1.WebsocketsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketConnectionEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketConnectionEvent(WebsocketConnectionEvent other) : this() {
      queryParams_ = other.queryParams_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketConnectionEvent Clone() {
      return new WebsocketConnectionEvent(this);
    }

    /// <summary>Field number for the "query_params" field.</summary>
    public const int QueryParamsFieldNumber = 1;
    private static readonly pbc::MapField<string, global::Nitric.Proto.Websockets.v1.QueryValue>.Codec _map_queryParams_codec
        = new pbc::MapField<string, global::Nitric.Proto.Websockets.v1.QueryValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Nitric.Proto.Websockets.v1.QueryValue.Parser), 10);
    private readonly pbc::MapField<string, global::Nitric.Proto.Websockets.v1.QueryValue> queryParams_ = new pbc::MapField<string, global::Nitric.Proto.Websockets.v1.QueryValue>();
    /// <summary>
    /// The query params available in the connection request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Nitric.Proto.Websockets.v1.QueryValue> QueryParams {
      get { return queryParams_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebsocketConnectionEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebsocketConnectionEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!QueryParams.Equals(other.QueryParams)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= QueryParams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      queryParams_.WriteTo(output, _map_queryParams_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      queryParams_.WriteTo(ref output, _map_queryParams_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += queryParams_.CalculateSize(_map_queryParams_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebsocketConnectionEvent other) {
      if (other == null) {
        return;
      }
      queryParams_.Add(other.queryParams_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            queryParams_.AddEntriesFrom(input, _map_queryParams_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            queryParams_.AddEntriesFrom(ref input, _map_queryParams_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WebsocketConnectionResponse : pb::IMessage<WebsocketConnectionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebsocketConnectionResponse> _parser = new pb::MessageParser<WebsocketConnectionResponse>(() => new WebsocketConnectionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebsocketConnectionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Websockets.v1.WebsocketsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketConnectionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketConnectionResponse(WebsocketConnectionResponse other) : this() {
      reject_ = other.reject_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketConnectionResponse Clone() {
      return new WebsocketConnectionResponse(this);
    }

    /// <summary>Field number for the "reject" field.</summary>
    public const int RejectFieldNumber = 1;
    private bool reject_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Reject {
      get { return reject_; }
      set {
        reject_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebsocketConnectionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebsocketConnectionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reject != other.Reject) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Reject != false) hash ^= Reject.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Reject != false) {
        output.WriteRawTag(8);
        output.WriteBool(Reject);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Reject != false) {
        output.WriteRawTag(8);
        output.WriteBool(Reject);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Reject != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebsocketConnectionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Reject != false) {
        Reject = other.Reject;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Reject = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Reject = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WebsocketDisconnectionEvent : pb::IMessage<WebsocketDisconnectionEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebsocketDisconnectionEvent> _parser = new pb::MessageParser<WebsocketDisconnectionEvent>(() => new WebsocketDisconnectionEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebsocketDisconnectionEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Websockets.v1.WebsocketsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketDisconnectionEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketDisconnectionEvent(WebsocketDisconnectionEvent other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketDisconnectionEvent Clone() {
      return new WebsocketDisconnectionEvent(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebsocketDisconnectionEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebsocketDisconnectionEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebsocketDisconnectionEvent other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class WebsocketMessageEvent : pb::IMessage<WebsocketMessageEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebsocketMessageEvent> _parser = new pb::MessageParser<WebsocketMessageEvent>(() => new WebsocketMessageEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebsocketMessageEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nitric.Proto.Websockets.v1.WebsocketsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketMessageEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketMessageEvent(WebsocketMessageEvent other) : this() {
      body_ = other.body_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebsocketMessageEvent Clone() {
      return new WebsocketMessageEvent(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private pb::ByteString body_ = pb::ByteString.Empty;
    /// <summary>
    /// Data available on
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebsocketMessageEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebsocketMessageEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Body != other.Body) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Body.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Body.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebsocketMessageEvent other) {
      if (other == null) {
        return;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Body = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Body = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
